<?xml version="1.0"?>
<feed xmlns="http://www.w3.org/2005/Atom">
    <id>http://waltcsz.github.io</id>
    <title>Walt&#39;s Blog • Posts by &#34;blog&#34; category</title>
    <link href="http://waltcsz.github.io" />
    <updated>2023-10-28T23:40:41.000Z</updated>
    <category term="docker" />
    <category term="汇编" />
    <category term="寄存器" />
    <category term="heap" />
    <category term="异架构" />
    <category term="工具" />
    <category term="stack migration" />
    <category term="新生题" />
    <category term="short shellcode" />
    <category term="random" />
    <category term="interger overflow" />
    <category term="shellcode" />
    <category term="format string" />
    <category term="overlap" />
    <category term="unlink" />
    <category term="cdll" />
    <category term="侧信道攻击" />
    <category term="时间差" />
    <category term="full RELRO" />
    <category term="brop" />
    <category term="tcache" />
    <category term="dup" />
    <category term="srop" />
    <category term="orw" />
    <category term="dlresolve" />
    <category term="double free" />
    <category term="fastbin attack" />
    <category term="chunk_extend_and_overlapping" />
    <category term="one_gadget" />
    <category term="malloc_hook" />
    <category term="free_hook" />
    <entry>
        <id>http://waltcsz.github.io/2023/10/hexo%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/</id>
        <title>hexo部署配置</title>
        <link rel="alternate" href="http://waltcsz.github.io/2023/10/hexo%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/"/>
        <content type="html">&lt;h1 id=&#34;下载安装&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#下载安装&#34;&gt;#&lt;/a&gt; 下载安装&lt;/h1&gt;
&lt;p&gt;该软件是在安装 Node.js 后使用 &lt;code&gt;npm install&lt;/code&gt;  安装的。&lt;/p&gt;
&lt;p&gt;在官网下载 Node.js 后，新建文件夹，运行以下命令。&lt;/p&gt;
&lt;figure class=&#34;highlight powershell&#34;&gt;&lt;figcaption data-lang=&#34;PowerShell&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;npm install hexo-&lt;span class=&#34;token function&#34;&gt;cli&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;hexo init&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;h1 id=&#34;git配置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#git配置&#34;&gt;#&lt;/a&gt; Git 配置&lt;/h1&gt;
&lt;p&gt;git 由于之前配置过，所以维持原样。总归就是设置用户名和邮箱，添加登陆密钥。&lt;/p&gt;
&lt;p&gt;而后需要将 &lt;code&gt;_config.yml&lt;/code&gt;  文件中的配置改为如下。&lt;/p&gt;
&lt;figure class=&#34;highlight yaml&#34;&gt;&lt;figcaption data-lang=&#34;YAML&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token key atrule&#34;&gt;deploy&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;type&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; git&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;repository&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; git@github.com&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt;WaltCSZ/waltcsz.github.io.git&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;4&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;  &lt;span class=&#34;token key atrule&#34;&gt;branch&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; master&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这样之后就可以用 &lt;code&gt;hexo d&lt;/code&gt;  将网页部署到 Github Page 了。&lt;/p&gt;
&lt;h1 id=&#34;图片导入解决&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#图片导入解决&#34;&gt;#&lt;/a&gt; 图片导入解决&lt;/h1&gt;
&lt;p&gt;首先为了方便自己管理， &lt;code&gt;_config.yml&lt;/code&gt;  中我设置了 &lt;code&gt;post_asset_folder: true&lt;/code&gt; 。这样每个 md 文件都会有个同目录下对应的文件夹，然后可以将 md 文件用到的图片都放进去。其次 typora 本身也可以设置使用相对目录。&lt;/p&gt;
&lt;p&gt;这听起来很好的。完美闭环。但是，在使用 &lt;code&gt;hexo g&lt;/code&gt;  构建静态网页之后， &lt;code&gt;index.html&lt;/code&gt;  文件是放在 &lt;code&gt;assets&lt;/code&gt;  文件夹里的，也就是与图片等同级。导致引用超链接需要从 &lt;code&gt;./%&amp;#123;filename&amp;#125;/img.png&lt;/code&gt;  变成 &lt;code&gt;./img.png&lt;/code&gt; 。而 hexo 本身不会做这样的更改。（真不知道为啥设计了 &lt;code&gt;post_asset_folder&lt;/code&gt;  选项而没考虑改路径）&lt;/p&gt;
&lt;p&gt;网上大部分人使用的方法是 hexo-assets-image 插件，而我选择了一招 typora 本身的功能。就是设置图片根目录。在文件头添加以下内容。&lt;/p&gt;
&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;figcaption data-lang=&#34;markdown&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token front-matter-block&#34;&gt;&lt;span class=&#34;token punctuation&#34;&gt;---&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;2&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token front-matter yaml language-yaml&#34;&gt;&lt;span class=&#34;token key atrule&#34;&gt;typora-root-url&lt;/span&gt;&lt;span class=&#34;token punctuation&#34;&gt;:&lt;/span&gt; filename&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td data-num=&#34;3&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;&lt;span class=&#34;token punctuation&#34;&gt;---&lt;/span&gt;&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;p&gt;这样对于 typora 文件来说，引用图片的时候地址就均为 &lt;code&gt;./img.png&lt;/code&gt;  了。但可能其他 markdown 软件不支持吧，暂时不管了，反正我也不用。&lt;/p&gt;
&lt;p&gt;然后修改 &lt;code&gt;scaffolds&lt;/code&gt;  文件夹中的模板，在开头加入以下内容，这样使用 &lt;code&gt;hexo new post&lt;/code&gt;  的时候，就可以自动添加图片根目录了。&lt;/p&gt;
&lt;figure class=&#34;highlight markdown&#34;&gt;&lt;figcaption data-lang=&#34;markdown&#34;&gt;&lt;/figcaption&gt;&lt;table&gt;&lt;tr&gt;&lt;td data-num=&#34;1&#34;&gt;&lt;/td&gt;&lt;td&gt;&lt;pre&gt;typora-root-url: &lt;span class=&#34;token comment&#34;&gt;hexo部署配置&lt;/span&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;blockquote&gt;
&lt;p&gt;选择这个方案的原因还是很多的。首先是修改路径的插件有些好像版本有些老，有些版本有漏洞。而自己写 JavaScript 脚本的话，虽说抄抄改改也就可以用了。但我又想到，md 文件里如果每个图片都带了 &lt;code&gt;./%&amp;#123;filename&amp;#125;&lt;/code&gt; ，那改 md 文件名的时候可能又容易出错，所以索性选择修改根目录的方法了。&lt;/p&gt;
&lt;/blockquote&gt;
&lt;h1 id=&#34;主题&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#主题&#34;&gt;#&lt;/a&gt; 主题&lt;/h1&gt;
&lt;p&gt;我也是个有选择困难症的人。选了好久，选了个二次元和简洁风相妥协的 ShokaX 主题。&lt;/p&gt;
&lt;h2 id=&#34;图片设置&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#图片设置&#34;&gt;#&lt;/a&gt; 图片设置&lt;/h2&gt;
&lt;p&gt;该主题会优先使用 &lt;code&gt;source/_data/assets/&lt;/code&gt;  文件夹里的图片来构建网站，包括但不限于头像，图标，付款码，轮换背景图等。将需要的图片按规范命名后放进去。&lt;/p&gt;
&lt;h2 id=&#34;评论系统-waline&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#评论系统-waline&#34;&gt;#&lt;/a&gt; 评论系统 waline&lt;/h2&gt;
&lt;p&gt;待施工&lt;/p&gt;
&lt;h1 id=&#34;域名&#34;&gt;&lt;a class=&#34;markdownIt-Anchor&#34; href=&#34;#域名&#34;&gt;#&lt;/a&gt; 域名&lt;/h1&gt;
&lt;p&gt;有钱了再说。&lt;/p&gt;
</content>
        <updated>2023-10-28T23:40:41.000Z</updated>
    </entry>
</feed>
